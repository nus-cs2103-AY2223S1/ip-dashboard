[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"checkstyle {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    mainClassName \u003d \"duke/Duke\"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":7,"-":39}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * Represents the Duke application.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** Ui object which interacts with the user. **/","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private final Ui UI;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /** Storage object which loads and saves the list of tasks. **/","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    /** TaskList object containing user\u0027s list of tasks. **/","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * Creates a new Duke object.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * @param pathString Relative path to the file containing the list of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    public Duke(String pathString) {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        UI \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"        STORAGE \u003d new Storage(pathString);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        UI.showIsLoading();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"            tasks \u003d new TaskList(STORAGE.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"            UI.showLoadingSuccess();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"            UI.showLoadingError();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * Starts the Duke application.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    public void start() {","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        UI.showWelcome();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"            try {","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"                UI.showPrompt();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"                String fullCommand \u003d scanner.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"                command.execute(tasks, UI, STORAGE);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"                UI.showError(de.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"        Duke duke \u003d new Duke(\"storage/tasks.txt\");","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"        duke.start();","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"njxue":65,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"import duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":" * The Parser parses input from the user and returns the corresponding commands to execute.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":" * ","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"public class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Returns a LocalDateTime object from an appropriately-formatted string.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @param dateTimeString String representation of a LocalDateTime object. ","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *                       The expected format is YYYY-MM-DDTHH:MM or YYYY-MM-DD.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @return LocalDateTime object corresponding to the dateTimeString.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        String[] dateTimeSplit \u003d dateTimeString.split(\"[ T]\");","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        String isoDateFormat \u003d \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        if (dateTimeSplit.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"            isoDateFormat \u003d String.format(\"%sT23:59\", dateTimeSplit[0]);","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"            isoDateFormat \u003d String.format(\"%sT%s\", dateTimeSplit[0], dateTimeSplit[1]);","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        return LocalDateTime.parse(isoDateFormat);","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * Checks if a given string contains only digits.","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * @param str The target string.","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     * @return True if str contains only digits. Returns false otherwise.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    private static boolean isDigit(String str) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        for (char c : str.toCharArray()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"            if (!Character.isDigit(c)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"                return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        return true;","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"     * Parses the full input from the user and returns the correct Command object.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"     * @param fullCommand Full input from the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     * @return Command object corresponding to the user\u0027s input.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If the user provides an empty command, or if the command is not a recognised command.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     * @throws DateTimeException If the string representation of a LocalDateTime cannot be parsed","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     *                          correctly due to incorrect formatting.  ","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"    public static Command parse(String fullCommand) throws DukeException, DateTimeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        String[] fullCommandSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"        String command \u003d fullCommandSplit[0].strip();","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"        String commandArgument \u003d fullCommandSplit.length \u003e 1 ? fullCommandSplit[1].strip() : \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"        if (command.equals(\"\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"            throw new DukeException(\"Command cannot be empty\");","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"                if (commandArgument.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"                    throw new InvalidCommandFormatException(TodoCommand.getFormat());","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"                return new TodoCommand(commandArgument);","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"                String[] argumentSplit \u003d commandArgument.split(\" /by \");","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"                if (argumentSplit.length \u003c 2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"                    throw new InvalidCommandFormatException(DeadlineCommand.getFormat());","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"                String description \u003d argumentSplit[0].strip();","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"                LocalDateTime byDateTime \u003d parseDateTime(argumentSplit[1].strip());","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"                return new DeadlineCommand(description, byDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"                String[] argumentSplit \u003d commandArgument.split(\" /at \");","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"                if (argumentSplit.length \u003c 2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"                    throw new InvalidCommandFormatException(EventCommand.getFormat());","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"                String description \u003d argumentSplit[0].strip();","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"                LocalDateTime atDateTime \u003d parseDateTime(argumentSplit[1].strip());","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"                return new EventCommand(description, atDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"            } else if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"                String commandFormat \u003d command.equals(\"mark\")","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"                        ? MarkCommand.getFormat()","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"                        : command.equals(\"unmark\")","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"                        ? UnmarkCommand.getFormat()","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"                        : DeleteCommand.getFormat();","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"                if (commandArgument.equals(\"\") || !isDigit(commandArgument)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"                    throw new InvalidCommandFormatException(commandFormat);","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"                int taskIndex \u003d Integer.parseInt(commandArgument);","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"                return command.equals(\"mark\")","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"                        ? new MarkCommand(taskIndex)","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"                        : command.equals(\"unmark\")","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"                        ? new UnmarkCommand(taskIndex)","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"                        : new DeleteCommand(taskIndex);","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"                if (commandArgument.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"njxue"},"content":"                    throw new InvalidCommandFormatException(FindCommand.getFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"njxue"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"njxue"},"content":"                return new FindCommand(commandArgument);","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"njxue"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"njxue"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"njxue"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"njxue"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"njxue"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"njxue"},"content":"            throw new DukeException(\"Datetime must be in this format: \"","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"njxue"},"content":"                    + \"\u003cDATE\u003e \u003cTIME\u003e\\n  DATE: YYYY-MM-DD\\n  TIME(optional): HH:MM\");","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"njxue"},"content":"        throw new UnknownCommandException(command);","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":" * Represents the Storage object responsible for loading and saving tasks during a Duke session.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":" * ","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"public class Storage {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    /** Path object representing the relative path to the file to load and save the tasks. **/","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    private final Path PATH;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /** String representation of the relative path to the file to load and save the tasks. **/","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    private final String PATH_STRING;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * Creates a new Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     * @param filePath String representation of the relative path to the file to load and save the tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        this.PATH \u003d Paths.get(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        this.PATH_STRING \u003d PATH.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"        File parent \u003d new File(new File(PATH_STRING).getParent());","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        if (!parent.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"            parent.mkdirs();","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * Loads the task from the file located in the specified path in path.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * @return List of previously saved tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * @throws FileNotFoundException If the file located in path does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        File file \u003d new File(PATH_STRING);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"            Task task \u003d Task.parse(sc.nextLine());","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"        return tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"     * Saves the task to the file located in the specified path in path.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the list of tasks to be saved.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If the file located in path does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"        File file \u003d new File(PATH_STRING);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"                fw.write(task.toFileFormatString() + \"\\n\");","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"            fw.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"            throw new DukeException(\"Unable to write to file :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":79}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents the Ui object responsible for printing messages to the user interface.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"public class Ui {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     * Greets the user when the application is launched.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Hello! I\u0027m Duke. How may I assist you?\");","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * Prints the prompt, which signals the user to key in an input.","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    public void showPrompt() {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"        System.out.print(\"\\n\u003e\u003e\u003e \");","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     * Prints the error message when the previously saved tasks could not be loaded.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        System.out.println(\"FAILED! Could not find storage file containing your tasks\");","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Add a task to generate one!!!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * Prints the success message when all previously saves tasks were loaded.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    public void showLoadingSuccess() {","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Yay! Your tasks were loaded successfully!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     * Prints an error message to the user interface.","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     * @param errorMessage Error message to be printed.","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * Prints the message that signifies the termination of the application.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Goodbye! Hope to see you soon!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     * Prints the Task object, along with the number of tasks, when it is successfully added.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     * @param task Newly added Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to add the new Task into.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"    public void showAddTask(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"        showTask(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"     * Prints the Task object, along with the number of tasks, when it is successfully removed.","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"     * @param task Removed Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to remove the new Task from.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"    public void showDeleteTask(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Okie, I\u0027ve deleted this task: \");","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"        showTask(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"     * Prints the Task object, along with the number of tasks, when it is successfully marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"     * @param task Marked Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the target Task to mark.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"    public void showMarkTask(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Sure! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"        showTask(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"     * Prints the Task object, along with the number of tasks, when it is successfully unmarked.","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"     * @param task Unmarked Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the target Task to unmark.","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"    public void showUnmarkTask(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Sure! I\u0027ve unmarked this task as done: \");","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"        showTask(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"     * Prints the number of Task objects currently in a TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"     * @param tasks Target TaskList","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"njxue"},"content":"    public void showNumTasks(TaskList tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"njxue"},"content":"        System.out.println(\"You have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"njxue"},"content":"     * Prints a Task object, indented by 3 spaces.","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"njxue"},"content":"    public void showTask(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"njxue"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"njxue"},"content":"     * Prints loading message when loading tasks from disk.","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"njxue"},"content":"    public void showIsLoading() {","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"njxue"},"content":"        System.out.println(\"Loading tasks from disk.......\");","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":133}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" * Represents the application terminating command that is executed when the user inputs bye.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"     * Executes the bye command. Terminates the current Duke session.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * Returns true, because bye is an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * @return True, terminating the Duke application.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"        return true;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs a command.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"     * Executes the corresponding command.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"     * Checks if the command is an application terminating command.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * @return True, if the command is an application terminating command, otherwise false.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"   ","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":32}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /** Description of the deadline task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    /** Deadline of the deadline task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * Creates a DeadlineCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @param byDateTime Deadline of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    public DeadlineCommand(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     * Returns the format of the deadline command.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * @return The format of the deadline command.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"        return \"deadline \u003cString\u003e /by \u003cString\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * Executes the deadline command. ","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * Creates and adds a new deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList which the newly created deadline task should be added into.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the newly created deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        Task deadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        ui.showAddTask(deadline, tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     * Returns false, because deadline is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":72}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs delete.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** The index of the Task object in the TaskList to be deleted. */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private int taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * Returns the format of the delete command.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * @return The format of the delete command.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        return \"delete \u003cInteger\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Creates a DeleteCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the Task object in the TaskList to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Executes the delete command. ","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * Deletes the specific Task object in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the task to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks after marking, ","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * or if the taskIndex is not within range of the size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.delete(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        ui.showDeleteTask(task, tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     * Returns false, because delete is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":64}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs event.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /** Description of the event task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    /** Date and time of the event task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    private LocalDateTime atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"     * Creates an EventCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * @param atDateTime Date and time of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    public EventCommand(String description, LocalDateTime atDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     * Returns the format of the event command.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * @return The format of the event command.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        return \"event \u003cString\u003e /at \u003cString\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * Executes the event command. ","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * Creates and adds a new event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList the newly created event task should be added to.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the newly created event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"        Task event \u003d new Event(description, atDateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        tasks.add(event);","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"        ui.showAddTask(event, tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"     * Returns false, because event is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":71}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * Represents a find command which given a search term,","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * finds a list Task objects matching the search term.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /** Search term of the Task to find. */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    private String searchTerm;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * Creates a new FileCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @param searchTerm Search term.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * Returns the format of the find command.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * @return The format of the find command.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        return \"find \u003cString\u003e\";","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     * Executes the find command. ","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Finds a list of Task objects in the TaskList with descriptions that match the ","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * given search term.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to find the Tasks from.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        TaskList foundTasks \u003d tasks.find(searchTerm);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        listCommand.execute(foundTasks, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     * Returns false, because find is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"njxue":62}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs list.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"     * Executes the list command. Prints the list of tasks from the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to be printed.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"        tasks.listTasks();","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Returns false, because deadline is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":38}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs mark.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** The index of the task in the TaskList to be marked. */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private int taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * Returns the format of the mark command.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * @return The format of the mark command.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        return \"mark \u003cInteger\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Creates a MarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @param taskIndex The index of the task in the TaskList to be marked as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Executes the mark command. Deletes the specific task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the task to be marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks after marking, ","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * or if the taskIndex is not within range of the size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.mark(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        ui.showMarkTask(task, tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     * Returns false, because delete is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":64}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** Description of the todo task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * Returns the format of the todo command.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * @return The format of the todo command.","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        return \"todo \u003cString\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Creates a TodoCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Executes the todo command. ","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * Creates and adds a new todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to add the newly created Todo into.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        ui.showAddTask(todo, tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     * Returns false, because todo is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":63}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs unmark.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /** The index of the task in the TaskList to be unmarked. */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    private int taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * Returns the format of the unmark command.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return The format of the unmark command.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"        return \"unmark \u003cInteger\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * Creates an UnmarkCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * @param taskIndex The index of the task in the TaskList to be unmarked as done.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     * Executes the unmark command. Deletes the specific task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the Task to be unmarked.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks after unmarking, ","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * or if the taskIndex is not within range of the size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.unmark(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        ui.showUnmarkTask(task, tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     * Returns false, because delete is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":62}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents an exception for the Duke application.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Returns a DukeException containing the message describing the exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param message Message describing the exception.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":18}},{"path":"src/main/java/duke/exception/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the exception which occurs when the user inputs a correct command, but it is incorrectly formatted.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" * ","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class InvalidCommandFormatException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Returns an InvalidCommandFormatException.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param format Correct format for the command.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public InvalidCommandFormatException(String format) {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(String.format(\"Invalid command format.\\nUsage: %s\", format));","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":18}},{"path":"src/main/java/duke/exception/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the exception which occurs when the user tries to excess a Task object ","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" * from a TaskList via its taskIndex, but the Task object cannot be found.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * ","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"public class TaskIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     * Creates a TaskOutOfBoundsException.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     * @param providedIndex Incorrect task index provided by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"     * @param maxIndex Maximum valid task index, which is also the size of the current TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    public TaskIndexOutOfBoundsException(int providedIndex, int maxIndex) {","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"        super(maxIndex \u003d\u003d 0 ? \"You have no tasks!\"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"                : \"The provided task index \" + providedIndex","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"                + \" is out of range! Accepted Range: [1, \" + maxIndex + \"]\");","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":22}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the exception which occurs when the user inputs an unrecognised command.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" * ","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Returns an UnknownCommandException.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param invalidCommand Invalid command provided by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public UnknownCommandException(String invalidCommand) {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(invalidCommand + \" is not a valid command!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":18}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    /** Deadline of the deadline task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param byDateTime Deadline of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    public Deadline(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Returns the human-readable, string representation of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @return Human-readable, string representation of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        String formattedDateTime \u003d byDateTime.format(formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formattedDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * Returns the formatted deadline task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @return Formatted deadline task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"        return \"D\" + super.toFileFormatString() + getDescription() + \"|\" + byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents a task occurring at a date and time.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    /** Date and time of the event task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    private LocalDateTime atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * Creates an Event object.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param atDateTime Date and time of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    public Event(String description, LocalDateTime atDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Returns the human-readable, string representation of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @return Human-readable, string representation of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        String formattedDateTime \u003d atDateTime.format(formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return String.format(\"[E]%s (by: %s)\", super.toString(), formattedDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * Returns the formatted event task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @return Formatted event task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"        return \"E\" + super.toFileFormatString() + getDescription() + \"|\" + atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" * Represents a task.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    /** Description of the task. **/","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** Describes if the task is completed or not */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * Returns a Task object from a string.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     * @param fileFormatString String representation of the Task object, in file format. ","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     * @return New Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    public static Task parse(String fileFormatString) {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        String[] taskSplit \u003d fileFormatString.split(\"\\\\|\");","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"        String taskSymbol \u003d taskSplit[0];","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        boolean isComplete \u003d taskSplit[1].equals(\"1\");","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"        String taskDescription \u003d taskSplit[2];","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"        Task task;","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        if (taskSymbol.equals(\"T\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"            task \u003d new Todo(taskDescription);","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"        } else if (taskSymbol.equals(\"D\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"            LocalDateTime byDateTime \u003d Parser.parseDateTime(taskSplit[3]);","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"            task \u003d new Deadline(taskDescription, byDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"            LocalDateTime atDateTime \u003d Parser.parseDateTime(taskSplit[3]);","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"            task \u003d new Event(taskDescription, atDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        if (isComplete) {","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * Returns the status icon, which represents whether the task is completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"     * @return \u0027X\u0027 if the task is completed, returns a whitespace otherwise.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"     * Unmarks the test as completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-15"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"     * Returns string representation of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"     * @return Description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"        return description;","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"     * Returns the formatted task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"     * @return Formatted task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"        int i \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"        return \"|\" + i + \"|\";","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":108}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" * Represents the list of tasks added by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"public class TaskList {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    /** List of tasks */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     * Creates a TaskList object from a List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * Creates a TaskList object containing an empty List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     * Adds a Task object to the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"     * @param task Task object to be added.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * Removes the Task object at index taskIndex from the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the task in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * @return The deleted Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * @throws TaskIndexOutOfBoundsException If the taskIndex is not within range of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    public Task delete(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        if (!isValidIndex(taskIndex)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"            throw new TaskIndexOutOfBoundsException(taskIndex, this.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        Task task \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     * Marks the Task object at index taskIndex in the List of tasks as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the task in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"     * @return The Task object marked as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"     * @throws TaskIndexOutOfBoundsException If the taskIndex is not within range of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    public Task mark(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"        if (!isValidIndex(taskIndex)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"            throw new TaskIndexOutOfBoundsException(taskIndex, this.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"     * Unmarks the Task object at index taskIndex in the List of tasks as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"     * In other words, marks the Task object as incomplete.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the task in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"     * @return The Task object unmarked as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"     * @throws TaskIndexOutOfBoundsException If the taskIndex is not within range of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"    public Task unmark(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"        if (!isValidIndex(taskIndex)) {","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"            throw new TaskIndexOutOfBoundsException(taskIndex, this.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"     * Returns the number of tasks in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"     * @return Size of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"    public int size() {","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"     * Filters the list of Task objects in the TaskList, keep Task objects with","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"     * descriptions matching the search term. Returns the list of found Task objects as a new ","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"     * TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"     * @param searchTerm Search term used to find the list of matching Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"     * @return TaskList containing the list of found Task objects.","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"    public TaskList find(String searchTerm) {","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"        List\u003cTask\u003e foundTasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"            if (task.getDescription().contains(searchTerm)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"                foundTasksList.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"        return new TaskList(foundTasksList);","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"njxue"},"content":"     * Returns the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"njxue"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"njxue"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"njxue"},"content":"        return tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"njxue"},"content":"     * Prints all the tasks in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"njxue"},"content":"    public void listTasks() {","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"njxue"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"njxue"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"njxue"},"content":"            System.out.println(\"       YOU HAVE NO TASKS\");","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"njxue"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"njxue"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"njxue"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"njxue"},"content":"                System.out.printf(\"   %d.%s%n\", i + 1, task);","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":140,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"njxue"},"content":"     * Checks if index is a valid index of a Task object in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"njxue"},"content":"     * @param index Index of a Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"njxue"},"content":"     * @return True, if index is a valid index.","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":145,"author":{"gitId":"njxue"},"content":"    public boolean isValidIndex(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":146,"author":{"gitId":"njxue"},"content":"        return index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d this.size();","lastModifiedDate":"2022-08-20"},{"lineNumber":147,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":148}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents a task without date and time.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Creates a Todo object.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     * ","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * Returns the human-readable, string representation of the todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return Human-readable, string representation of the todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Returns the formatted todo task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @return Formatted todo task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return \"T\" + super.toFileFormatString() + getDescription();","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":38}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public void parseInput_whiteSpace_exceptionThrown() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"            assertTrue(Parser.parse(\"\") instanceof Command);","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"            assertEquals(\"Command cannot be empty\", de.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    ","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public void parseInput_bye_returnByeCommand() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"njxue":29}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"    public void printTodo_normalInput_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"        assertEquals(\"[T][ ] a todo task\", new Todo(\"a todo task\").toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    public void saveTodo_normalInput_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"        assertEquals(\"T|0|a todo task\", new Todo(\"a todo task\").toFileFormatString());","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"njxue":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"todo","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"todo some todo task","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"deadline ","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"deadline task with deadline, using default time","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"deadline task with deadline, using default time /by ","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"deadline task with deadline, using default time /by 2022-02-02","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"deadline task with strict deadline /by 2022-02-02 07:17","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"event some event, using default time","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"event some event, using default time /at","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"event some event, using default time /at 2022-02-02","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"event some event, using strict time /at 2022-02-02 07:17","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"mark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"mark","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"mark foo","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"mark 999","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"find","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"find task","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"find deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"find event","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"find default","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"find strict","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"find foobarbaz","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"unmark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"unmark","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"unmark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"mark foo","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"unmark 999","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"delete 0","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"delete 999","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"delete","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"foo","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"bar","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"find","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":49}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"njxue":2,"-":19}}]

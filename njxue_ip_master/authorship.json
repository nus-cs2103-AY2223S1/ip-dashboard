[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"javafx {","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"checkstyle {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":26,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.exception.FileCorruptedException;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.util.Error;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":" * Represents the Duke application.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"public class Duke {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    /** Ui object which prints the contents in the duke dialog. */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /** Storage object which loads and saves the list of tasks. */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /** TaskList object containing user\u0027s list of tasks. */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     * Creates a new Duke object.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    public Duke() {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"        storage \u003d new Storage(\"storage/tasks.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"        } catch (FileNotFoundException | FileCorruptedException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * Parses the user\u0027s input and returns the corresponding response from the duke chat-bot. If the user inputs an","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * application terminating command (eg. the bye command), the application window closes.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     * @param input Full user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     * @return Response from the duke chat-bot.","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"            if (command.isExit()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"                Platform.exit();","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"            return new Error(de.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     * Returns the greeting message from duke.","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     * @return Duke greeting message.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"    public Response greetUser() {","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"        return new Success(ui.greetingMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"njxue":72,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.gui.Main;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class Launcher {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"njxue":13}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * Represents the application terminating command that is executed when the user inputs bye.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * Executes the bye command. Terminates the current Duke session.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        return new Success(\"^_^ Goodbye!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Returns the format of the bye command.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @return The format of the bye command.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        return \"bye\";","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Returns true, because bye is an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * @return True, terminating the Duke application.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"        return true;","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":47}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs a command.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * Executes the corresponding command.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the list of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If an exception occurs.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public abstract Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Checks if the command is an application terminating command.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @return True, if the command is an application terminating command, otherwise false.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":33}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /** Description of the deadline task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    /** Deadline of the deadline task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Creates a DeadlineCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * @param byDateTime Deadline of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    public DeadlineCommand(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Returns the format of the deadline command.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * @return The format of the deadline command.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"        return \"deadline \u003cString\u003e /by \u003cString\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * Executes the deadline command. Creates and adds a new deadline task.","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList which the newly created deadline task should be added into.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks, or if TaskList cannot be properly","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     *              sorted.","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        Task deadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        tasks.sort();","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"        String message \u003d ui.taskAddedMessage(deadline, tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"        return new Success(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     * Returns false, because deadline is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":76}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs delete.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    /** The index of the Task object in the TaskList to be deleted. */","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    private int taskIndex;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * Creates a DeleteCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the Task object in the TaskList to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * Returns the format of the delete command.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     * @return The format of the delete command.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return \"delete \u003cInteger\u003e\";","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * Executes the delete command. Deletes the specific Task object in the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the task to be deleted.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks after deleting,","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     *              or if the taskIndex is not within range of the size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.delete(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        String message \u003d ui.taskDeletedMessage(task, tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        return new Success(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * Returns false, because delete is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":66}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs event.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /** Description of the event task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    /** Date and time of the event task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    private LocalDateTime atDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Creates an EventCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * @param atDateTime Date and time of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    public EventCommand(String description, LocalDateTime atDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Returns the format of the event command.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * @return The format of the event command.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"        return \"event \u003cString\u003e /at \u003cString\u003e\";","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * Executes the event command. Creates and adds a new event task.","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList the newly created event task should be added to.","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks, or if TaskList cannot be properly","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     *              sorted.","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        Task event \u003d new Event(description, atDateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        tasks.add(event);","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        tasks.sort();","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"        String message \u003d ui.taskAddedMessage(event, tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"        return new Success(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     * Returns false, because event is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":76}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * Represents a find command which given a search term, finds a list Task objects matching the search term.","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    /** Search term of the Task to find. */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    private String searchTerm;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * Creates a new FileCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * @param searchTerm Search term.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Returns the format of the find command.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @return The format of the find command.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"        return \"find \u003cString\u003e\";","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     * Executes the find command. Finds a list of Task objects in the TaskList with descriptions that match the given","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     * search term.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to find the Tasks from.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"        TaskList foundTasks \u003d tasks.find(searchTerm);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        return listCommand.execute(foundTasks, ui, storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     * Returns false, because find is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"njxue":61}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs list.","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * Executes the list command. Prints the list of tasks from the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to be printed.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        return new Success(ui.getPrettyTaskList(tasks));","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Returns the format of the list command.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @return The format of the list command.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        return \"list\";","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * Returns false, because list is not an application terminating command.","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":47}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs mark.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    /** The index of the task in the TaskList to be marked. */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    private int taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * Creates a MarkCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     * @param taskIndex The index of the task in the TaskList to be marked as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * Returns the format of the mark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     * @return The format of the mark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return \"mark \u003cInteger\u003e\";","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * Executes the mark command. Deletes the specific task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the task to be marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks after marking,","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     *              or if the taskIndex is not within range of the size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.mark(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        String message \u003d ui.taskMarkedMessage(task, tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        return new Success(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * Returns false, because mark is not an application terminating command.","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":66}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.enums.SortMetric;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.enums.SortOrder;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs sort.","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /** Order of the tasks to sort a TaskList by. */","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    private SortOrder sortOrder;","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    /** Measurement used to determine the order of the tasks in a TaskList. */","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    private SortMetric sortMetric;","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * Returns a SortCommand with default sortOrder and sortMetric, which is ascending order and deadline metric","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * respectively.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public SortCommand() {","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        this.sortOrder \u003d SortOrder.ASCENDING;","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        this.sortMetric \u003d SortMetric.DEADLINE;","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * Returns a SortCommand with default sortOrder, which is ascending order, and a given sortMetric.","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     * @param sortMetric Measurement used to determine the order of the tasks in a TaskList.","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public SortCommand(SortMetric sortMetric) {","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        this.sortOrder \u003d SortOrder.ASCENDING;","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        this.sortMetric \u003d sortMetric;","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * Returns a SortCommand with default sortMetric, which is the task deadline, and a given sortOrder.","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param sortOrder Order of the tasks to sort a TaskList by.","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    public SortCommand(SortOrder sortOrder) {","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"        this.sortMetric \u003d SortMetric.DEADLINE;","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     * Returns a SortCommand with a given sortOrder and sortMetric.","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     * @param sortOrder Order of the tasks to sort a TaskList by.","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     * @param sortMetric Measurement used to determine the order of the tasks in a TaskList.","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"    public SortCommand(SortOrder sortOrder, SortMetric sortMetric) {","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"        this.sortMetric \u003d sortMetric;","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"     * Executes the mark command. Sorts the TaskList according to the sortMetric and sortOrder.","lastModifiedDate":"2022-09-07"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     * @param tasks The TaskList to be sorted.","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-09-07"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks, or if TaskList cannot be properly","lastModifiedDate":"2022-09-07"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"     *              sorted.","lastModifiedDate":"2022-09-07"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"        tasks.setSortMetric(sortMetric);","lastModifiedDate":"2022-09-07"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"        tasks.setSortOrder(sortOrder);","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"        tasks.sort();","lastModifiedDate":"2022-09-07"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"        return new Success(ui.getPrettyTaskList(tasks));","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"     * Returns the format of the sort command.","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"     * @return The format of the sort command.","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"        return \"sort \u003cORDER\u003e \u003cMETRIC\u003e\";","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"     * Returns false, because sort is not an application terminating command.","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-09-07"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-07"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-09-07"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"njxue":99}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs todo.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /** Description of the todo task. */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * Creates a TodoCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * Returns the format of the todo command.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     * @return The format of the todo command.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        return \"todo \u003cString\u003e\";","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * Executes the todo command. Creates and adds a new todo task.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to add the newly created Todo into.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks, or if TaskList cannot be properly","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     *              sorted.","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        tasks.sort();","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"        String message \u003d ui.taskAddedMessage(todo, tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        return new Success(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"     * Returns false, because todo is not an application terminating command.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":69}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.util.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.util.Success;","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * Represents the command that is executed when the user inputs unmark.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    /** The index of the task in the TaskList to be unmarked. */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    private int taskIndex;","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * Creates an UnmarkCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     * @param taskIndex The index of the task in the TaskList to be unmarked as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * Returns the format of the unmark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     * @return The format of the unmark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return \"unmark \u003cInteger\u003e\";","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     * Executes the unmark command. Deletes the specific task in the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the Task to be unmarked.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param ui Ui object which interacts with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param storage Storage object which loads and saves tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * @return A Success Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If storage object is unable to save the list of tasks after unmarking,","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     *              or if the taskIndex is not within range of the size of the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    public Response execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.unmark(taskIndex);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        String message \u003d ui.taskUnmarkedMessage(task, tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        return new Success(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * Returns false, because unmark is not an application terminating command.","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":66}},{"path":"src/main/java/duke/enums/SortMetric.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.enums;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents a metric to sort the TaskList by.","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public enum SortMetric {","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    DEADLINE,","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"    DATE_ADDED,","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"    DESCRIPTION,","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    TYPE;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    /** Command argument representing the deadline metric. */","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    private static final String DEADLINE_STRING \u003d \"deadline\";","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** Command argument representing the date added metric. */","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private static final String DATE_ADDED_STRING \u003d \"new\";","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /** Command argument representing the task description metric. */","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    private static final String DESCRIPTION_STRING \u003d \"des\";","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /** Command argument representing the task type metric. */","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    private static final String TYPE_STRING \u003d \"type\";","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"     * Returns a SortMetric by parsing the command argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * @param str Command argument representing the SortMetric.","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * @return SortMetric corresponding to the command argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If the command argument does not match any of the metrics.","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    public static SortMetric parse(String str) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        switch (str) {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"        case DEADLINE_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"            return DEADLINE;","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        case DATE_ADDED_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"            return DATE_ADDED;","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        case DESCRIPTION_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"            return DESCRIPTION;","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        case TYPE_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"            return TYPE;","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"        default:","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(SortCommand.getFormat());","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * Checks if a command argument corresponds to any of the sort metrics.","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     * @param str Command argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     * @return True, if the command argument corresponds to one of the sort metrics.","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"    public static boolean isValidMetric(String str) {","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        switch (str) {","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        case DEADLINE_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"        case DATE_ADDED_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"        case DESCRIPTION_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        case TYPE_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"            return true;","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        default:","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"            return false;","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"njxue":63}},{"path":"src/main/java/duke/enums/SortOrder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.enums;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents the order of the tasks to sort the TaskList by.","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public enum SortOrder {","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    ASCENDING,","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"    DESCENDING;","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    /** Command argument representing the ascending order. */","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    private static final String ASCENDING_STRING \u003d \"A\";","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    /** Command argument representing the descending order. */","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    private static final String DESCENDING_STRING \u003d \"D\";","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * Returns a SortOrder by parsing the command argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     * @param str Command argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return SortOrder corresponding to the command argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If the command argument does not match any of the sort orders.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public static SortOrder parse(String str) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        if (str.equals(ASCENDING_STRING)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"            return ASCENDING;","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"        } else if (str.equals(DESCENDING_STRING)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"            return DESCENDING;","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(SortCommand.getFormat());","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"     * Checks if a command argument corresponds to any of the sort orders.","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     * @param str Command argument.","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     * @return True, if the command argument corresponds to one of the sort orders.","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"    public static boolean isValidOrder(String str) {","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        switch (str) {","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"        case ASCENDING_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"        case DESCENDING_STRING:","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"            return true;","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"        default:","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"            return false;","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"njxue":50}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents an exception for the Duke application.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Returns a DukeException containing the message describing the exception.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param message Message describing the exception.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":18}},{"path":"src/main/java/duke/exception/FileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the exception which occurs when an invalid character is read from a storage file.","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.2","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class FileCorruptedException extends DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Returns a FileCorruptedException.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param message Message describing the exception.","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public FileCorruptedException(String message) {","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(message);","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"njxue":18}},{"path":"src/main/java/duke/exception/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the exception which occurs when the user inputs a correct command, but it is incorrectly formatted.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class InvalidCommandFormatException extends DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Returns an InvalidCommandFormatException.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param format Correct format for the command.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public InvalidCommandFormatException(String format) {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(String.format(\"Invalid command format.\\nUsage: %s\", format));","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":18}},{"path":"src/main/java/duke/exception/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the exception which occurs when the user tries to excess a Task object from a TaskList via its taskIndex,","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" * but the Task object cannot be found.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"public class TaskIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     * Creates a TaskOutOfBoundsException.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     * @param providedIndex Incorrect task index provided by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"     * @param maxIndex Maximum valid task index, which is also the size of the current TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    public TaskIndexOutOfBoundsException(int providedIndex, int maxIndex) {","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"        super(maxIndex \u003d\u003d 0 ? \"You have no tasks!\"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"                : \"The provided task index \" + providedIndex","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"                + \" is out of range! Accepted Range: [1, \" + maxIndex + \"]\");","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":22}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.exception;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the exception which occurs when the user inputs an unrecognised command.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Returns an UnknownCommandException.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param invalidCommand Invalid command provided by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public UnknownCommandException(String invalidCommand) {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(\"[\" + invalidCommand + \"] is not a valid command!\");","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":18}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.gui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.gui.controller.MainWindow;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    /** Duke object associated with the application. */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    /** Starts the application. */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"            scene.getStylesheets().add(\"/view/styles.css\");","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"            stage.getIcons().add(new Image(\"/images/doge.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"            stage.setTitle(\"Doge\");","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"            stage.show();","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"njxue":39}},{"path":"src/main/java/duke/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.gui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents the Ui object responsible for printing messages to the graphic user interface.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"public class Ui {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    private enum Divider {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"        THICK_DIVIDER(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"),","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"        THIN_DIVIDER(\"-----------------------------------------------\");","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"        private String divider;","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"        /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"         * Returns a divider.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"         * @param divider String representation of the divider.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"         */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        private Divider(String divider) {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"            this.divider \u003d divider;","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        /**","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"         * Returns the string representation of the divider.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"         * @return String representation of the divider.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"         */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"        @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        public String toString() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"            return divider;","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    /** Left padding to a string for pretty printing. */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    private String leftPadding \u003d \"   \";","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * Returns the greeting message when the application is launched.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    public String greetingMessage() {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"        String logo \u003d \"    __                    \\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"                + \".--|  |.-----.-----.-----.\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"                + \"|  _  ||  _  |  _  |  -___|__\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"                + \"|_____||_____|__   |________|\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"                + \"            |______|      \\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        String greeting \u003d \"Henlo! I\u0027m \\n\" + addBetweenDividers(Divider.THICK_DIVIDER, logo) + \"How may I assist you?\";","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        return greeting;","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     * Returns the success message when a task has been successfully added.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     * @param task Newly added Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to add the new Task into.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"    public String taskAddedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        return String.format(\"Got it. I\u0027ve added this task ^_^: \\n%s%s\",","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"                addBetweenDividers(Divider.THIN_DIVIDER, getIndentedTask(task)), getNumTasks(tasks));","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     * Returns the success message when a task has been successfully deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     * @param task Removed Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList to remove the new Task from.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"    public String taskDeletedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"        return String.format(\"Okie. I\u0027ve deleted this task \u003e_\u003e: \\n%s%s\",","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"                addBetweenDividers(Divider.THIN_DIVIDER, getIndentedTask(task)), getNumTasks(tasks));","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"     * Returns the success message when a task has been successfully marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"     * @param task Marked Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the target Task to mark.","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"    public String taskMarkedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"        return String.format(\"Sure! I\u0027ve marked this task as done ^O^: \\n%s%s\",","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"                addBetweenDividers(Divider.THIN_DIVIDER, getIndentedTask(task)), getNumTasks(tasks));","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"     * Returns the success message when a task has been successfully unmarked.","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"     * @param task Unmarked Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the target Task to unmark.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"    public String taskUnmarkedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"        return String.format(\"Sure! I\u0027ve unmarked this task as done ^O^: \\n%s%s\",","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"                addBetweenDividers(Divider.THIN_DIVIDER, getIndentedTask(task)), getNumTasks(tasks));","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"     * Returns the number of tasks in a TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"     * @param tasks Target TaskList","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"    private String getNumTasks(TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"        return \"You have [\" + tasks.getSize() + \"] tasks in the list O_O\";","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"     * Returns the string representation of a Task, left padded with three spaces.","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"    private String getIndentedTask(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"        return leftPadding + task;","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"     * Returns the string representation of the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"njxue"},"content":"     * @param tasks Target TaskList","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"njxue"},"content":"     * @return String representation of the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"njxue"},"content":"    public String getPrettyTaskList(TaskList tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"njxue"},"content":"        String tasksList \u003d addBetweenDividers(Divider.THICK_DIVIDER, tasks.toString());","lastModifiedDate":"2022-09-11"},{"lineNumber":121,"author":{"gitId":"njxue"},"content":"        return String.format(\"Your tasks: [%d] \\n%s\", tasks.getSize(), tasksList);","lastModifiedDate":"2022-09-11"},{"lineNumber":122,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"njxue"},"content":"     * Returns a string that is between two upper and lower dividers.","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"njxue"},"content":"     * @param divider Divider sandwiching the given string.","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"njxue"},"content":"     * @param string String to be put between the dividers.","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"njxue"},"content":"     * @return String that is between two upper and lower dividers.","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"njxue"},"content":"    public String addBetweenDividers(Divider divider, String string) {","lastModifiedDate":"2022-08-28"},{"lineNumber":132,"author":{"gitId":"njxue"},"content":"        return String.format(\"%s\\n%s\\n%s\\n\", divider, string, divider);","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":134}},{"path":"src/main/java/duke/gui/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.gui.controller;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    private static final String ERROR_BACKGROUND_COLOR \u003d \"#9F0000\";","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    private static final String SUCCESS_BACKGROUND_COLOR \u003d \"#0B82C5\";","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    private static final String USER_BACKGROUND_COLOR \u003d \"white\";","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    /** Text section of the dialog. */","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    private Text dialog;","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    /** Display picture of the dialog. */","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    private HBox dialogContainer;","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    private HBox chatContainer;","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     * Returns a DialogBox with text and a display picture.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     * @param text","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * @param img Display picture of the dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(chatContainer.getChildren());","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"        chatContainer.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"     * Returns a dialog representing the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"     * @param text Text of the dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"     * @param img Display picture of the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"     * @return DialogBox FXML element representing the user\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"        dialogBox.setBackgroundColor(USER_BACKGROUND_COLOR);","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"        return dialogBox;","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"     * Returns a dialog representing the duke chat-bot.","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"     * @param response Text of the dialog.","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"     * @param img Display picture of the duke chat-bot.","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"     * @return DialogBox FXML element representing the chat-bot\u0027s dialog.","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"    public static DialogBox getDukeDialog(Response response, Image img) {","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"        boolean isError \u003d response.isError();","lastModifiedDate":"2022-09-11"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"        DialogBox dialogBox \u003d new DialogBox(response.getMessage(), img);","lastModifiedDate":"2022-09-11"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"        dialogBox.flip();","lastModifiedDate":"2022-09-11"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"        dialogBox.dialog.setFill(Color.WHITE);","lastModifiedDate":"2022-09-11"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"        if (isError) {","lastModifiedDate":"2022-09-11"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"            dialogBox.setBackgroundColor(ERROR_BACKGROUND_COLOR);","lastModifiedDate":"2022-09-11"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"        } else {","lastModifiedDate":"2022-09-11"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"            dialogBox.setBackgroundColor(SUCCESS_BACKGROUND_COLOR);","lastModifiedDate":"2022-09-11"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"        return dialogBox;","lastModifiedDate":"2022-09-11"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"     * Sets the background color of the dialog box.","lastModifiedDate":"2022-09-11"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"     * @param color Background color of the dialog box.","lastModifiedDate":"2022-09-11"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"    private void setBackgroundColor(String color) {","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"        this.dialogContainer.setStyle(\"-fx-background-color: \" + color);","lastModifiedDate":"2022-09-11"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"njxue":114}},{"path":"src/main/java/duke/gui/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.gui.controller;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import duke.util.Response;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** Display image of the client. */","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/angrydoge.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /** Display image of the duke chat-bot. */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/smirkdog.png\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    /** Duke object associated with the JavaFx application. */","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     * Scrolls the ScrollPane automatically to the bottom.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * Initialises the duke object, then displays the greet message.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"        DialogBox greetingDialog \u003d DialogBox.getDukeDialog(duke.greetUser(), dukeImage);","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        dialogContainer.getChildren().addAll(greetingDialog);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"    @FXML","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"        Response response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"        );","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"njxue":65}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * @param byDateTime Deadline of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    public Deadline(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"        super(description, byDateTime);","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     * Returns the human-readable, string representation of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"     * @return Human-readable, string representation of the deadline task.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"        String formattedDateTime \u003d getDateTime().format(formatter);","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formattedDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"     * Returns the formatted deadline task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     * @return Formatted deadline task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        return \"D\" + super.toFileFormatString() + getDescription() + \"|\" + getDateTime();","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * Represents a task occurring at a date and time.","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     * Creates an Event object.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * @param atDateTime Date and time of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    public Event(String description, LocalDateTime atDateTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"        super(description, atDateTime);","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"     * Returns the human-readable, string representation of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"     * @return Human-readable, string representation of the event task.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"        String formattedDateTime \u003d getDateTime().format(formatter);","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), formattedDateTime);","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"     * Returns the formatted event task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     * @return Formatted event task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        return \"E\" + super.toFileFormatString() + getDescription() + \"|\" + getDateTime();","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import duke.exception.FileCorruptedException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":" * Represents a task.","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    /** Icon to represent that a task is completed. */","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    private static final String COMPLETED_ICON \u003d \"X\";","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    /** Icon to represent that a task is not completed. */","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"    private static final String INCOMPLETE_ICON \u003d \" \";","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /** Description of the task. */","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    private String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    /** Describes if the task is completed or not. */","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    /** Date and time the task occurs or to be completed by. */","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    /** Date and time the task was added to the TaskList. */","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    private LocalDateTime dateAdded \u003d LocalDateTime.now();","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Creates a Task object not associated with a date and time.","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        dateTime \u003d LocalDateTime.MAX;","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"     * Creates a Task object associated with a date and time.","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * @param dateTime Date and time of the task.","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"    public Task(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"     * Returns a Task object from a string.","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     * @param fileFormatString String representation of the Task object, in file format.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     * @return New Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"    public static Task parse(String fileFormatString) throws FileCorruptedException {","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        String[] taskSplit \u003d fileFormatString.split(\"\\\\|\");","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        assert(taskSplit.length \u003e\u003d 3);","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"        String taskSymbol \u003d taskSplit[0];","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"        boolean isComplete \u003d taskSplit[1].equals(COMPLETED_ICON);","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"        String taskDescription \u003d taskSplit[2];","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"        Task task;","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"        if (taskSymbol.equals(\"T\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"            task \u003d new Todo(taskDescription);","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        } else if (taskSymbol.equals(\"D\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"            assert(taskSplit.length \u003d\u003d 4);","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"            LocalDateTime byDateTime \u003d Parser.parseDateTime(taskSplit[3]);","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"            task \u003d new Deadline(taskDescription, byDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"        } else if (taskSymbol.equals(\"E\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"            assert(taskSplit.length \u003d\u003d 4);","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"            LocalDateTime atDateTime \u003d Parser.parseDateTime(taskSplit[3]);","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"            task \u003d new Event(taskDescription, atDateTime);","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"        } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"            throw new FileCorruptedException(\"Unable to read [\" + taskSymbol + \"] from file.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"        if (isComplete) {","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"     * Returns the status icon, which represents whether the task is completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"     * @return \u0027X\u0027 if the task is completed, returns a whitespace otherwise.","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"        return isDone ? COMPLETED_ICON : INCOMPLETE_ICON;","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"     * Unmarks the test as completed.","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"     * Returns string representation of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":117,"author":{"gitId":"njxue"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":119,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"njxue"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"njxue"},"content":"     * @return Description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"njxue"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"njxue"},"content":"        return description;","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":130,"author":{"gitId":"njxue"},"content":"     * Returns the deadline or time of the task.","lastModifiedDate":"2022-09-06"},{"lineNumber":131,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":132,"author":{"gitId":"njxue"},"content":"     * @return Deadline or time of the task.","lastModifiedDate":"2022-09-06"},{"lineNumber":133,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":134,"author":{"gitId":"njxue"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-09-06"},{"lineNumber":135,"author":{"gitId":"njxue"},"content":"        return dateTime;","lastModifiedDate":"2022-09-06"},{"lineNumber":136,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":137,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":138,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":139,"author":{"gitId":"njxue"},"content":"     * Returns the date and time the task was added.","lastModifiedDate":"2022-09-07"},{"lineNumber":140,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":141,"author":{"gitId":"njxue"},"content":"     * @return Date and time the task was added.","lastModifiedDate":"2022-09-07"},{"lineNumber":142,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":143,"author":{"gitId":"njxue"},"content":"    public LocalDateTime getDateAdded() {","lastModifiedDate":"2022-09-07"},{"lineNumber":144,"author":{"gitId":"njxue"},"content":"        return dateAdded;","lastModifiedDate":"2022-09-07"},{"lineNumber":145,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":146,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":147,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"njxue"},"content":"     * Returns the formatted task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"njxue"},"content":"     * @return Formatted task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":153,"author":{"gitId":"njxue"},"content":"        String icon \u003d getStatusIcon();","lastModifiedDate":"2022-09-06"},{"lineNumber":154,"author":{"gitId":"njxue"},"content":"        return \"|\" + icon + \"|\";","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":156,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":156}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.enums.SortMetric;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.enums.SortOrder;","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import duke.exception.TaskIndexOutOfBoundsException;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":" * Represents the list of tasks added by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"public class TaskList {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"    /** List of tasks. */","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    /** Order of the tasks to sort by. */","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    private SortOrder sortOrder \u003d SortOrder.ASCENDING;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    /** Measurement used to determine the order of the tasks. */","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    private SortMetric sortMetric \u003d SortMetric.DEADLINE;","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     * Creates a TaskList object from a List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     * Creates a TaskList object containing an empty List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"     * Adds a Task object to the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * @param task Task object to be added.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"        assert(task !\u003d null);","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"     * Removes the Task object at index taskIndex from the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the task in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"     * @return The deleted Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"     * @throws TaskIndexOutOfBoundsException If the taskIndex is not within range of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    public Task delete(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"        checkIsValidIndex(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"        Task task \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"     * Marks the Task object at index taskIndex in the List of tasks as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the task in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"     * @return The Task object marked as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"     * @throws TaskIndexOutOfBoundsException If the taskIndex is not within range of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"    public Task mark(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"        checkIsValidIndex(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"        assert(taskIndex - 1 \u003e\u003d 0 \u0026\u0026 taskIndex - 1 \u003c getSize());","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"     * Unmarks the Task object at index taskIndex in the List of tasks as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"     * In other words, marks the Task object as incomplete.","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"     * @param taskIndex Index of the task in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"     * @return The Task object unmarked as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"     * @throws TaskIndexOutOfBoundsException If the taskIndex is not within range of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"    public Task unmark(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"        checkIsValidIndex(taskIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"        assert(taskIndex - 1 \u003e\u003d 0 \u0026\u0026 taskIndex - 1 \u003c getSize());","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"        Task task \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"     * Sorts the list of tasks in order of ascending date and time.","lastModifiedDate":"2022-09-06"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"    public void sort() throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-07"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"        switch (sortMetric) {","lastModifiedDate":"2022-09-07"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-07"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"            // Sort by the task deadline or event time.","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"            tasks.sort(Comparator.comparing(Task::getDateTime));","lastModifiedDate":"2022-09-07"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"            break;","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"        case DATE_ADDED:","lastModifiedDate":"2022-09-07"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"            // Sort by the date the tasks were added.","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"            tasks.sort(Comparator.comparing(Task::getDateAdded));","lastModifiedDate":"2022-09-07"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"            break;","lastModifiedDate":"2022-09-07"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"        case TYPE:","lastModifiedDate":"2022-09-07"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"            // Sort by task types.","lastModifiedDate":"2022-09-07"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"            tasks.sort(Comparator.comparing(Task::toString));","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"            break;","lastModifiedDate":"2022-09-07"},{"lineNumber":115,"author":{"gitId":"njxue"},"content":"        case DESCRIPTION:","lastModifiedDate":"2022-09-07"},{"lineNumber":116,"author":{"gitId":"njxue"},"content":"            // Sort by task description.","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"njxue"},"content":"            tasks.sort(Comparator.comparing(Task::getDescription));","lastModifiedDate":"2022-09-07"},{"lineNumber":118,"author":{"gitId":"njxue"},"content":"            break;","lastModifiedDate":"2022-09-07"},{"lineNumber":119,"author":{"gitId":"njxue"},"content":"        default:","lastModifiedDate":"2022-09-07"},{"lineNumber":120,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(SortCommand.getFormat());","lastModifiedDate":"2022-09-07"},{"lineNumber":121,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"njxue"},"content":"        if (sortOrder.equals(SortOrder.DESCENDING)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"njxue"},"content":"            Collections.reverse(tasks);","lastModifiedDate":"2022-09-07"},{"lineNumber":125,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":126,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":127,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":128,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":129,"author":{"gitId":"njxue"},"content":"     * Sets the current sort order of the TaskList to be the given sortOrder.","lastModifiedDate":"2022-09-07"},{"lineNumber":130,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":131,"author":{"gitId":"njxue"},"content":"     * @param sortOrder Sort order of the TaskList.","lastModifiedDate":"2022-09-07"},{"lineNumber":132,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":133,"author":{"gitId":"njxue"},"content":"    public void setSortOrder(SortOrder sortOrder) {","lastModifiedDate":"2022-09-07"},{"lineNumber":134,"author":{"gitId":"njxue"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2022-09-07"},{"lineNumber":135,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":136,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":137,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":138,"author":{"gitId":"njxue"},"content":"     * Sets the current sort metric of the TaskList to be the given sortMetric.","lastModifiedDate":"2022-09-07"},{"lineNumber":139,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":140,"author":{"gitId":"njxue"},"content":"     * @param sortMetric Sort metric of the TaskList.","lastModifiedDate":"2022-09-07"},{"lineNumber":141,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":142,"author":{"gitId":"njxue"},"content":"    public void setSortMetric(SortMetric sortMetric) {","lastModifiedDate":"2022-09-07"},{"lineNumber":143,"author":{"gitId":"njxue"},"content":"        this.sortMetric \u003d sortMetric;","lastModifiedDate":"2022-09-07"},{"lineNumber":144,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":145,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":146,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"njxue"},"content":"     * Returns the number of tasks in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":149,"author":{"gitId":"njxue"},"content":"     * @return Size of the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"njxue"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"njxue"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":154,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":155,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"njxue"},"content":"     * Filters the list of Task objects in the TaskList, keep Task objects with descriptions matching the search term.","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"njxue"},"content":"     * Returns the list of found Task objects as a new TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"njxue"},"content":"     * @param searchTerm Search term used to find the list of matching Tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"njxue"},"content":"     * @return TaskList containing the list of found Task objects.","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"njxue"},"content":"    public TaskList find(String searchTerm) {","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"njxue"},"content":"        List\u003cTask\u003e foundTasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"njxue"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"njxue"},"content":"            if (task.getDescription().contains(searchTerm)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"njxue"},"content":"                foundTasksList.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"njxue"},"content":"        return new TaskList(foundTasksList);","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":173,"author":{"gitId":"njxue"},"content":"     * Returns the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"njxue"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"njxue"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-20"},{"lineNumber":178,"author":{"gitId":"njxue"},"content":"        return tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":179,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":180,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":181,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":182,"author":{"gitId":"njxue"},"content":"     * Returns the string representation of the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":184,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"njxue"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"njxue"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":188,"author":{"gitId":"njxue"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":189,"author":{"gitId":"njxue"},"content":"            return \"YOU HAVE NO TASKS :\u003c\";","lastModifiedDate":"2022-09-11"},{"lineNumber":190,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":191,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":192,"author":{"gitId":"njxue"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-20"},{"lineNumber":193,"author":{"gitId":"njxue"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":194,"author":{"gitId":"njxue"},"content":"            sb.append(String.format(\"%d.%s\", i + 1, task));","lastModifiedDate":"2022-09-11"},{"lineNumber":195,"author":{"gitId":"njxue"},"content":"            if (i !\u003d len - 1) {","lastModifiedDate":"2022-09-11"},{"lineNumber":196,"author":{"gitId":"njxue"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2022-09-11"},{"lineNumber":197,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":198,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":199,"author":{"gitId":"njxue"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":201,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":202,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":203,"author":{"gitId":"njxue"},"content":"     * Checks if index is a valid index of a Task object in the List of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":204,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":205,"author":{"gitId":"njxue"},"content":"     * @param index Index of a Task object.","lastModifiedDate":"2022-08-25"},{"lineNumber":206,"author":{"gitId":"njxue"},"content":"     * @throws TaskIndexOutOfBoundsException If index of a Task object is invalid.","lastModifiedDate":"2022-09-03"},{"lineNumber":207,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"njxue"},"content":"    private void checkIsValidIndex(int index) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2022-09-03"},{"lineNumber":209,"author":{"gitId":"njxue"},"content":"        boolean isValid \u003d index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d getSize();","lastModifiedDate":"2022-09-03"},{"lineNumber":210,"author":{"gitId":"njxue"},"content":"        if (!isValid) {","lastModifiedDate":"2022-09-03"},{"lineNumber":211,"author":{"gitId":"njxue"},"content":"            throw new TaskIndexOutOfBoundsException(index, getSize());","lastModifiedDate":"2022-09-03"},{"lineNumber":212,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":213,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":214,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":214}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents a task without date and time.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Creates a Todo object.","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * Returns the human-readable, string representation of the todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return Human-readable, string representation of the todo task.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     * Returns the formatted todo task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * @return Formatted todo task, which is to be written into the storage file.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"        return \"T\" + super.toFileFormatString() + getDescription();","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":38}},{"path":"src/main/java/duke/util/Error.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.util;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents an error response.","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"public class Error extends Response {","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"     * Creates an error response with a given error message.","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"     * @param message Error message.","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"    public Error(String message) {","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"        super(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * Returns true, because the response is an error.","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @return True.","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    public boolean isError() {","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        return true;","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"njxue":25}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.util;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"import duke.enums.SortMetric;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"import duke.enums.SortOrder;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"import duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":" * The Parser parses input from the user and returns the corresponding commands to execute.","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"public class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"     * Parses the full input from the user and returns the correct Command object.","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     * @param fullCommand Full input from the user.","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     * @return Command object corresponding to the user\u0027s input.","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If the user provides an empty command, or if the command is not a recognised command.","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"     * @throws DateTimeException If the string representation of a LocalDateTime cannot be parsed","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"     *                          correctly due to incorrect formatting.","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"        String command \u003d getCommandString(fullCommand);","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"        String commandArgument \u003d getCommandArgument(fullCommand);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"            switch(command) {","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"                return parseTodoCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"                return parseDeadlineCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"            case \"event\":","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"                return parseEventCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"                return parseMarkCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"                return parseUnmarkCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"                return parseDeleteCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"            case \"find\":","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"                return parseFindCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"            case \"sort\":","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"                return parseSortCommand(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"            case \"list\":","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"                return new ListCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"            case \"bye\":","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"            default:","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"                throw new UnknownCommandException(command);","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"            throw new DukeException(\"Datetime must be in this format: \"","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"                    + \"\u003cDATE\u003e \u003cTIME\u003e\\n  DATE: YYYY-MM-DD\\n  TIME(optional): HH:MM\");","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"     * Parses a TodoCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Description of the Todo task.","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"     * @return TodoCommand with the specified description.","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If description of the Todo task is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"    private static TodoCommand parseTodoCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"njxue"},"content":"        if (isEmptyInput(commandArgument)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(TodoCommand.getFormat());","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"njxue"},"content":"        return new TodoCommand(commandArgument);","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"njxue"},"content":"     * Parses a DeadlineCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Command argument specifying the description and deadline of the Deadline Task.","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"njxue"},"content":"     * @return DeadlineCommand with the specified description and deadline.","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If description of the Deadline Task is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"njxue"},"content":"    private static DeadlineCommand parseDeadlineCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"njxue"},"content":"        String[] argumentSplit \u003d splitByDelimiter(commandArgument, \" /by \");","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"njxue"},"content":"        if (argumentSplit.length \u003c 2) {","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(DeadlineCommand.getFormat());","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"njxue"},"content":"        String description \u003d argumentSplit[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"njxue"},"content":"        LocalDateTime byDateTime \u003d parseDateTime(argumentSplit[1]);","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"njxue"},"content":"        return new DeadlineCommand(description, byDateTime);","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"njxue"},"content":"     * Parses an EventCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Command argument specifying the description and datetime of the Event Task.","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"njxue"},"content":"     * @return EventCommand with the specified description and datetime.","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If description of the Event Task is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"njxue"},"content":"    private static EventCommand parseEventCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"njxue"},"content":"        String[] argumentSplit \u003d splitByDelimiter(commandArgument, \" /at \");","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"njxue"},"content":"        if (argumentSplit.length \u003c 2) {","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(EventCommand.getFormat());","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"njxue"},"content":"        String description \u003d argumentSplit[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"njxue"},"content":"        LocalDateTime byDateTime \u003d parseDateTime(argumentSplit[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"njxue"},"content":"        return new EventCommand(description, byDateTime);","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"njxue"},"content":"     * Parses a MarkCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Command argument specifying the index of the task in the TaskList to mark.","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"njxue"},"content":"     * @return MarkCommand with the specified task index.","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If commandArgument is not a numeric string.","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"njxue"},"content":"    private static MarkCommand parseMarkCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"njxue"},"content":"        int taskIndex \u003d parseTaskIndex(commandArgument, MarkCommand.getFormat());","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"njxue"},"content":"        return new MarkCommand(taskIndex);","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"njxue"},"content":"     * Parses an UnmarkCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":135,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Command argument specifying the index of the task in the TaskList to unmark.","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"njxue"},"content":"     * @return UnmarkCommand with the specified task index.","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If commandArgument is not a numeric string.","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"njxue"},"content":"    private static UnmarkCommand parseUnmarkCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"njxue"},"content":"        int taskIndex \u003d parseTaskIndex(commandArgument, UnmarkCommand.getFormat());","lastModifiedDate":"2022-09-11"},{"lineNumber":142,"author":{"gitId":"njxue"},"content":"        return new UnmarkCommand(taskIndex);","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":144,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":145,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":146,"author":{"gitId":"njxue"},"content":"     * Parses a DeleteCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":148,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Command argument specifying the index of the task in the TaskList to delete.","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"njxue"},"content":"     * @return DeleteCommand with the specified task index.","lastModifiedDate":"2022-09-08"},{"lineNumber":150,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If commandArgument is not a numeric string.","lastModifiedDate":"2022-09-08"},{"lineNumber":151,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":152,"author":{"gitId":"njxue"},"content":"    private static DeleteCommand parseDeleteCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"njxue"},"content":"        int taskIndex \u003d parseTaskIndex(commandArgument, DeleteCommand.getFormat());","lastModifiedDate":"2022-09-11"},{"lineNumber":154,"author":{"gitId":"njxue"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"njxue"},"content":"     * Parses a FindCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":160,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Search term tasks to find.","lastModifiedDate":"2022-09-08"},{"lineNumber":161,"author":{"gitId":"njxue"},"content":"     * @return FindCommand with the specified search term.","lastModifiedDate":"2022-09-08"},{"lineNumber":162,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If the search term of the FindCommand is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"njxue"},"content":"    private static FindCommand parseFindCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":165,"author":{"gitId":"njxue"},"content":"        if (isEmptyInput(commandArgument)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":166,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(FindCommand.getFormat());","lastModifiedDate":"2022-09-08"},{"lineNumber":167,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":168,"author":{"gitId":"njxue"},"content":"        return new FindCommand(commandArgument);","lastModifiedDate":"2022-09-03"},{"lineNumber":169,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":170,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":171,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":172,"author":{"gitId":"njxue"},"content":"     * Parses a SortCommand.","lastModifiedDate":"2022-09-08"},{"lineNumber":173,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":174,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Command argument specifying the order and/or metric of the sorting mechanism.","lastModifiedDate":"2022-09-08"},{"lineNumber":175,"author":{"gitId":"njxue"},"content":"     * @return SortCommand with the specified sort order and/or metric.","lastModifiedDate":"2022-09-08"},{"lineNumber":176,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If the specified sort order and/or metric is not recognised.","lastModifiedDate":"2022-09-08"},{"lineNumber":177,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":178,"author":{"gitId":"njxue"},"content":"    private static SortCommand parseSortCommand(String commandArgument) throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":179,"author":{"gitId":"njxue"},"content":"        if (isEmptyInput(commandArgument)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":180,"author":{"gitId":"njxue"},"content":"            return new SortCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":181,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":182,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":183,"author":{"gitId":"njxue"},"content":"        String[] commandArgSplit \u003d splitByDelimiter(commandArgument, \"\\\\s+\");","lastModifiedDate":"2022-09-09"},{"lineNumber":184,"author":{"gitId":"njxue"},"content":"        int numArguments \u003d commandArgSplit.length;","lastModifiedDate":"2022-09-09"},{"lineNumber":185,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":186,"author":{"gitId":"njxue"},"content":"        if (numArguments \u003e 2) {","lastModifiedDate":"2022-09-09"},{"lineNumber":187,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(SortCommand.getFormat());","lastModifiedDate":"2022-09-08"},{"lineNumber":188,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":189,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":190,"author":{"gitId":"njxue"},"content":"        if (numArguments \u003d\u003d 2) {","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"njxue"},"content":"            SortOrder order \u003d SortOrder.parse(commandArgSplit[0]);","lastModifiedDate":"2022-09-09"},{"lineNumber":192,"author":{"gitId":"njxue"},"content":"            SortMetric metric \u003d SortMetric.parse(commandArgSplit[1]);","lastModifiedDate":"2022-09-09"},{"lineNumber":193,"author":{"gitId":"njxue"},"content":"            return new SortCommand(order, metric);","lastModifiedDate":"2022-09-09"},{"lineNumber":194,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":195,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":196,"author":{"gitId":"njxue"},"content":"        String arg \u003d commandArgSplit[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":197,"author":{"gitId":"njxue"},"content":"        if (!SortOrder.isValidOrder(arg) \u0026\u0026 !SortMetric.isValidMetric(arg)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":198,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(SortCommand.getFormat());","lastModifiedDate":"2022-09-08"},{"lineNumber":199,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":200,"author":{"gitId":"njxue"},"content":"        return SortOrder.isValidOrder(arg)","lastModifiedDate":"2022-09-08"},{"lineNumber":201,"author":{"gitId":"njxue"},"content":"                ? new SortCommand(SortOrder.parse(arg))","lastModifiedDate":"2022-09-08"},{"lineNumber":202,"author":{"gitId":"njxue"},"content":"                : new SortCommand(SortMetric.parse(arg));","lastModifiedDate":"2022-09-09"},{"lineNumber":203,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":204,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":205,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":206,"author":{"gitId":"njxue"},"content":"     * Returns a LocalDateTime object from an appropriately-formatted string.","lastModifiedDate":"2022-08-25"},{"lineNumber":207,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":208,"author":{"gitId":"njxue"},"content":"     * @param dateTimeString String representation of a LocalDateTime object. The expected format is","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"njxue"},"content":"     *                       YYYY-MM-DDTHH:MM or YYYY-MM-DD.","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"njxue"},"content":"     * @return LocalDateTime object corresponding to the dateTimeString.","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":212,"author":{"gitId":"njxue"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2022-08-20"},{"lineNumber":213,"author":{"gitId":"njxue"},"content":"        String[] dateTimeSplit \u003d dateTimeString.split(\"[ T]\");","lastModifiedDate":"2022-08-20"},{"lineNumber":214,"author":{"gitId":"njxue"},"content":"        String isoDateFormat \u003d \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":215,"author":{"gitId":"njxue"},"content":"        if (dateTimeSplit.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":216,"author":{"gitId":"njxue"},"content":"            isoDateFormat \u003d String.format(\"%sT23:59\", dateTimeSplit[0]);","lastModifiedDate":"2022-08-20"},{"lineNumber":217,"author":{"gitId":"njxue"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":218,"author":{"gitId":"njxue"},"content":"            isoDateFormat \u003d String.format(\"%sT%s\", dateTimeSplit[0], dateTimeSplit[1]);","lastModifiedDate":"2022-08-20"},{"lineNumber":219,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":220,"author":{"gitId":"njxue"},"content":"        return LocalDateTime.parse(isoDateFormat);","lastModifiedDate":"2022-08-20"},{"lineNumber":221,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":222,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":223,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":224,"author":{"gitId":"njxue"},"content":"     * Parses a command argument and returns a task index.","lastModifiedDate":"2022-09-08"},{"lineNumber":225,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":226,"author":{"gitId":"njxue"},"content":"     * @param commandArgument String representation of a task index.","lastModifiedDate":"2022-09-08"},{"lineNumber":227,"author":{"gitId":"njxue"},"content":"     * @param commandFormat Command format of the command associated with the command argument.","lastModifiedDate":"2022-09-08"},{"lineNumber":228,"author":{"gitId":"njxue"},"content":"     * @return Task index.","lastModifiedDate":"2022-09-08"},{"lineNumber":229,"author":{"gitId":"njxue"},"content":"     * @throws InvalidCommandFormatException If command argument is not a digit or is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":230,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":231,"author":{"gitId":"njxue"},"content":"    private static int parseTaskIndex(String commandArgument, String commandFormat)","lastModifiedDate":"2022-09-08"},{"lineNumber":232,"author":{"gitId":"njxue"},"content":"            throws InvalidCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":233,"author":{"gitId":"njxue"},"content":"        if (isEmptyInput(commandArgument) || !isDigit(commandArgument)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":234,"author":{"gitId":"njxue"},"content":"            throw new InvalidCommandFormatException(commandFormat);","lastModifiedDate":"2022-09-08"},{"lineNumber":235,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":236,"author":{"gitId":"njxue"},"content":"        return Integer.parseInt(commandArgument);","lastModifiedDate":"2022-09-08"},{"lineNumber":237,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":238,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":239,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":240,"author":{"gitId":"njxue"},"content":"     * Returns the name of the command from the full user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":241,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":242,"author":{"gitId":"njxue"},"content":"     * @param fullCommand Full user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":243,"author":{"gitId":"njxue"},"content":"     * @return Name of the command corresponding to the user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":244,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If the command string is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":245,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":246,"author":{"gitId":"njxue"},"content":"    private static String getCommandString(String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":247,"author":{"gitId":"njxue"},"content":"        String[] fullCommandSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":248,"author":{"gitId":"njxue"},"content":"        String command \u003d fullCommandSplit[0].strip();","lastModifiedDate":"2022-09-03"},{"lineNumber":249,"author":{"gitId":"njxue"},"content":"        if (isEmptyInput(command)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":250,"author":{"gitId":"njxue"},"content":"            throw new DukeException(\"Command cannot be empty\");","lastModifiedDate":"2022-09-03"},{"lineNumber":251,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":252,"author":{"gitId":"njxue"},"content":"        return command;","lastModifiedDate":"2022-09-03"},{"lineNumber":253,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":254,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":255,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":256,"author":{"gitId":"njxue"},"content":"     * Returns the command arguments from the full user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":257,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":258,"author":{"gitId":"njxue"},"content":"     * @param fullCommand Full user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":259,"author":{"gitId":"njxue"},"content":"     * @return Command arguments from the full user input","lastModifiedDate":"2022-09-03"},{"lineNumber":260,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":261,"author":{"gitId":"njxue"},"content":"    private static String getCommandArgument(String fullCommand) {","lastModifiedDate":"2022-09-03"},{"lineNumber":262,"author":{"gitId":"njxue"},"content":"        String[] fullCommandSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":263,"author":{"gitId":"njxue"},"content":"        return fullCommandSplit.length \u003e 1 ? fullCommandSplit[1].strip() : \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":264,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":265,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":266,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":267,"author":{"gitId":"njxue"},"content":"     * Splits the command argument further into smaller arguments and returns them in an array.","lastModifiedDate":"2022-09-03"},{"lineNumber":268,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":269,"author":{"gitId":"njxue"},"content":"     * @param commandArgument Initial command argument to split.","lastModifiedDate":"2022-09-03"},{"lineNumber":270,"author":{"gitId":"njxue"},"content":"     * @param delimiter Delimiter to split the command argument by.","lastModifiedDate":"2022-09-03"},{"lineNumber":271,"author":{"gitId":"njxue"},"content":"     * @return Array of smaller command arguments.","lastModifiedDate":"2022-09-03"},{"lineNumber":272,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":273,"author":{"gitId":"njxue"},"content":"    private static String[] splitByDelimiter(String commandArgument, String delimiter) {","lastModifiedDate":"2022-09-09"},{"lineNumber":274,"author":{"gitId":"njxue"},"content":"        String[] argumentSplit \u003d commandArgument.split(delimiter);","lastModifiedDate":"2022-09-03"},{"lineNumber":275,"author":{"gitId":"njxue"},"content":"        for (int i \u003d 0; i \u003c argumentSplit.length; i++) {","lastModifiedDate":"2022-09-08"},{"lineNumber":276,"author":{"gitId":"njxue"},"content":"            argumentSplit[i] \u003d argumentSplit[i].strip();","lastModifiedDate":"2022-09-03"},{"lineNumber":277,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":278,"author":{"gitId":"njxue"},"content":"        return argumentSplit;","lastModifiedDate":"2022-09-03"},{"lineNumber":279,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":280,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":281,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":282,"author":{"gitId":"njxue"},"content":"     * Checks if a given string contains only digits.","lastModifiedDate":"2022-09-08"},{"lineNumber":283,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":284,"author":{"gitId":"njxue"},"content":"     * @param string The target string.","lastModifiedDate":"2022-09-08"},{"lineNumber":285,"author":{"gitId":"njxue"},"content":"     * @return True if str contains only digits. Returns false otherwise.","lastModifiedDate":"2022-09-08"},{"lineNumber":286,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":287,"author":{"gitId":"njxue"},"content":"    private static boolean isDigit(String string) {","lastModifiedDate":"2022-09-08"},{"lineNumber":288,"author":{"gitId":"njxue"},"content":"        for (char c : string.toCharArray()) {","lastModifiedDate":"2022-09-08"},{"lineNumber":289,"author":{"gitId":"njxue"},"content":"            if (!Character.isDigit(c)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":290,"author":{"gitId":"njxue"},"content":"                return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":291,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":292,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":293,"author":{"gitId":"njxue"},"content":"        return true;","lastModifiedDate":"2022-09-08"},{"lineNumber":294,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":295,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":296,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":297,"author":{"gitId":"njxue"},"content":"     * Checks if a given string input is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":298,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":299,"author":{"gitId":"njxue"},"content":"     * @param input The input, which can either be the command string or the command arguments.","lastModifiedDate":"2022-09-03"},{"lineNumber":300,"author":{"gitId":"njxue"},"content":"     * @return True, if the input is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":301,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":302,"author":{"gitId":"njxue"},"content":"    private static boolean isEmptyInput(String input) {","lastModifiedDate":"2022-09-03"},{"lineNumber":303,"author":{"gitId":"njxue"},"content":"        return input.length() \u003d\u003d 0;","lastModifiedDate":"2022-09-03"},{"lineNumber":304,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":305,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":305}},{"path":"src/main/java/duke/util/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.util;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents the response from Duke after receiving the user\u0027s input.","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"public abstract class Response {","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"    /** Response message. */","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"    private String message;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     * Creates a Response with a given response message.","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"     * @param message Response message.","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    public Response(String message) {","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     * Checks if a Response is a Success or an Error response.","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"     * @return True, if a Response is a Success, false otherwise.","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    public abstract boolean isError();","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"     * Returns the message of the Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"     * @return Message of the Response.","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"        return this.message;","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"njxue":34}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.util;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import java.util.List;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"import duke.exception.FileCorruptedException;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":" * Represents the Storage object responsible for loading and saving tasks during a Duke session.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":" * @author njxue","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":" * @version v0.1","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"public class Storage {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    /** Path object representing the relative path to the file to load and save the tasks. **/","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    private final Path path;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"    /** String representation of the relative path to the file to load and save the tasks. **/","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    private final String pathString;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"     * Creates a new Storage object.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"     * @param filePath String representation of the relative path to the file to load and save the tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"        this.path \u003d Paths.get(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"        this.pathString \u003d path.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"        File parent \u003d new File(new File(pathString).getParent());","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"        if (!parent.exists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"            parent.mkdirs();","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"     * Loads the task from the file located in the specified path in path.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"     * @return List of previously saved tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"     * @throws FileNotFoundException If the file located in path does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"njxue"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException, FileCorruptedException {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"njxue"},"content":"        File file \u003d new File(pathString);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"njxue"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"njxue"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"njxue"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"njxue"},"content":"            Task task \u003d Task.parse(sc.nextLine());","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"njxue"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"njxue"},"content":"        return tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"njxue"},"content":"     * Saves the task to the file located in the specified path in path.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"njxue"},"content":"     * @param tasks TaskList containing the list of tasks to be saved.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"njxue"},"content":"     * @throws DukeException If the file located in path does not exist.","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"njxue"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"njxue"},"content":"        File file \u003d new File(pathString);","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"njxue"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"njxue"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"njxue"},"content":"                fw.write(task.toFileFormatString() + \"\\n\");","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"njxue"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"njxue"},"content":"            fw.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"njxue"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"njxue"},"content":"            throw new DukeException(\"Unable to write to file :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"njxue":80}},{"path":"src/main/java/duke/util/Success.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.util;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":" * Represents a successful response.","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"public class Success extends Response {","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"     * Creates a Success response with a given success message.","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"     * @param message Success message.","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"    public Success(String message) {","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"        super(message);","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"     * Returns false, because the response is successful.","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"     * @return False.","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    @Override","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"    public boolean isError() {","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"        return false;","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"njxue":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.paint.ImagePattern?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"  \u003cHBox fx:id\u003d\"chatContainer\" spacing\u003d\"15\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    \u003cHBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"container\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"      \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\" wrappingWidth\u003d\"315\" styleClass\u003d\"text\"/\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"    \u003cCircle fx:id\u003d\"displayPicture\" styleClass\u003d\"displayPicture\" radius\u003d\"35\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"njxue":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.controller.MainWindow\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"658.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"374.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"374.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"450.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"652.0\" prefWidth\u003d\"438.0\" /\u003e","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"njxue":20}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"import duke.util.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    public void parseInput_whiteSpace_exceptionThrown() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"            assertTrue(Parser.parse(\"   \") instanceof Command);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"            fail();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"            assertEquals(\"Command cannot be empty\", de.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"    public void parseInput_bye_returnByeCommand() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"njxue":30}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"package duke.task;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"    public void printTodo_normalInput_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"        assertEquals(\"[T][ ] a todo task\", new Todo(\"a todo task\").toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"    public void saveTodo_normalInput_success() {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"        assertEquals(\"T| |a todo task\", new Todo(\"a todo task\").toFileFormatString());","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"njxue":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"njxue"},"content":"todo","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"njxue"},"content":"todo some todo task","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"njxue"},"content":"deadline ","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"njxue"},"content":"deadline task with deadline, using default time","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"njxue"},"content":"deadline task with deadline, using default time /by ","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"njxue"},"content":"deadline task with deadline, using default time /by 2022-02-02","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"njxue"},"content":"deadline task with strict deadline /by 2022-02-02 07:17","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"njxue"},"content":"event some event, using default time","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"njxue"},"content":"event some event, using default time /at","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"njxue"},"content":"event some event, using default time /at 2022-02-02","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"njxue"},"content":"event some event, using strict time /at 2022-02-02 07:17","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"njxue"},"content":"mark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"mark","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"njxue"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"njxue"},"content":"mark foo","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"njxue"},"content":"mark 999","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"njxue"},"content":"find","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"njxue"},"content":"find task","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"njxue"},"content":"find deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"njxue"},"content":"find event","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"njxue"},"content":"find default","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"njxue"},"content":"find strict","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"njxue"},"content":"find foobarbaz","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"njxue"},"content":"unmark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"njxue"},"content":"unmark","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"njxue"},"content":"unmark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"njxue"},"content":"mark foo","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"njxue"},"content":"unmark 999","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"njxue"},"content":"delete 0","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"njxue"},"content":"delete 999","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"njxue"},"content":"delete","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"njxue"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"njxue"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"njxue"},"content":"foo","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"njxue"},"content":"bar","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"njxue"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"njxue"},"content":"find","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"njxue"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"njxue":49}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"njxue"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"njxue"},"content":"java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"njxue":2,"-":19}}]

[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"        return \"D\";","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"%s%s\\n\", super.saveStringToFile(), by);","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"        TaskList tasks \u003d storage.loadFile();","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"        ui.welcomeUser();","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"        String input \u003d ui.readInput();  // Read user input","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"            parser.parse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"            input \u003d ui.readInput(); // Read next user input","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        ui.sayBye();","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shawnkai":17,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"        return \"E\";","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"        String formattedDate \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"%s%s\\n\", super.saveStringToFile(), at);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":28}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"public class Parser {","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"    String dummyString;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    Task dummyTask;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"    int counter;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    int start;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    int end;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"    public void parse(String input) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"            if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"                dummyString \u003d input.substring(5); //get number of task","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"                counter \u003d Integer.parseInt(dummyString) - 1;//convert to index of task (int)","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"                tasks.get(counter).mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"                        \"[\" + tasks.get(counter).getStatusIcon() + \"] \" + tasks.get(counter).getDescription());","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"                dummyString \u003d input.substring(7); //get number of task","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"                counter \u003d Integer.parseInt(dummyString) - 1; //convert to index of task (int)","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"                tasks.get(counter).unmark();","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"                        \"[\" + tasks.get(counter).getStatusIcon() + \"] \" + tasks.get(counter).getDescription());","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) { //iterate through all tasks","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"                    System.out.println( (i+1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"                if (input.equals(\"delete\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"                    throw new DukeException(\"Please specify which item is to be deleted.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"                dummyString \u003d input.substring(7); //get item number to be deleted","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"                counter \u003d Integer.parseInt(dummyString) - 1;//convert to index of task (int)","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"                dummyTask \u003d tasks.get(counter);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"                tasks.delete(counter);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"  \" + dummyTask.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"                if (input.equals(\"todo\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"shawnkai"},"content":"                start \u003d 5;","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"shawnkai"},"content":"                dummyTask \u003d new Todo(input.substring(start));","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"shawnkai"},"content":"                tasks.add(dummyTask);","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"  \" + dummyTask);","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"shawnkai"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"shawnkai"},"content":"                if (input.equals(\"deadline\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"shawnkai"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"shawnkai"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"shawnkai"},"content":"                counter \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"shawnkai"},"content":"                start \u003d 9;","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"shawnkai"},"content":"                end \u003d counter - 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"shawnkai"},"content":"                tasks.add(new Deadline(input.substring(start, end), input.substring(counter + 4)));","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"  \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"shawnkai"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"shawnkai"},"content":"                if (input.equals(\"event\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"shawnkai"},"content":"                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"shawnkai"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"shawnkai"},"content":"                counter \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"shawnkai"},"content":"                start \u003d 6;","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"shawnkai"},"content":"                end \u003d counter - 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"shawnkai"},"content":"                tasks.add(new Event(input.substring(start, end), input.substring(counter + 4)));","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"  \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"shawnkai"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":91,"author":{"gitId":"shawnkai"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":93,"author":{"gitId":"shawnkai"},"content":"            } else { //random input","lastModifiedDate":"2022-08-29"},{"lineNumber":94,"author":{"gitId":"shawnkai"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-29"},{"lineNumber":95,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":96,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":97,"author":{"gitId":"shawnkai"},"content":"        } catch (DukeException e){","lastModifiedDate":"2022-08-29"},{"lineNumber":98,"author":{"gitId":"shawnkai"},"content":"            System.out.println(e.toString().substring(15));","lastModifiedDate":"2022-08-29"},{"lineNumber":99,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":100,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.io.File;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"public class Storage {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    File file;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    public Storage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"            Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"            this.file \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"    public TaskList loadFile() throws FileNotFoundException {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"            String taskType \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"            if (taskType.isBlank()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"                continue;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"            String taskName \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"            String done \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"            boolean isDone \u003d Integer.parseInt(done) \u003d\u003d 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"            Task task;","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"                task \u003d new Todo(taskName);","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"                String deadline \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"                task \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"            } else if (taskType.equals(\"E\")){","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"                String eventTime \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"                task \u003d new Event(taskName, eventTime);","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"            } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"                throw new RuntimeException(\"Duke cannot understand the input file.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"            if (isDone) {","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"                task.mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"        return tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"    public void saveFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"shawnkai"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"shawnkai"},"content":"            fw.write(task.saveStringToFile());","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"shawnkai"},"content":"        fw.close();","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":64}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"%s\\n%s\\n%d\\n\", getTaskType(), description, isDone ? 1 : 0);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":39}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.util.List;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"public class TaskList {","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    private List\u003cTask\u003e taskArray;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"        this.taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"        taskArray.add(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"        taskArray.remove(index);","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"        return taskArray.get(index);","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"    public int size() {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"        return taskArray.size();","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":27}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"    protected String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"        return \"T\";","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"        return super.saveStringToFile();","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":24}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"public class UI {","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"    Scanner scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    public UI() {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    public void welcomeUser() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"    public void sayBye() {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    public String readInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"todo read book","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"todo join sports club","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"mark 4","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"mark 1","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"todo borrow book","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"list","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"bye","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"shawnkai":12}}]

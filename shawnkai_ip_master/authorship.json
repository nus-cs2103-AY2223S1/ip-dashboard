[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"    mainClassName \u003d \"duke.Main\"","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shawnkai":16,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"## Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"### Overview","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"Duke frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"- text-based","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"- easy to learn","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"- ~~FAST~~ ***SUPER FAST to use***","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"All you need to do is,","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"1. download it from [here](https://github.com/shawnkai/ip).","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"2. double-click it.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"3. add your tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"4. let it manage your tasks for you :+1:","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"And it is FREE!","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"### Features:","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":" - [x] Managing tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":" - [x] Managing deadlines","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":" - [x] Reminders ~~(coming soon)~~","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"### Usage","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"#### Commands","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"- `todo DESCRIPTION`: Add todo task","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"- `deadline DESCRIPTION /by DEADLINE`: Add deadline task","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"- `event DESCRIPTION /at TIME`: Add event task","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"- `list`: List all tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"- `mark INDEX`: Mark task as done","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"- `unmark INDEX`: Unmark task","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"- `bye`: Exit program","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"- `find KEYWORD`: Filter task by keyword","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"- `delete INDEX`: Delete task","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"- `reminder`: Gives a reminder for the upcoming deadlines and events for the coming week","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"shawnkai":29,"-":13}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":" * A Deadline object is a Task object that has a deadline by which the task","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":" * should be completed.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":" *","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"     * Creates a new Deadline object with a given description and its deadline.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"     * @param by the date by which the task should be completed","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"        return this.by;","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"     * The task type for a Deadline object is \"D\".","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"     * @return \"D\"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"        return \"D\";","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"     * Returns the String representation of the Deadline object","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"     * @return String representation of the Deadline object","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"     * Formats the details of the Deadline object such that the information can be saved and loaded","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"     * from files.","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"     * @return The String representation of the Deadline object in a format that can be","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"     * saved to files.","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"%s%s\\n\", super.saveStringToFile(), by);","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":58}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    private Label text;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"        text \u003d l;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"    private void flip() {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"        db.flip();","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"        return db;","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"shawnkai":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"    private Scene scene;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"    Parser parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"        TaskList tasks \u003d storage.loadFile();","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"        ui.welcomeUser();","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"        String input \u003d ui.readInput();  // Read user input","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"            parser.parse(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"            input \u003d ui.readInput(); // Read next user input","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"        ui.sayBye();","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"shawnkai"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"shawnkai"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"shawnkai"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"shawnkai"},"content":"        stage.show();","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"shawnkai"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"shawnkai"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"shawnkai"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"shawnkai"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"shawnkai"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"shawnkai"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"shawnkai"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"shawnkai"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"shawnkai"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"shawnkai"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"shawnkai"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"shawnkai"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"shawnkai"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"shawnkai"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"shawnkai"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"shawnkai"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"shawnkai"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"shawnkai"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"shawnkai"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"shawnkai"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"shawnkai"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"shawnkai"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"shawnkai"},"content":"        });","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"shawnkai"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"shawnkai"},"content":"            handleUserInput();","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"shawnkai"},"content":"        });","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"shawnkai"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"shawnkai"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"shawnkai"},"content":"     * Iteration 1:","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"shawnkai"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"shawnkai"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"shawnkai"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"shawnkai"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"shawnkai"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"shawnkai"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"shawnkai"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"shawnkai"},"content":"        return textToAdd;","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"shawnkai"},"content":"     * Iteration 2:","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"shawnkai"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"shawnkai"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"shawnkai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"shawnkai"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"shawnkai"},"content":"        Label dukeText \u003d null;","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"shawnkai"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"shawnkai"},"content":"            dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"shawnkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"shawnkai"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"shawnkai"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"shawnkai"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"shawnkai"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"shawnkai"},"content":"        );","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"shawnkai"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"shawnkai"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"shawnkai"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"shawnkai"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"shawnkai"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"shawnkai"},"content":"        TaskList tasks \u003d storage.loadFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"shawnkai"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"shawnkai"},"content":"        return parser.parse(input);","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shawnkai":156,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":" * An Event object is a Task object that has a date by which the event","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":" * will occur.","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":" *","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"     * Creates a new Event object with a given description and its date.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"     * @param at the date by which the event occurs","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"        return this.at;","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"     * The task type for a Deadline object is \"E\".","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"     * @return \"E\"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"        return \"E\";","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"     * Returns the String representation of the Event object.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"     * @return String representation of the Event object","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"        String formattedDate \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"     * Formats the details of the Event object such that the information can be saved and loaded","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"     * from files.","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"     * @return The String representation of the Event object in a format that can be","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"     * saved to files.","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"%s%s\\n\", super.saveStringToFile(), at);","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":60}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"public class Main {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"shawnkai":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.util.List;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":" * The Parser class parses user commands and executes the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"public class Parser {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    Task dummyTask;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    int counter;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    int start;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"    int end;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"     * Creates a new Parser which will parse user commands and execute the command.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"     * @param storage The location where the files will be saved to and loaded from.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"     * Parses the input provided and executes it.","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"     * @param input The input provided by user to parser.","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"     * @throws IOException When system I/O fails.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"    public String parse(String input) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"            if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"                return mark(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"                return unmark(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"                return find(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"                return list();","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"                return delete(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"                return todo(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"                return deadline(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"shawnkai"},"content":"                return event(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"shawnkai"},"content":"            }else if (input.equals(\"reminder\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"shawnkai"},"content":"                return reminder();","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":64,"author":{"gitId":"shawnkai"},"content":"            } else { //random input","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"shawnkai"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"shawnkai"},"content":"        } catch (DukeException e){","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"shawnkai"},"content":"            System.out.println(e.toString().substring(15));","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"shawnkai"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-09-11"},{"lineNumber":72,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"shawnkai"},"content":"    private String event(String input) throws DukeException, IOException {","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"shawnkai"},"content":"        String responseString;","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"shawnkai"},"content":"        if (input.equals(\"event\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"shawnkai"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"shawnkai"},"content":"        counter \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"shawnkai"},"content":"        start \u003d 6;","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"shawnkai"},"content":"        end \u003d counter - 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":82,"author":{"gitId":"shawnkai"},"content":"        tasks.add(new Event(input.substring(start, end), input.substring(counter + 4)));","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"shawnkai"},"content":"        assert(input.substring(start, end) !\u003d null);","lastModifiedDate":"2022-09-12"},{"lineNumber":84,"author":{"gitId":"shawnkai"},"content":"        assert(input.substring(counter + 4) !\u003d null);","lastModifiedDate":"2022-09-12"},{"lineNumber":85,"author":{"gitId":"shawnkai"},"content":"        responseString \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":86,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\"  %s\\n\", tasks.getTask(tasks.getSize() - 1).toString());","lastModifiedDate":"2022-09-11"},{"lineNumber":87,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\"Now you have %s tasks in the list.\", tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"shawnkai"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"shawnkai"},"content":"        return responseString;","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":91,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":92,"author":{"gitId":"shawnkai"},"content":"    private String deadline(String input) throws DukeException, IOException {","lastModifiedDate":"2022-09-11"},{"lineNumber":93,"author":{"gitId":"shawnkai"},"content":"        String responseString;","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"shawnkai"},"content":"        if (input.equals(\"deadline\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"shawnkai"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"shawnkai"},"content":"        counter \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"shawnkai"},"content":"        start \u003d 9;","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"shawnkai"},"content":"        end \u003d counter - 1;","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"shawnkai"},"content":"        tasks.add(new Deadline(input.substring(start, end), input.substring(counter + 4)));","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"shawnkai"},"content":"        assert(input.substring(start, end) !\u003d null);","lastModifiedDate":"2022-09-11"},{"lineNumber":102,"author":{"gitId":"shawnkai"},"content":"        assert(input.substring(counter + 4) !\u003d null);","lastModifiedDate":"2022-09-11"},{"lineNumber":103,"author":{"gitId":"shawnkai"},"content":"        responseString \u003d (\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\"  %s\\n\", tasks.getTask(tasks.getSize() - 1).toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\"Now you have %s tasks in the list.\", tasks.getSize());","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"shawnkai"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"shawnkai"},"content":"        return responseString;","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":109,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"shawnkai"},"content":"    private String todo(String input) throws DukeException, IOException {","lastModifiedDate":"2022-09-11"},{"lineNumber":111,"author":{"gitId":"shawnkai"},"content":"        String responseString;","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"shawnkai"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":113,"author":{"gitId":"shawnkai"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"shawnkai"},"content":"        start \u003d 5;","lastModifiedDate":"2022-09-11"},{"lineNumber":116,"author":{"gitId":"shawnkai"},"content":"        dummyTask \u003d new Todo(input.substring(start));","lastModifiedDate":"2022-09-11"},{"lineNumber":117,"author":{"gitId":"shawnkai"},"content":"        tasks.add(dummyTask);","lastModifiedDate":"2022-09-11"},{"lineNumber":118,"author":{"gitId":"shawnkai"},"content":"        assert(input.substring(start) !\u003d null);","lastModifiedDate":"2022-09-12"},{"lineNumber":119,"author":{"gitId":"shawnkai"},"content":"        responseString \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":120,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\" %s\\n\", dummyTask);","lastModifiedDate":"2022-09-11"},{"lineNumber":121,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\"Now you have %s tasks in the list.\\n\", tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":122,"author":{"gitId":"shawnkai"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"shawnkai"},"content":"        return responseString;","lastModifiedDate":"2022-09-11"},{"lineNumber":124,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":125,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":126,"author":{"gitId":"shawnkai"},"content":"    private String delete(String input) throws DukeException, IOException {","lastModifiedDate":"2022-09-11"},{"lineNumber":127,"author":{"gitId":"shawnkai"},"content":"        if (input.equals(\"delete\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":128,"author":{"gitId":"shawnkai"},"content":"            throw new DukeException(\"Please specify which item is to be deleted.\");","lastModifiedDate":"2022-09-11"},{"lineNumber":129,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"shawnkai"},"content":"        String dummyString \u003d input.substring(7); //get item number to be deleted","lastModifiedDate":"2022-09-11"},{"lineNumber":131,"author":{"gitId":"shawnkai"},"content":"        counter \u003d Integer.parseInt(dummyString) - 1;//convert to index of task (int)","lastModifiedDate":"2022-09-11"},{"lineNumber":132,"author":{"gitId":"shawnkai"},"content":"        dummyTask \u003d tasks.getTask(counter);","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"shawnkai"},"content":"        tasks.delete(counter);","lastModifiedDate":"2022-09-11"},{"lineNumber":134,"author":{"gitId":"shawnkai"},"content":"        String responseString \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-09-11"},{"lineNumber":135,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\"  %s\\n\", dummyTask.toString());","lastModifiedDate":"2022-09-11"},{"lineNumber":136,"author":{"gitId":"shawnkai"},"content":"        responseString +\u003d String.format(\"Now you have %s tasks in the list.\\n\", tasks.getSize());","lastModifiedDate":"2022-09-11"},{"lineNumber":137,"author":{"gitId":"shawnkai"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"shawnkai"},"content":"        return responseString;","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":140,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"shawnkai"},"content":"    private String list() {","lastModifiedDate":"2022-09-11"},{"lineNumber":142,"author":{"gitId":"shawnkai"},"content":"        String responseString \u003d String.format(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-09-11"},{"lineNumber":143,"author":{"gitId":"shawnkai"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) { //iterate through all tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":144,"author":{"gitId":"shawnkai"},"content":"            responseString +\u003d String.format(\"%s.%s\\n\", (i+1), tasks.getTask(i).toString());","lastModifiedDate":"2022-09-11"},{"lineNumber":145,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":146,"author":{"gitId":"shawnkai"},"content":"        return responseString;","lastModifiedDate":"2022-09-11"},{"lineNumber":147,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":148,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":149,"author":{"gitId":"shawnkai"},"content":"    private String find(String input) {","lastModifiedDate":"2022-09-11"},{"lineNumber":150,"author":{"gitId":"shawnkai"},"content":"        String responseString \u003d String.format(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-09-11"},{"lineNumber":151,"author":{"gitId":"shawnkai"},"content":"        String descriptionToFind \u003d input.substring(5);","lastModifiedDate":"2022-09-11"},{"lineNumber":152,"author":{"gitId":"shawnkai"},"content":"        List\u003cInteger\u003e searchResults \u003d tasks.findTasks(descriptionToFind);","lastModifiedDate":"2022-09-11"},{"lineNumber":153,"author":{"gitId":"shawnkai"},"content":"        assert(descriptionToFind !\u003d null);","lastModifiedDate":"2022-09-12"},{"lineNumber":154,"author":{"gitId":"shawnkai"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-09-11"},{"lineNumber":155,"author":{"gitId":"shawnkai"},"content":"        for (int index : searchResults) {","lastModifiedDate":"2022-09-11"},{"lineNumber":156,"author":{"gitId":"shawnkai"},"content":"            responseString +\u003d String.format(\"%s.%s\\n\",counter, tasks.getTask(index).toString());","lastModifiedDate":"2022-09-11"},{"lineNumber":157,"author":{"gitId":"shawnkai"},"content":"            counter +\u003d 1;","lastModifiedDate":"2022-09-11"},{"lineNumber":158,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"shawnkai"},"content":"        return responseString;","lastModifiedDate":"2022-09-11"},{"lineNumber":160,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":161,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":162,"author":{"gitId":"shawnkai"},"content":"    private String mark(String input) throws IOException {","lastModifiedDate":"2022-09-11"},{"lineNumber":163,"author":{"gitId":"shawnkai"},"content":"        String markString \u003d input.substring(5); //get number of task","lastModifiedDate":"2022-09-11"},{"lineNumber":164,"author":{"gitId":"shawnkai"},"content":"        counter \u003d Integer.parseInt(markString) - 1;//convert to index of task (int)","lastModifiedDate":"2022-09-11"},{"lineNumber":165,"author":{"gitId":"shawnkai"},"content":"        tasks.getTask(counter).mark();","lastModifiedDate":"2022-09-11"},{"lineNumber":166,"author":{"gitId":"shawnkai"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":167,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2022-09-11"},{"lineNumber":168,"author":{"gitId":"shawnkai"},"content":"                \"[\" + tasks.getTask(counter).getStatusIcon() + \"] \" + tasks.getTask(counter).getDescription());","lastModifiedDate":"2022-09-11"},{"lineNumber":169,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":170,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":171,"author":{"gitId":"shawnkai"},"content":"    private String unmark(String input) throws IOException {","lastModifiedDate":"2022-09-11"},{"lineNumber":172,"author":{"gitId":"shawnkai"},"content":"        String dummyString;","lastModifiedDate":"2022-09-11"},{"lineNumber":173,"author":{"gitId":"shawnkai"},"content":"        dummyString \u003d input.substring(7); //get number of task","lastModifiedDate":"2022-09-11"},{"lineNumber":174,"author":{"gitId":"shawnkai"},"content":"        counter \u003d Integer.parseInt(dummyString) - 1; //convert to index of task (int)","lastModifiedDate":"2022-09-11"},{"lineNumber":175,"author":{"gitId":"shawnkai"},"content":"        tasks.getTask(counter).unmark();","lastModifiedDate":"2022-09-11"},{"lineNumber":176,"author":{"gitId":"shawnkai"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2022-09-11"},{"lineNumber":177,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2022-09-11"},{"lineNumber":178,"author":{"gitId":"shawnkai"},"content":"                \"[\" + tasks.getTask(counter).getStatusIcon() + \"] \" + tasks.getTask(counter).getDescription());","lastModifiedDate":"2022-09-11"},{"lineNumber":179,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":180,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":181,"author":{"gitId":"shawnkai"},"content":"    private String reminder() {","lastModifiedDate":"2022-09-12"},{"lineNumber":182,"author":{"gitId":"shawnkai"},"content":"        String responseString \u003d String.format(\"Reminder for tasks in the upcoming week:\\n\");","lastModifiedDate":"2022-09-12"},{"lineNumber":183,"author":{"gitId":"shawnkai"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-09-12"},{"lineNumber":184,"author":{"gitId":"shawnkai"},"content":"        List\u003cInteger\u003e searchResults \u003d tasks.getUpcomingTasks();","lastModifiedDate":"2022-09-12"},{"lineNumber":185,"author":{"gitId":"shawnkai"},"content":"        for (int index : searchResults) {","lastModifiedDate":"2022-09-12"},{"lineNumber":186,"author":{"gitId":"shawnkai"},"content":"            responseString +\u003d String.format(\"%s.%s\\n\",counter, tasks.getTask(index).toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":187,"author":{"gitId":"shawnkai"},"content":"            counter +\u003d 1;","lastModifiedDate":"2022-09-12"},{"lineNumber":188,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":189,"author":{"gitId":"shawnkai"},"content":"        return responseString;","lastModifiedDate":"2022-09-12"},{"lineNumber":190,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":191,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":191}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.io.File;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"public class Storage {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    File file;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    public Storage() {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"            Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"            this.file \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"            file.createNewFile();","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"    public TaskList loadFile() throws FileNotFoundException {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"            String taskType \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"            if (taskType.isBlank()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"                continue;","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"            String taskName \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"            String doneIndicator \u003d sc.nextLine();","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"            boolean isDone \u003d Integer.parseInt(doneIndicator) \u003d\u003d 1;","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"            Task task;","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"                task \u003d new Todo(taskName);","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"                String deadline \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"                task \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"            } else if (taskType.equals(\"E\")){","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"                String eventTime \u003d sc.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"                task \u003d new Event(taskName, eventTime);","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"            } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"                throw new RuntimeException(\"Duke cannot understand the input file.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"            if (isDone) {","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"                task.mark();","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"            tasks.add(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"        return tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"    public void saveFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"shawnkai"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"shawnkai"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"shawnkai"},"content":"            fw.write(task.saveStringToFile());","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"shawnkai"},"content":"        fw.close();","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":65}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":" * The Task class is an abstract class that has a description and an indicator depicting whether","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":" * it has been done.","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"     * Creates a new Task object with a given description and sets the isDone indicator as false.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"     * Returns the status icon depicting whether the Task has been done.","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"     * @return \u0027X\u0027 if Task is done, \u0027 \u0027 otherwise.","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"     * Returns the description of the Task object.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"     * @return Description of the Task object.","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"     * Sets the status of the Task to \u0027done\u0027.","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"     * Sets the status of the Task to \u0027not done\u0027.","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"     * Returns the task type of the Task object.","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"     * @return The task type of the Task object.","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"shawnkai"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"shawnkai"},"content":"     * Returns the String representation of the Task object.","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"shawnkai"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"shawnkai"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"shawnkai"},"content":"     * Formats the details of the Task object such that the information can be saved and loaded","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"shawnkai"},"content":"     * from files.","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"shawnkai"},"content":"     * @return The String representation of the Task object.","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"shawnkai"},"content":"        return String.format(\"%s\\n%s\\n%d\\n\", getTaskType(), description, isDone ? 1 : 0);","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":82,"author":{"gitId":"shawnkai"},"content":"    public abstract LocalDate getDate();","lastModifiedDate":"2022-09-12"},{"lineNumber":83,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":85}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import java.util.List;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"import static java.time.temporal.ChronoUnit.WEEKS;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"public class TaskList {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"    private List\u003cTask\u003e taskArray;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"        this.taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"        taskArray.add(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    public List\u003cInteger\u003e findTasks(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"        List\u003cInteger\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"            String taskDescription \u003d taskArray.get(i).getDescription();","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"            if (taskDescription.contains(description)) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"                searchResults.add(i);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"        return searchResults;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"        taskArray.remove(index);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"        return taskArray.get(index);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"        return taskArray.size();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"    public List\u003cInteger\u003e getUpcomingTasks() {","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"        List\u003cInteger\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"        LocalDate oneWeekLaterDate \u003d currentDate.plus(1,WEEKS);","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"        Task task;","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"            task \u003d taskArray.get(i);","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"            if (task.getTaskType() !\u003d \"T\") { //if task is not todo type","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"                LocalDate taskDate \u003d taskArray.get(i).getDate();","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"                if (taskDate.isBefore(oneWeekLaterDate) \u0026\u0026 taskDate.isAfter(currentDate)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"                    searchResults.add(i);","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"        return searchResults;","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":58}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":" * A Todo object is a Task object that needs to be completed by user.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":" *","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"     * Creates a new Todo object with a given description.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"shawnkai"},"content":"     * The task type for a Deadline object is \"T\".","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"shawnkai"},"content":"     * @return \"T\"","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"shawnkai"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"shawnkai"},"content":"        return null;","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"shawnkai"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"shawnkai"},"content":"        return \"T\";","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"shawnkai"},"content":"     * Returns the String representation of the Todo object.","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"shawnkai"},"content":"     * @return String representation of the Todo object","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"shawnkai"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"shawnkai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"shawnkai"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"shawnkai"},"content":"     * Formats the details of the Todo object such that the information can be saved and loaded","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"shawnkai"},"content":"     * from files.","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"shawnkai"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"shawnkai"},"content":"     * @return The String representation of the Todo object in a format that can be","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"shawnkai"},"content":"     * saved to files.","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"shawnkai"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"shawnkai"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"shawnkai"},"content":"    String saveStringToFile() {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"shawnkai"},"content":"        return super.saveStringToFile();","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shawnkai":57}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"public class UI {","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"    Scanner scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"    public UI() {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    public void welcomeUser() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"    public void sayBye() {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"    public String readInput() {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"shawnkai"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"shawnkai":20}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"public class EventTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    public void getTaskTypeTest(){","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"        assertEquals(new Event(\"read book\", \"2019-10-15\").getTaskType(), \"E\");","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shawnkai"},"content":"    public void toStringTest(){","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shawnkai"},"content":"        assertEquals(new Event(\"read book\", \"2019-10-15\").toString(),","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shawnkai"},"content":"                \"[E][ ] read book (at: Oct 15 2019)\" );","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shawnkai":17}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"    @Test","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"    public void getTaskTypeTest() {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"        assertEquals(new Todo(\"read book\").getTaskType(), \"T\");","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shawnkai":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shawnkai"},"content":"todo read book","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"shawnkai"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shawnkai"},"content":"event project meeting /at 2019-10-16","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shawnkai"},"content":"todo join sports club","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"shawnkai"},"content":"mark 4","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"shawnkai"},"content":"mark 1","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"shawnkai"},"content":"todo borrow book","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"shawnkai"},"content":"list","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"shawnkai"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"shawnkai"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"shawnkai"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"shawnkai"},"content":"bye","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"shawnkai":12}}]

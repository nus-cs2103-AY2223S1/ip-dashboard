[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"# duke.main.Duke project template","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sheshenk":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sheshenk":21,"-":40}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to add a new Deadline object.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    private String description;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    public AddDeadlineCommand(String description, LocalDateTime byDate) {","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"        assert byDate !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     * Returns a task added status string after adding task to list.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to add the task to.","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"     * @return Task added status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"        Deadline t \u003d new Deadline(description, byDate);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"        tasks.add(t);","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskStatusString(Message.ADDED, t);","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":39}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to add a new Event object","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    private String description;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    private LocalDateTime atDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    public AddEventCommand(String description, LocalDateTime atDate) {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"        assert atDate !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     * Returns a task added status string after adding task to list.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to add the task to.","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"     * @return Task added status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"        Event t \u003d new Event(description, atDate);","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"        tasks.add(t);","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskStatusString(Message.ADDED, t);","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":40}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to add a new Todo object","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    private String description;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"     * Returns a task added status string after adding task to list.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to add the task to.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     * @return Task added status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"        Todo t \u003d new Todo(description);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        tasks.add(t);","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskStatusString(Message.ADDED, t);","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"     * Returns a string denoting command outcome after execution.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to update.","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"     * @return String denoting command outcome after execution.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":19}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to delete a task at index.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    private int idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"     * Returns a task deleted status string after deleting task from list.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to delete from.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * @return Task deleted status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If idx is out of bounds.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"        Task deleted \u003d tasks.delete(this.idx);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskStatusString(Message.DELETE, deleted);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to exit the Duke client.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"     * Returns the goodbye string from Message.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to update.","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"     * @return Goodbye string.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTerminationString();","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":22}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to find a subset of tasks based on query.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    private String query;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"        assert query !\u003d null : \"Query cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"     * Searches a task list for the query and returns a string listing those tasks.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to filter.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * @return String representing a filtered task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If the filtered list is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"        TaskList filtered \u003d tasks.filter(this.query);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        if (filtered.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.NO_RESULTS_FOUND);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskListString(filtered);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to list all tasks in a task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"     * Returns a string listing all the tasks in a task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to list.","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"     * @return String listing all the tasks in a task list.","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If task list is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskListString(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to mark a task at index as done.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    private int idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    public MarkCommand(int idx) {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"     * Returns a task marked status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to update.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * @return Task marked status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"        Task marked \u003d tasks.mark(this.idx);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskStatusString(Message.MARK, marked);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":34}},{"path":"src/main/java/duke/command/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"public class SnoozeCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    private int idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    private int amount;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    private char type;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    public SnoozeCommand(int idx, int amount, char type) {","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    private static LocalDateTime addTime(LocalDateTime time, int amount, char type) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"        switch (type) {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"        case \u0027M\u0027:","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"            return time.plusMonths(amount);","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"            return time.plusDays(amount);","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"        case \u0027h\u0027:","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"            return time.plusHours(amount);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        case \u0027m\u0027:","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"            return time.plusMinutes(amount);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.INVALID_SNOOZE_TYPE);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"        Task task \u003d tasks.get(this.idx - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"        LocalDateTime incrementedTime \u003d addTime(task.getTime(), this.amount, this.type);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"        task.setTime(incrementedTime);","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskStatusString(Message.SNOOZED, task);","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":46}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":" * Represents an executable command to mark a task at index as undone.","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    private int idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    public UnmarkCommand(int idx) {","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"     * Returns a task unmarked status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     * @param tasks TaskList object to update.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     * @param storage Storage object to manage save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * @return Task unmarked status string.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"        Task unmarked \u003d tasks.unmark(this.idx);","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        return Ui.getTaskStatusString(Message.UNMARK, unmarked);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":34}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.exception;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":" * Represents an error that is encountered within the Duke application.","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    public DukeException(Message message) {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"        super(message.toString());","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"        return super.getMessage();","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sheshenk":21}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.main;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public class Duke {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"    private static final String saveFilePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    /* Task list to store all the tasks. */","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    /* Storage object to manage save file. */","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    public Duke() {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"        this.storage \u003d new Storage(saveFilePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * Returns a string that is used in the app\u0027s response dialog, based on user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     * @param input User input from text field.","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"     * @return String to use in Lurch\u0027s response dialog.","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"            Command command \u003d Parser.getCommand(input);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"            assert command !\u003d null : \"Command cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"            String output \u003d command.execute(this.tasks, this.storage);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"            assert output !\u003d null : \"Output cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"            return output;","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"            return Ui.getErrorMessageString(e);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sheshenk":40,"-":1}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.main;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"sheshenk":9}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.main;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sheshenk":28}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"import duke.command.SnoozeCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":" * Represents a class that can extract commands and tasks from user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"     * Returns an executable command object by parsing user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"     * @param input User input from app\u0027s text field.","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"     * @return Executable command object.","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"    public static Command getCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"        String[] commandTokens \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"        String direction \u003d commandTokens[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"        assert direction !\u003d null : \"Direction cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"        String meta \u003d commandTokens.length \u003e 1 ? commandTokens[1] : null;","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"        switch (direction) {","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"        case \"list\":","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"            int unmarkIndex \u003d extractIndex(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"            return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"            int markIndex \u003d extractIndex(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"sheshenk"},"content":"            return new MarkCommand(markIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"sheshenk"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"sheshenk"},"content":"            int deleteIndex \u003d extractIndex(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"sheshenk"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"sheshenk"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"sheshenk"},"content":"            String[] deadlineTokens \u003d getTaskTokens(meta, \"/by\", Message.NO_BY_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"sheshenk"},"content":"            return new AddDeadlineCommand(deadlineTokens[0], parseDateTime(deadlineTokens[1]));","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"sheshenk"},"content":"        case \"event\":","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"sheshenk"},"content":"            String[] eventTokens \u003d getTaskTokens(meta, \"/at\", Message.NO_AT_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"sheshenk"},"content":"            return new AddEventCommand(eventTokens[0], parseDateTime(eventTokens[1]));","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"sheshenk"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"sheshenk"},"content":"            validateMetaNullity(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"sheshenk"},"content":"            return new AddTodoCommand(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"sheshenk"},"content":"        case \"find\":","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"sheshenk"},"content":"            validateMetaNullity(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"sheshenk"},"content":"            return new FindCommand(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"sheshenk"},"content":"        case \"snooze\":","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"sheshenk"},"content":"            String[] snoozeTokens \u003d getTaskTokens(meta, \"/for\", Message.NO_FOR_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"sheshenk"},"content":"            int snoozeAmount \u003d extractIndex(snoozeTokens[1]);","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"sheshenk"},"content":"            char snoozeType \u003d snoozeTokens[1].charAt(snoozeTokens[1].length() - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"sheshenk"},"content":"            validateSnoozeType(snoozeType);","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"sheshenk"},"content":"            return new SnoozeCommand(extractIndex(snoozeTokens[0]), snoozeAmount, snoozeType);","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"sheshenk"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.INVALID);","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"sheshenk"},"content":"     * Returns a task object by parsing user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"sheshenk"},"content":"     * @param input User input from app\u0027s text field.","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"sheshenk"},"content":"     * @return Task object.","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"sheshenk"},"content":"    public static Task getTask(String input) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"sheshenk"},"content":"        String[] commandTokens \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"sheshenk"},"content":"        String direction \u003d commandTokens[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"sheshenk"},"content":"        assert direction !\u003d null : \"Direction cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"sheshenk"},"content":"        String meta \u003d commandTokens.length \u003e 1 ? commandTokens[1] : null;","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"sheshenk"},"content":"        switch (direction) {","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"sheshenk"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"sheshenk"},"content":"            String[] deadlineTokens \u003d getTaskTokens(meta, \"/by\", Message.NO_BY_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"sheshenk"},"content":"            return new Deadline(deadlineTokens[0], parseDateTime(deadlineTokens[1]));","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"sheshenk"},"content":"        case \"event\":","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"sheshenk"},"content":"            String[] eventTokens \u003d getTaskTokens(meta, \"/at\", Message.NO_AT_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"sheshenk"},"content":"            return new Event(eventTokens[0], parseDateTime(eventTokens[1]));","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"sheshenk"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"sheshenk"},"content":"            validateMetaNullity(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"sheshenk"},"content":"            return new Todo(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"sheshenk"},"content":"        default:","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.INVALID);","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"sheshenk"},"content":"     * Throws an exception if the meta is null.","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"sheshenk"},"content":"     * @param meta The part of the user input that contains description, date etc.","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If meta is null.","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"sheshenk"},"content":"    private static void validateMetaNullity(String meta) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"sheshenk"},"content":"        if (meta \u003d\u003d null) {","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.DESCRIPTION_EMPTY);","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"sheshenk"},"content":"     * Throws an exception if the tokens are not expected size.","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"sheshenk"},"content":"     * @param tokens Parsed task tokens.","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"sheshenk"},"content":"     * @param invalidMsg Exception message to use.","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If tokens length \u003c 2.","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"sheshenk"},"content":"    private static void validateTokens(String[] tokens, Message invalidMsg) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"sheshenk"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(invalidMsg);","lastModifiedDate":"2022-09-03"},{"lineNumber":129,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":130,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"sheshenk"},"content":"    private static void validateSnoozeType(char snoozeType) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"sheshenk"},"content":"        char[] types \u003d new char[] {\u0027D\u0027, \u0027M\u0027, \u0027h\u0027, \u0027m\u0027};","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"sheshenk"},"content":"        if (!(snoozeType \u003d\u003d \u0027M\u0027 || snoozeType \u003d\u003d \u0027D\u0027 || snoozeType \u003d\u003d \u0027h\u0027 || snoozeType \u003d\u003d \u0027m\u0027)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":135,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.INVALID_SNOOZE_TYPE);","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"sheshenk"},"content":"     * Returns parsed task tokens.","lastModifiedDate":"2022-09-03"},{"lineNumber":141,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":142,"author":{"gitId":"sheshenk"},"content":"     * @param meta The part of the user input that contains description, date etc.","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"sheshenk"},"content":"     * @param invalidMsg Exception message to use.","lastModifiedDate":"2022-09-03"},{"lineNumber":144,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If meta is null or tokens are invalid.","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":146,"author":{"gitId":"sheshenk"},"content":"    private static String[] getTaskTokens(String meta, String delimiter, Message invalidMsg) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":147,"author":{"gitId":"sheshenk"},"content":"        validateMetaNullity(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":148,"author":{"gitId":"sheshenk"},"content":"        String[] tokens \u003d meta.split(\"\\\\s*\" + delimiter + \"\\\\s*\", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"sheshenk"},"content":"        validateTokens(tokens, invalidMsg);","lastModifiedDate":"2022-09-03"},{"lineNumber":150,"author":{"gitId":"sheshenk"},"content":"        return tokens;","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":152,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":153,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"sheshenk"},"content":"     * Returns date-time object from user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":155,"author":{"gitId":"sheshenk"},"content":"     * @param timeString User inputted time string.","lastModifiedDate":"2022-09-03"},{"lineNumber":156,"author":{"gitId":"sheshenk"},"content":"     * @return Parsed date-time object from user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":157,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-09-03"},{"lineNumber":158,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":159,"author":{"gitId":"sheshenk"},"content":"    private static LocalDateTime parseDateTime(String timeString) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":160,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":161,"author":{"gitId":"sheshenk"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy[ H:mm]\");","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"sheshenk"},"content":"            TemporalAccessor temporalAccessor \u003d formatter.parseBest(","lastModifiedDate":"2022-09-03"},{"lineNumber":163,"author":{"gitId":"sheshenk"},"content":"                    timeString,","lastModifiedDate":"2022-09-03"},{"lineNumber":164,"author":{"gitId":"sheshenk"},"content":"                    LocalDateTime::from,","lastModifiedDate":"2022-09-03"},{"lineNumber":165,"author":{"gitId":"sheshenk"},"content":"                    LocalDate::from","lastModifiedDate":"2022-09-03"},{"lineNumber":166,"author":{"gitId":"sheshenk"},"content":"            );","lastModifiedDate":"2022-09-03"},{"lineNumber":167,"author":{"gitId":"sheshenk"},"content":"            if (temporalAccessor instanceof LocalDateTime) {","lastModifiedDate":"2022-09-03"},{"lineNumber":168,"author":{"gitId":"sheshenk"},"content":"                return (LocalDateTime) temporalAccessor;","lastModifiedDate":"2022-09-03"},{"lineNumber":169,"author":{"gitId":"sheshenk"},"content":"            } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":170,"author":{"gitId":"sheshenk"},"content":"                return ((LocalDate) temporalAccessor).atStartOfDay();","lastModifiedDate":"2022-09-03"},{"lineNumber":171,"author":{"gitId":"sheshenk"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":172,"author":{"gitId":"sheshenk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":173,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.DATE_FORMAT_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":174,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":175,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":176,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":178,"author":{"gitId":"sheshenk"},"content":"     * Returns an integer parsed from the meta.","lastModifiedDate":"2022-09-03"},{"lineNumber":179,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":180,"author":{"gitId":"sheshenk"},"content":"     * @param meta User inputted integer value.","lastModifiedDate":"2022-09-03"},{"lineNumber":181,"author":{"gitId":"sheshenk"},"content":"     * @return Parsed integer from meta.","lastModifiedDate":"2022-09-03"},{"lineNumber":182,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If user input cannot be cast to integer.","lastModifiedDate":"2022-09-03"},{"lineNumber":183,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":184,"author":{"gitId":"sheshenk"},"content":"    private static int extractIndex(String meta) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":185,"author":{"gitId":"sheshenk"},"content":"        validateMetaNullity(meta);","lastModifiedDate":"2022-09-03"},{"lineNumber":186,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":187,"author":{"gitId":"sheshenk"},"content":"            return Integer.parseInt(meta.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":188,"author":{"gitId":"sheshenk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":189,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.TASK_INDEX_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":190,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":191,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":192,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":193,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":193}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.storage;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import java.io.File;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":" * Represents an object that tracks, loads, and saves tasks to the save file as changes are made.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    private final String filePath;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     * Returns a Task object from an individual line in the save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"     * @param line Individual line in the save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"     * @return Task from the line if it is able to be parsed, else null.","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"    private static Task parseTaskLine(String line) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        String[] tokens \u003d line.split(\"\\\\s+?\", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(\"Invalid save format\");","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"        int done \u003d Integer.parseInt(tokens[0]);","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"        assert done \u003d\u003d 1 || done \u003d\u003d 0 : \"Save file lime format is invalid.\";","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"        String commandInput \u003d tokens[1];","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"        Task task \u003d Parser.getTask(commandInput);","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"        if (done \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"            task.mark();","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"        return task;","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"     * Returns an ArrayList containing all the parsed tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"     * @return ArrayList containing all the parsed tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"sheshenk"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"sheshenk"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"sheshenk"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(f));","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"sheshenk"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"sheshenk"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"sheshenk"},"content":"                Task t \u003d parseTaskLine(line);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"sheshenk"},"content":"                if (t !\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"sheshenk"},"content":"                    res.add(t);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"sheshenk"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"sheshenk"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"sheshenk"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"sheshenk"},"content":"            reader.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"sheshenk"},"content":"            return res;","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"sheshenk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"sheshenk"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"sheshenk"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"sheshenk"},"content":"                f.createNewFile();","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"sheshenk"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"sheshenk"},"content":"                System.out.println(\"IO error occurred while creating file.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"sheshenk"},"content":"            } finally {","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"sheshenk"},"content":"                return res;","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"sheshenk"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"sheshenk"},"content":"     * Saves all the tasks in the TaskList to a save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"sheshenk"},"content":"     * @param taskList TaskList object containing all the tasks to be saved","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"sheshenk"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"sheshenk"},"content":"        String res \u003d \"\";","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"sheshenk"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"sheshenk"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"sheshenk"},"content":"                String saveText \u003d taskList.get(i).saveText();","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"sheshenk"},"content":"                res +\u003d saveText + \u0027\\n\u0027;","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"sheshenk"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"sheshenk"},"content":"                System.out.println(\"Could not get task.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"sheshenk"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"sheshenk"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"sheshenk"},"content":"            writer.write(res);","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"sheshenk"},"content":"            writer.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"sheshenk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"sheshenk"},"content":"            System.out.println(\"Error occurred while saving tasks.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"sheshenk":102}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":" * Represents a Deadline that can be described and marked as done,","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":" * and holds a date by which the task must be completed.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    public Deadline(String description, LocalDateTime byDate) {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"        super(description);","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"        assert byDate !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"        return this.byDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    public void setTime(LocalDateTime time) {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"        this.byDate \u003d time;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"     * Returns a string that is safe to use with the save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"     * @return String that is of the save file format.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"    public String saveText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"        return String.format(","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"                \"%d deadline %s /by %s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"                this.description,","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"                this.byDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy H:mm\"))","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"        );","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"        return String.format(","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"                \"[D]%s (by: %s)\",","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"                super.toString(),","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"                this.byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"        );","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sheshenk":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":" * Represents an Event that can be described and marked as done,","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":" * and holds a date on which the task will be held.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    private LocalDateTime atDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    public Event(String description, LocalDateTime atDate) {","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"        super(description);","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"        assert atDate !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"        return this.atDate;","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    public void setTime(LocalDateTime time) {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"        this.atDate \u003d time;","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"     * Returns a string that is safe to use with the save file.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"     * @return String that is of the save file format.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"    public String saveText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"        return String.format(","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"                \"%d event %s /at %s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"                this.description,","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"                this.atDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy H:mm\"))","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"        );","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"        return String.format(","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"                \"[E]%s (at: %s)\",","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"                super.toString(),","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"                this.atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"        );","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sheshenk":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":" * Represents a Task that can be described and marked as done.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"     * Returns the task description.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     * @return Task description.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"        return this.description;","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"     * Sets the isDone property to true.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"    public void mark() {","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"     * Sets the isDone property to false.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"     * Returns a string that is safe to use with the save file.","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"     * @return String that is of the save file format.","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"    public abstract String saveText();","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"    public abstract LocalDateTime getTime();","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"    public abstract void setTime(LocalDateTime time) throws DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"sheshenk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"sheshenk"},"content":"        char statusIcon \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"sheshenk"},"content":"        return String.format(\"[%s] %s\", statusIcon, this.description);","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sheshenk":58}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import duke.ui.Message;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" * Represents a task list that can store and update tasks.","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * @return Size of task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"     * Adds and then returns a task object to the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"     * @param task Task object to add to list.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"     * @return The added task object.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"    public Task add(Task task) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"        return task;","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"     * Deletes a task from the task list based on index.","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"     * @param idx Task index to delete.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"     * @return Deleted task.","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If idx not in range.","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"    public Task delete(int idx) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"            return this.taskList.remove(idx - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.OUT_OF_BOUNDS_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"sheshenk"},"content":"     * Marks a task in the task list based on index.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"sheshenk"},"content":"     * @param idx Task index to mark.","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"sheshenk"},"content":"     * @return Marked task.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If idx not in range.","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"sheshenk"},"content":"    public Task mark(int idx) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"sheshenk"},"content":"            Task task \u003d this.taskList.get(idx - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"sheshenk"},"content":"            task.mark();","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"sheshenk"},"content":"            return task;","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"sheshenk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.OUT_OF_BOUNDS_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"sheshenk"},"content":"     * Unmarks a task in the task list based on index.","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"sheshenk"},"content":"     * @param idx Task index to unmark.","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"sheshenk"},"content":"     * @return Unmarked task.","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If idx not in range.","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"sheshenk"},"content":"    public Task unmark(int idx) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"sheshenk"},"content":"            Task task \u003d this.taskList.get(idx - 1);","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"sheshenk"},"content":"            task.unmark();","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"sheshenk"},"content":"            return task;","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"sheshenk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.OUT_OF_BOUNDS_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"sheshenk"},"content":"     * Returns a task in the task list based on index.","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"sheshenk"},"content":"     * @param idx Task index to get.","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"sheshenk"},"content":"     * @return Task at idx.","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If idx not in range.","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"sheshenk"},"content":"    public Task get(int idx) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"sheshenk"},"content":"            return this.taskList.get(idx);","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"sheshenk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.OUT_OF_BOUNDS_ERROR);","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"sheshenk"},"content":"     * Returns a filtered TaskList based on a query.","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"sheshenk"},"content":"     * @param query String to match in tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"sheshenk"},"content":"     * @return TaskList with tasks where description contains query.","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"sheshenk"},"content":"    public TaskList filter(String query) {","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"sheshenk"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"sheshenk"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"sheshenk"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"sheshenk"},"content":"            if (t.getDescription().contains(query)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"sheshenk"},"content":"                result.add(t);","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"sheshenk"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"sheshenk"},"content":"        return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"sheshenk"},"content":"     * Returns a string with tasks on separate lines.","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"sheshenk"},"content":"     * @return String with tasks on separate lines.","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If task list is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":128,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":129,"author":{"gitId":"sheshenk"},"content":"    public String getListString() throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":130,"author":{"gitId":"sheshenk"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":131,"author":{"gitId":"sheshenk"},"content":"        if (this.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-09-03"},{"lineNumber":132,"author":{"gitId":"sheshenk"},"content":"            throw new DukeException(Message.EMPTY);","lastModifiedDate":"2022-09-03"},{"lineNumber":133,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":134,"author":{"gitId":"sheshenk"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2022-09-03"},{"lineNumber":135,"author":{"gitId":"sheshenk"},"content":"            msg +\u003d i + 1 + \". \" + this.get(i);","lastModifiedDate":"2022-09-03"},{"lineNumber":136,"author":{"gitId":"sheshenk"},"content":"            if (i \u003c this.getSize() - 1) {","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"sheshenk"},"content":"                msg +\u003d \u0027\\n\u0027;","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"sheshenk"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"sheshenk"},"content":"        return msg;","lastModifiedDate":"2022-09-03"},{"lineNumber":141,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":142,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"sheshenk":143}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":" * Represents an Todo Task that can be described and marked as done.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    public String saveText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        return String.format(\"%d todo %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"        return null;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"    public void setTime(LocalDateTime time) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"        throw new DukeException(\"You can\u0027t snooze a Todo task\");","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sheshenk":34}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    private Label label;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        label.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"    private void flip() {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"    public static DialogBox getLurchDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"        DialogBox d \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"        d.flip();","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"        return d;","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"sheshenk":52}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"    private Image lurchImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaLurch.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"        this.duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"                DialogBox.getLurchDialog(Ui.getGreetingMessage(), lurchImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"    public void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"        String lurchText \u003d duke.getResponse(userText);","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"                DialogBox.getLurchDialog(lurchText, lurchImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sheshenk":50}},{"path":"src/main/java/duke/ui/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"public enum Message {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"    MARK(\"Very well, this task is done:\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"    UNMARK(\"Very well, this task is now undone:\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"    DELETE(\"Very well, task deleted:\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"    ADDED(\"Very well, you have added another task:\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"    SNOOZED(\"Very well, you have snoozed this task:\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"    INVALID(\"I struggle to interpret your command.\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"    GREETING(\"Greetings, I\u0027m Lurch.\\nYou rang?\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    EMPTY(\"There is nothing in your agenda.\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"    BYE(\"Have a lovely day with dark and cloudy skies.\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"    ERROR(\"Oh bother!\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"    OUT_OF_BOUNDS_ERROR(\"The number you have given me is too high or too low\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"    TASK_INDEX_ERROR(\"That is not the correct way to write a number\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    NO_AT_ERROR(\"Use \\\"/at\\\" to tell me when the event is, please\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"    NO_BY_ERROR(\"Use \\\"/by\\\" to tell me when the event is, please\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    NO_FOR_ERROR(\"Use \\\"/for\\\" to tell me how long to snooze, please\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"    DATE_FORMAT_ERROR(\"That is not how you write a date\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    NO_RESULTS_FOUND(\"I found nothing matching your request.\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    DESCRIPTION_EMPTY(\"You will need to describe your task.\"),","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"    INVALID_SNOOZE_TYPE(\"You have not entered a valid snooze type.\");","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"    private String value;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"    Message(String value) {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"    public String toString() {","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"        return value;","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"sheshenk":34}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"package duke.ui;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":" * Represents a helper class to format and retrieve various strings that Lurch will use to respond.","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"public class Ui {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"     * Returns a string to use to greet users at app launch.","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"     * @return String with a greeting.","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"    public static String getGreetingMessage() {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"        return Message.GREETING.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"     * Returns a task status string with a prefix and indented task string.","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"     * @param prefix Prefix to task string.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"     * @param task Task to convert to string","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"sheshenk"},"content":"     * @return String with a prefix and indented task string.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"sheshenk"},"content":"    public static String getTaskStatusString(Message prefix, Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"sheshenk"},"content":"        return String.format(\"%s\\n    %s\", prefix, task);","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"sheshenk"},"content":"     * Returns a list of tasks line by line.","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"sheshenk"},"content":"     * @param taskList Task list to convert to a string.","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"sheshenk"},"content":"     * @return String with a list of tasks line by line.","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"sheshenk"},"content":"     * @throws DukeException If task list is empty.","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"sheshenk"},"content":"    public static String getTaskListString(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"sheshenk"},"content":"        return taskList.getListString();","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"sheshenk"},"content":"     * Returns a string to use to dismiss users at app exit.","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"sheshenk"},"content":"     * @return String with a goodbye.","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"sheshenk"},"content":"    public static String getTerminationString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"sheshenk"},"content":"        return Message.BYE.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"sheshenk"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"sheshenk"},"content":"     * Returns a formatted error message from an exception object.","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"sheshenk"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"sheshenk"},"content":"     * @param exc DukeException object.","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"sheshenk"},"content":"     * @return Formatted error message.","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"sheshenk"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"sheshenk"},"content":"    public static String getErrorMessageString(DukeException exc) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"sheshenk"},"content":"        return String.format(\"%s\\n%s\", Message.ERROR, exc);","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"sheshenk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"sheshenk"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"sheshenk":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"        \u003cLabel fx:id\u003d\"label\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #fff;\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"                \u003cFont size\u003d\"16.0\" name\u003d\"Times New Roman\"/\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"12.0\" right\u003d\"12.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"56.0\" fitWidth\u003d\"56.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sheshenk":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sheshenk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sheshenk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sheshenk"},"content":"\u003cAnchorPane style\u003d\"-fx-background-color: #333;\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"sheshenk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sheshenk"},"content":"        \u003cTextField style\u003d\"-fx-background-color: #222; -fx-text-fill: #fff;\" fx:id\u003d\"userInput\" layoutY\u003d\"550.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"320.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"sheshenk"},"content":"        \u003cButton style\u003d\"-fx-background-color: #111; -fx-text-fill: #f00;\" fx:id\u003d\"sendButton\" layoutX\u003d\"320.0\" layoutY\u003d\"550.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"80.0\" text\u003d\"Command\" /\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"sheshenk"},"content":"        \u003cScrollPane style\u003d\"-fx-background-color: #333;\" fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"550.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"sheshenk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sheshenk"},"content":"                \u003cVBox style\u003d\"-fx-background-color: #333;\" fx:id\u003d\"dialogContainer\" prefHeight\u003d\"550.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"sheshenk"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"                        \u003cInsets top\u003d\"6.0\" bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sheshenk"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sheshenk"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sheshenk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sheshenk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sheshenk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sheshenk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sheshenk":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sheshenk"},"content":"hello","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sheshenk"},"content":"todo eat burger","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sheshenk"},"content":"deadline cs2103t tasks /by tomorrow","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sheshenk"},"content":"event football /at 6PM","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sheshenk"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sheshenk"},"content":"list","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sheshenk":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sheshenk"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sheshenk":1,"-":20}}]

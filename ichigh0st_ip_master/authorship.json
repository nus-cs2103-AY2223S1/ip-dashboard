[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ichigh0st":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"plugins {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"repositories {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"dependencies {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"test {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"    testLogging {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"        showExceptions true","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"        showCauses true","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"application {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"shadowJar {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"run{","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":62}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"@rem","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"echo.","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"goto fail","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":":init","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":":win9xME_args","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"ichigh0st"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"ichigh0st"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"ichigh0st"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"ichigh0st"},"content":":execute","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"ichigh0st"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"ichigh0st"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"ichigh0st"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"ichigh0st"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"ichigh0st"},"content":":end","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"ichigh0st"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"ichigh0st"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"ichigh0st"},"content":":fail","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"ichigh0st"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"ichigh0st"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"ichigh0st"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"ichigh0st"},"content":"exit /b 1","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"ichigh0st"},"content":":mainEnd","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"ichigh0st"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"ichigh0st"},"content":":omega","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":103}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"    private DialogBox(String s, Image i) {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"        dialog.setText(s);","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"        displayPicture.setImage(i);","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"    private void flip() {","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"    public static DialogBox getDukeDialog(String s, Image i) {","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"        db.flip();","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"        return db;","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"ichigh0st":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":" * Encapsulates a chatbot by the name of Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":" * This chatbot acts as a task tracker for users to track the tasks they","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":" * wish to complete.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":" * Three types of tasks can be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":" * Tasks without any associated date and time can be added as a Todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":" * Tasks that need to be completed by a certain date and time can be added as a Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":" * Tasks that have a starting date and time and an ending date or time can be added as an Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":" * Tasks can be added and deleted from the task list using their index. Each task can be","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":" * marked as done when the user has completed it, or marked as not done. The entire task","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":" * list can be sent to the user upon request. Users can either search for the tasks occurring","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":" * on a specified date, or tasks containing a specified search term. Duke will inform the user","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":" * if it receives a command that it does not understand, or if the input format is unable to be","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":" * understood by Duke\u0027s parser.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":" * Duke will stop running upon receiving the \"bye\" command.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"public class Duke {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a new instance of Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"     * Duke will load information saved from previous instances, if any,","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"     * upon START-up.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"    public Duke() {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"            Ui.fileLoadError();","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"     * Generates a response to user input.","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"     * @param input Input from the user.","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"     * @return A string containing Duke\u0027s response.","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"            String output \u003d command.execute(this.tasks, this.storage);","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"            if (command.isExit()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"                System.exit(0);","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"            return output;","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":75}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"            stage.show();","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"ichigh0st":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":" * This class encapsulates the chat interface.","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    private final Image USER_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    private final Image DUKE_IMAGE \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     * Initializes the program.","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.welcome(), DUKE_IMAGE));","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"        assert response !\u003d null : \"Duke does not have a response to the input.\";","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE),","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"                DialogBox.getDukeDialog(response, DUKE_IMAGE)","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"        );","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"ichigh0st":56}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to exit Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     * Saves the task list to the hard drive.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save tasks to a local file.","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"     * @return A string containing a goodbye message.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"     * @throws DukeException If the task list could not be saved to the hard drive.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    private static String writeToFile(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"            tasks.writeToFile(storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"            return Ui.goodbye();","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"            throw new DukeException(Ui.saveFail());","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"     * This command exits Duke and saves the task list to the hard drive.","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"        super.setExit();","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"        return writeToFile(tasks, storage);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":46}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a command that a user would send to Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"     * Sets the value of isExit to true.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    public void setExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"     * Returns the value of isExit to indicate to Duke","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"     * if this command is an exit command or not.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"     * @return Value of isExit.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"        return this.isExit;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"     * @return The response of Duke.","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"     * @throws DukeException if the command could not be executed successfully.","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":39}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to add a new Deadline task.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a Deadline Command with the Deadline task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * @param deadline The Deadline task to be added.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * This command adds the deadline to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"        return tasks.add(this.deadline);","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":36}},{"path":"src/main/java/duke/commands/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents all other commands not understood by Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class DefaultCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"     * This command sends a message to the user whenever they","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"     * enter a command that Duke cannot understand,","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * or if the message was empty.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"        return Ui.invalidInput();","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":26}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private int index;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a delete command with the index of the task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * to be deleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * This command deletes the task specified by the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"        return tasks.delete(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":36}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to add a new Event task.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private Event event;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * Constructs an EventCommand with the Event task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * @param event The Event task to be added.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * This command adds the event to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"        return tasks.add(event);","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":36}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to search for tasks containing the","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * specified search term.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private String keywords;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a Find Command with the search term the user","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * wants to search for.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * @param keywords Search term to be searched for.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    public FindCommand(String keywords) {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"        return tasks.find(keywords);","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":29}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to print the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"     * This command prints the task list to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        return tasks.printList();","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":25}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to mark a task in the","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" * task list as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"    private int index;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a Mark Command with the task to be marked.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * This command marks the specified task in the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     * as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"        return tasks.mark(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":38}},{"path":"src/main/java/duke/commands/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to search for tasks occurring","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":" * on a specified searchDate.","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    private LocalDate searchDate;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a Search Command with the searchDate the user wants","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     * to search for.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"     * @param searchDate Date to be searched for.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"     * @throws DateTimeParseException If searchDate is in an invalid format.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    public SearchCommand(LocalDate searchDate) throws DateTimeParseException {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"        this.searchDate \u003d searchDate;","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"        return tasks.search(searchDate);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":33}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to add a new Todo task.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private ToDo toDo;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a Todo Command with the Todo task to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     * @param toDo The Todo task to be added.","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"    public TodoCommand(ToDo toDo) {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     * This command adds the Todo to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"        return tasks.add(toDo);","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":36}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a command to mark a task in the task list as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private int index;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * Constructs an Unmark Command with the task to be marked","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * This command marks the specified task in the task","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     * list as not done yet.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     * @param tasks Contains the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save and load tasks from a local file.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"        return tasks.unmark(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":38}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.exception;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":" * Signals that Duke has encountered an invalid input from the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"        super(errorMessage);","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"ichigh0st":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.DefaultCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.SearchCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":" * Represents a parser to parse inputs from the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    private static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"     * Makes sense of the user input and returns the","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"     * corresponding command to be executed.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"     * @param input Input from the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"     * @return Command to be executed.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"     * @throws DukeException if the user has entered an invalid input.","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"        String command \u003d arr[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"        switch (command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"                int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidMarkInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"                int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidUnmarkInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"                String description \u003d arr[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"                return new TodoCommand(new ToDo(description));","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidTaskInput(Task.TaskType.ToDo));","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"ichigh0st"},"content":"                String info \u003d arr[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"ichigh0st"},"content":"                String[] descriptionAndDateTime \u003d info.split(\" /by \", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"ichigh0st"},"content":"                String description \u003d descriptionAndDateTime[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"ichigh0st"},"content":"                String by \u003d descriptionAndDateTime[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"ichigh0st"},"content":"                String[] dateTime \u003d by.split(\" \");","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"ichigh0st"},"content":"                LocalDate day \u003d LocalDate.parse(dateTime[0], dateFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"ichigh0st"},"content":"                //check if time was provided","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"ichigh0st"},"content":"                if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"ichigh0st"},"content":"                    return new DeadlineCommand(new Deadline(description, day));","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"ichigh0st"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"ichigh0st"},"content":"                    LocalTime time \u003d LocalTime.parse(dateTime[1], timeFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"ichigh0st"},"content":"                    return new DeadlineCommand(new Deadline(description, day, time));","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"ichigh0st"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"ichigh0st"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidTaskInput(Task.TaskType.Deadline));","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"ichigh0st"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidDateTimeInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"ichigh0st"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"ichigh0st"},"content":"                String info \u003d arr[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"ichigh0st"},"content":"                String[] descriptionAndTimings \u003d info.split(\" /\", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"ichigh0st"},"content":"                String description \u003d descriptionAndTimings[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"ichigh0st"},"content":"                String otherEventInfo \u003d descriptionAndTimings[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"ichigh0st"},"content":"                String[] prepAndTiming \u003d otherEventInfo.split(\" \", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"ichigh0st"},"content":"                String preposition \u003d prepAndTiming[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"ichigh0st"},"content":"                String timings \u003d prepAndTiming[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"ichigh0st"},"content":"                String[] startEndDateTimes \u003d timings.split(\" - \");","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"ichigh0st"},"content":"                LocalDateTime startDateTime \u003d LocalDateTime.parse(startEndDateTimes[0], dateTimeFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"ichigh0st"},"content":"                //assume user provided end date and time","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"ichigh0st"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"ichigh0st"},"content":"                    LocalDateTime endDateTime \u003d LocalDateTime.parse(startEndDateTimes[1], dateTimeFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"ichigh0st"},"content":"                    return new EventCommand(new Event(description, preposition, startDateTime, endDateTime));","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"ichigh0st"},"content":"                //error indicates user only provided an end time","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"ichigh0st"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"ichigh0st"},"content":"                    LocalTime endTime \u003d LocalTime.parse(startEndDateTimes[1], timeFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"ichigh0st"},"content":"                    return new EventCommand(new Event(description, preposition, startDateTime, endTime));","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"ichigh0st"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"ichigh0st"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidTaskInput(Task.TaskType.Event));","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"ichigh0st"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidStartEndDateInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":125,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"ichigh0st"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"ichigh0st"},"content":"                int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"ichigh0st"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"ichigh0st"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidDeleteInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":132,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"ichigh0st"},"content":"        case SearchCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"ichigh0st"},"content":"                LocalDate searchDate \u003d LocalDate.parse(arr[1], dateFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"ichigh0st"},"content":"                return new SearchCommand(searchDate);","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"ichigh0st"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.emptyDateInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":139,"author":{"gitId":"ichigh0st"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.invalidDateInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":141,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"ichigh0st"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"ichigh0st"},"content":"                String keywords \u003d arr[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":145,"author":{"gitId":"ichigh0st"},"content":"                if (keywords.equals(\"\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":146,"author":{"gitId":"ichigh0st"},"content":"                    throw new DukeException(Ui.emptyFindInput());","lastModifiedDate":"2022-09-07"},{"lineNumber":147,"author":{"gitId":"ichigh0st"},"content":"                }","lastModifiedDate":"2022-09-07"},{"lineNumber":148,"author":{"gitId":"ichigh0st"},"content":"                return new FindCommand(keywords);","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"ichigh0st"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.emptyFindInput());","lastModifiedDate":"2022-09-04"},{"lineNumber":151,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"ichigh0st"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"ichigh0st"},"content":"            return new DefaultCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":158}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":" * Encapsulates storage to save the task list to","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":" * the hard drive and load the task list from the hard drive.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"    private static final File DATA_DIRECTORY \u003d new File(\"data/\");","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    private static final File LIST_FILE \u003d new File(\"data/list.txt\");","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    private static ArrayList\u003cString[]\u003e infoList;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * Loads the task list from a file in the hard drive. If the","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     * required directory or file cannot be made, an empty TaskList is created.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"     * @return A list containing information about each task to be saved in TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"     * @throws IOException If the directory or file cannot be created.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"    private static void createDirectoryIfNotExists() {","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"        if (!DATA_DIRECTORY.exists()) {","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"            DATA_DIRECTORY.mkdir();","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    private static void createFile() throws IOException {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"        createDirectoryIfNotExists();","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"        LIST_FILE.createNewFile();","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"     * Loads information from a file on the hard drive, if any,","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"     * into Duke.","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"     * @return A list containing the tasks found on the file, if any.","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"     * @throws IOException if there was an error creating the file or data directory.","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"    public ArrayList\u003cString[]\u003e load() throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"        infoList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"        //create a file to store the task list if it does not exist","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"        if (!LIST_FILE.exists()) {","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"            createFile();","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"            return infoList;","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"        //read contents from file containing the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"        assert LIST_FILE.exists() : \"File not created and exception not thrown.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"        Scanner listSc \u003d new Scanner(LIST_FILE);","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"        while (listSc.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"            String[] info \u003d listSc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"            infoList.add(info);","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"        return infoList;","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"     * Saves the contents of TaskList to the hard drive.","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"     * @param taskDescriptions An array containing information about each task.","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":"     * @throws IOException If the directory or list file cannot be found.","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"    public void save(String[] taskDescriptions) throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"        FileWriter fw \u003d new FileWriter(\"data/list.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"        for (String task : taskDescriptions) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":"            fw.write(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"        fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":76}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":" * Represents a task that needs to be done before a specific date/time.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"    private LocalDate day;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    private LocalTime time;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a task that has to be done before the specified date.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * @param day Date the task needs to be completed by.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    public Deadline(String description, LocalDate day) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a task that has to be done before the specified date and time.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     * @param day The date the task needs to be completed by.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     * @param time The time the task needs to be completed by.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"    public Deadline(String description, LocalDate day, LocalTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"    public boolean isOn(LocalDate searchDate) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"        return this.day.equals(searchDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"    public String fileDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"            return \"D | \" + super.fileDescription() + \" | \"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"                    + day;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"            return \"D | \" + super.fileDescription() + \" | \"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"                    + day + \" | \" + time;","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + day.format(super.dateFormatter) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"                    + day.format(super.dateFormatter) + \", \"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"                    + time.format(super.timeFormatter) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ichigh0st":63}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" * Represents a task that starts and ends at a specific time.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    private String preposition;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a task that starts at the specified date and time and ends","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"     * on the specified date and time.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"     * @param preposition Relevant preposition.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"     * @param startDateTime The date and time the task occurs on.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"     * @param endDateTime The date and time the task ends on.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    public Event(String description, String preposition, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"        super(description);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"        this.preposition \u003d preposition;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a task that starts and ends on the same date.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"     * @param preposition Relevant preposition.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"     * @param startDateTime The date and time the task occurs on.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"     * @param endTime The time the task ends at.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"    public Event(String description, String preposition, LocalDateTime startDateTime, LocalTime endTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"        this.preposition \u003d preposition;","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"    public boolean isOn(LocalDate searchDate) {","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"        return startDateTime.toLocalDate().equals(searchDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"    public String fileDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"            return \"E | \" + super.fileDescription() + \" | \" + preposition","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"                    + \" | \" + startDateTime + \" | \" + endDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"            return \"E | \" + super.fileDescription() + \" | \" + preposition","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"                    + \" | \" + startDateTime + \" | \" + endTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"            return \"[E]\" + super.toString() + \" (\" + preposition + \": \"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":"                    + startDateTime.format(super.dateTimeFormatter) + \" to \"","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"                    + endDateTime.format(super.dateTimeFormatter) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"            return \"[E]\" + super.toString() + \" (\" + preposition + \": \"","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"                    + startDateTime.format(super.dateTimeFormatter) + \" to \"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":"                    + endTime.format(super.timeFormatter) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ichigh0st":75}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":" * Represents a task the user wishes to complete.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"    protected DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd LLL yyyy\");","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"    protected DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"    protected DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"            \"EEE, dd LLL yyyy, hh:mma\"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"    );","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    private String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"     * TaskType values are used to indicate the type of the Task","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"     * to retrieve the corresponding information.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    public enum TaskType {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"        ToDo, Deadline, Event","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a new task.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"     * Sets the status of the task to done.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"     * Sets the status of the task to not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"    public void setUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"     * Converts the information of the task to a format suitable","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"     * for saving in a data file.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"     * @return A description of the task to be saved in a data file.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"    public String fileDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"            return \"1 | \" + this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"            return \"0 | \" + this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"     * Indicates whether the task description contains the given search term.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":"     * @param searchTerm Search term to search for.","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"     * @return True if the task description contains the given search term.","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"    public boolean containsSearchTerm(String searchTerm) {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"        return this.description.contains(searchTerm);","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"ichigh0st"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"ichigh0st"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"ichigh0st"},"content":"        String done;","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"ichigh0st"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"ichigh0st"},"content":"            done \u003d \"[X]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"ichigh0st"},"content":"            done \u003d \"[ ]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"ichigh0st"},"content":"        return done + \" \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"ichigh0st"},"content":"     * Indicates whether the task occurs on the given date.","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"ichigh0st"},"content":"     * @param searchDate The date to be checked.","lastModifiedDate":"2022-09-07"},{"lineNumber":94,"author":{"gitId":"ichigh0st"},"content":"     * @return True if the task occurs on the given date.","lastModifiedDate":"2022-09-07"},{"lineNumber":95,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":96,"author":{"gitId":"ichigh0st"},"content":"    public abstract boolean isOn(LocalDate searchDate);","lastModifiedDate":"2022-09-07"},{"lineNumber":97,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ichigh0st":97}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":" * Encapsulates a task list containing the tasks","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":" * that the user has requested for Duke to add.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    public TaskList() {}","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     * Constructs the task list using information about existing","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"     * tasks save in a data file.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"     * @param infoList A list containing information about the tasks to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    public TaskList(ArrayList\u003cString[]\u003e infoList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"        for (String[] info : infoList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"            Task t;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"            if (info[0].equals(\"T\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"                t \u003d new ToDo(info[2]);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"            } else if (info[0].equals(\"D\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"                if (info.length \u003d\u003d 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"                    t \u003d new Deadline(info[2], LocalDate.parse(info[3]));","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"                    t \u003d new Deadline(","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"                            info[2], LocalDate.parse(info[3]), LocalTime.parse(info[4]));","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"                    t \u003d new Event(","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"                            info[2], info[3], LocalDateTime.parse(info[4]),","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"                            LocalDateTime.parse(info[5]));","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"                    t \u003d new Event(","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"                            info[2], info[3], LocalDateTime.parse(info[4]),","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"                            LocalTime.parse(info[5]));","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"            add(t);","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"            if (info[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"                t.setDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"     * Prints the contents of the task list to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":"    public String printList() {","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"            return Ui.START + \"your list is empty. start adding some tasks to do now!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"            String reply \u003d Ui.START + \"these are the tasks in your list:\";","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":"            int x \u003d 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"                reply +\u003d \"\\n  \" + x + \". \" + task.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"                x++;","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"ichigh0st"},"content":"            assert x \u003e 1 : \"No tasks in task list.\";","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"ichigh0st"},"content":"            return reply;","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"ichigh0st"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"ichigh0st"},"content":"     * @param t Task to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that the task was successfully added.","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"ichigh0st"},"content":"    public String add(Task t) {","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"ichigh0st"},"content":"        String reply;","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"ichigh0st"},"content":"        tasks.add(t);","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"ichigh0st"},"content":"        reply \u003d Ui.START + \"added:\\n\" + \"     \" + t;","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"ichigh0st"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"ichigh0st"},"content":"            reply +\u003d \"\\n  you now have 1 task in the list. type list to see it!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"ichigh0st"},"content":"            reply +\u003d \"\\n  now you have \" + tasks.size() + \" tasks in the list. type list to view them.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"ichigh0st"},"content":"        return reply;","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"ichigh0st"},"content":"     * Deletes the task at the specified position in the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"ichigh0st"},"content":"     * @param i Index of the task to delete","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that the specified task was successfully deleted,","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"ichigh0st"},"content":"     *     or that there are not tasks to delete if the task list is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"ichigh0st"},"content":"     * @throws DukeException if the user entered an invalid index.","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"ichigh0st"},"content":"    public String delete(int i) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"ichigh0st"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"ichigh0st"},"content":"            return Ui.START + \"hmm, you do not have any tasks in your list to delete. add some now!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"ichigh0st"},"content":"            String reply \u003d \"\";","lastModifiedDate":"2022-09-04"},{"lineNumber":113,"author":{"gitId":"ichigh0st"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"ichigh0st"},"content":"                Task t \u003d tasks.remove(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"ichigh0st"},"content":"                reply +\u003d Ui.START + \"okay! i have deleted the following task from your list:\";","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"ichigh0st"},"content":"                reply +\u003d \"\\n     \" + t;","lastModifiedDate":"2022-09-04"},{"lineNumber":117,"author":{"gitId":"ichigh0st"},"content":"                if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"ichigh0st"},"content":"                    reply +\u003d \"\\n  your list is now empty. time to add some more!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"ichigh0st"},"content":"                } else if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"ichigh0st"},"content":"                    reply +\u003d \"\\n  you now have 1 task remaining in the list. type list to see it!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"ichigh0st"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"ichigh0st"},"content":"                    reply +\u003d \"\\n  now you have \" + tasks.size() + \" tasks in the list. type list to view them.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":123,"author":{"gitId":"ichigh0st"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"ichigh0st"},"content":"                return reply;","lastModifiedDate":"2022-09-04"},{"lineNumber":125,"author":{"gitId":"ichigh0st"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"ichigh0st"},"content":"                throw new DukeException(Ui.SAD_FACE + \"please enter an integer from 1 - \" + tasks.size());","lastModifiedDate":"2022-09-04"},{"lineNumber":127,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"ichigh0st"},"content":"     * Searches for tasks occurring on the specified date and returns","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"ichigh0st"},"content":"     * a list of the results to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"ichigh0st"},"content":"     * @param date Date to search for.","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"ichigh0st"},"content":"     * @return A list of tasks that start on the specified date.","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"ichigh0st"},"content":"    public String search(LocalDate date) {","lastModifiedDate":"2022-09-04"},{"lineNumber":139,"author":{"gitId":"ichigh0st"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"ichigh0st"},"content":"        int x \u003d 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"ichigh0st"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"ichigh0st"},"content":"            if (task.isOn(date)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"ichigh0st"},"content":"                list +\u003d \"\\n  \" + x + \". \" + task;","lastModifiedDate":"2022-09-07"},{"lineNumber":144,"author":{"gitId":"ichigh0st"},"content":"                x++;","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"ichigh0st"},"content":"        if (x \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"ichigh0st"},"content":"            return Ui.START + \"There are no tasks occurring on \" + date + \".\";","lastModifiedDate":"2022-09-04"},{"lineNumber":149,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"ichigh0st"},"content":"            return Ui.START + \"These are the tasks occurring on \" + date + \":\" + list;","lastModifiedDate":"2022-09-04"},{"lineNumber":151,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"ichigh0st"},"content":"     * Finds tasks containing the given keyword(s) and returns","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"ichigh0st"},"content":"     * a list of the results to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"ichigh0st"},"content":"     * @param keyword Keyword(s) to search for.","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"ichigh0st"},"content":"     * @return A list of tasks with descriptions matching the keywords.","lastModifiedDate":"2022-09-08"},{"lineNumber":160,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"ichigh0st"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-09-04"},{"lineNumber":162,"author":{"gitId":"ichigh0st"},"content":"        assert keyword.length() \u003e 0: \"No keywords passed.\";","lastModifiedDate":"2022-09-07"},{"lineNumber":163,"author":{"gitId":"ichigh0st"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"ichigh0st"},"content":"        int x \u003d 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"ichigh0st"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"ichigh0st"},"content":"            if (task.containsSearchTerm(keyword)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"ichigh0st"},"content":"                list +\u003d \"\\n  \" + x + \". \" + task;","lastModifiedDate":"2022-09-07"},{"lineNumber":168,"author":{"gitId":"ichigh0st"},"content":"                x++;","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"ichigh0st"},"content":"        if (x \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"ichigh0st"},"content":"            return Ui.START + \"there are no tasks matching the search term \u0027\"","lastModifiedDate":"2022-09-04"},{"lineNumber":173,"author":{"gitId":"ichigh0st"},"content":"                    + keyword + \"\u0027.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":174,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"ichigh0st"},"content":"            return Ui.START + \"These are the matching tasks in your list:\" + list;","lastModifiedDate":"2022-09-04"},{"lineNumber":176,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":179,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"ichigh0st"},"content":"     * Marks the task at the specified position in the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"ichigh0st"},"content":"     * as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":183,"author":{"gitId":"ichigh0st"},"content":"     * @param t Index of the task to mark.","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that the specified task was successfully marked","lastModifiedDate":"2022-09-08"},{"lineNumber":185,"author":{"gitId":"ichigh0st"},"content":"     *     as done, or that there are no tasks to be marked if the task list is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":186,"author":{"gitId":"ichigh0st"},"content":"     * @throws DukeException if the user entered an invalid index.","lastModifiedDate":"2022-09-08"},{"lineNumber":187,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":188,"author":{"gitId":"ichigh0st"},"content":"    public String mark(int t) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":189,"author":{"gitId":"ichigh0st"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"ichigh0st"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":191,"author":{"gitId":"ichigh0st"},"content":"                return Ui.START + \"hmm, you do not have any tasks in your list to be marked. add some now!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":192,"author":{"gitId":"ichigh0st"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":193,"author":{"gitId":"ichigh0st"},"content":"                Task doneTask \u003d tasks.get(t);","lastModifiedDate":"2022-08-24"},{"lineNumber":194,"author":{"gitId":"ichigh0st"},"content":"                doneTask.setDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":195,"author":{"gitId":"ichigh0st"},"content":"                return Ui.START + \"good job! this task has been marked as done:\"","lastModifiedDate":"2022-09-04"},{"lineNumber":196,"author":{"gitId":"ichigh0st"},"content":"                        + \"\\n     \" + doneTask;","lastModifiedDate":"2022-09-04"},{"lineNumber":197,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":198,"author":{"gitId":"ichigh0st"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":199,"author":{"gitId":"ichigh0st"},"content":"            throw new DukeException(Ui.SAD_FACE + \"please enter an integer from 1 - \" + tasks.size());","lastModifiedDate":"2022-09-04"},{"lineNumber":200,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":201,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":202,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":203,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":204,"author":{"gitId":"ichigh0st"},"content":"     * Marks the task at the specified position of the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":205,"author":{"gitId":"ichigh0st"},"content":"     * as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":206,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":207,"author":{"gitId":"ichigh0st"},"content":"     * @param t Index of the task to unmark.","lastModifiedDate":"2022-08-24"},{"lineNumber":208,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that the specified task was unmarked, or that","lastModifiedDate":"2022-09-08"},{"lineNumber":209,"author":{"gitId":"ichigh0st"},"content":"     *     there are no tasks to be unmarked if the task list is empty.","lastModifiedDate":"2022-09-08"},{"lineNumber":210,"author":{"gitId":"ichigh0st"},"content":"     * @throws DukeException if the user entered an invalid index.","lastModifiedDate":"2022-09-08"},{"lineNumber":211,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":212,"author":{"gitId":"ichigh0st"},"content":"    public String unmark(int t) throws DukeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":213,"author":{"gitId":"ichigh0st"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":214,"author":{"gitId":"ichigh0st"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":215,"author":{"gitId":"ichigh0st"},"content":"                return Ui.START + \"hmm, you do not have any tasks in your list. add some now!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":216,"author":{"gitId":"ichigh0st"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":217,"author":{"gitId":"ichigh0st"},"content":"                Task undoneTask \u003d tasks.get(t);","lastModifiedDate":"2022-08-24"},{"lineNumber":218,"author":{"gitId":"ichigh0st"},"content":"                undoneTask.setUndone();","lastModifiedDate":"2022-08-24"},{"lineNumber":219,"author":{"gitId":"ichigh0st"},"content":"                return Ui.START + \"ok, i\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2022-09-04"},{"lineNumber":220,"author":{"gitId":"ichigh0st"},"content":"                        + \"\\n     \" + undoneTask;","lastModifiedDate":"2022-09-04"},{"lineNumber":221,"author":{"gitId":"ichigh0st"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":222,"author":{"gitId":"ichigh0st"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":223,"author":{"gitId":"ichigh0st"},"content":"            throw new DukeException(Ui.SAD_FACE + \"please enter an integer from 1 - \" + tasks.size());","lastModifiedDate":"2022-09-04"},{"lineNumber":224,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":225,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":226,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":227,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":228,"author":{"gitId":"ichigh0st"},"content":"     * Saves the contents of the task list to a data file.","lastModifiedDate":"2022-08-24"},{"lineNumber":229,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":230,"author":{"gitId":"ichigh0st"},"content":"     * @param storage Storage to save the tasks to the hard drive.","lastModifiedDate":"2022-08-24"},{"lineNumber":231,"author":{"gitId":"ichigh0st"},"content":"     * @throws IOException If the data file cannot be found on the hard drive.","lastModifiedDate":"2022-08-24"},{"lineNumber":232,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":233,"author":{"gitId":"ichigh0st"},"content":"    public void writeToFile(Storage storage) throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":234,"author":{"gitId":"ichigh0st"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":235,"author":{"gitId":"ichigh0st"},"content":"        String[] taskDescriptions \u003d new String[len];","lastModifiedDate":"2022-08-24"},{"lineNumber":236,"author":{"gitId":"ichigh0st"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":237,"author":{"gitId":"ichigh0st"},"content":"            taskDescriptions[i] \u003d tasks.get(i).fileDescription() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":238,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":239,"author":{"gitId":"ichigh0st"},"content":"        storage.save(taskDescriptions);","lastModifiedDate":"2022-08-24"},{"lineNumber":240,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":241,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":241}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":" * Represents a task without any date and time attached to it.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"     * Constructs a task that needs to be done.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"    public boolean isOn(LocalDate searchDate) {","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"        return false;","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    public String fileDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"        return \"T | \" + super.fileDescription();","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ichigh0st":33}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import duke.task.Task.TaskType;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":" * Encapsulates a user interface that interacts with the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"    public static final String START \u003d \u0027\\u2619\u0027 + \" \";","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"    public static final String SAD_FACE \u003d \u0027\\u2639\u0027 + \" \";","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"     * Sends a message when information saved in Duke is not able","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"     * to be stored on the hard drive.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    public static void fileLoadError() {","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"        System.out.println(","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"                SAD_FACE + \"hmm, i was not able to create a file to store your list.\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"                + \"  note that your list will not be saved if you quit and restart duke.Duke!\"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"        );","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"     * Sends a welcome message.","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"     * @return The welcome message.","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"    public static String welcome() {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"        return START + \"hi, i\u0027m Duke!\\n   what would you like to do today?\";","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user that they have entered an invalid argument for the","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"     * \"mark\" command.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have entered an invalid argument.","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidMarkInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please enter an integer so i know which task to mark!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user that they have entered an invalid argument for the","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"     * \"unmark\" command.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have entered an invalid argument.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidUnmarkInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please enter an integer so i know which task to unmark!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user that they have entered invalid information for","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ichigh0st"},"content":"     * the task to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ichigh0st"},"content":"     * @param t The type of the task for which information has been entered wrongly.","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have entered invalid information.","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidTaskInput(TaskType t) {","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"ichigh0st"},"content":"        String reply;","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"ichigh0st"},"content":"        if (t \u003d\u003d TaskType.ToDo) {","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"ichigh0st"},"content":"            reply \u003d SAD_FACE + \"please tell me the name of the todo task.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"ichigh0st"},"content":"        } else if (t \u003d\u003d TaskType.Deadline) {","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"ichigh0st"},"content":"            reply \u003d SAD_FACE + \"for tasks with deadlines, please tell me the name of the task, followed \"","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"ichigh0st"},"content":"                    + \"by \u0027/by\u0027,\\n  and then the date/time it needs to be completed by\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ichigh0st"},"content":"                    + \"  in DD/MM/YYYY HHMM (time optional) format e.g. 27/02/2023 2359.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"ichigh0st"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"ichigh0st"},"content":"            reply \u003d SAD_FACE + \"for events, please tell me the name of the event, when it starts and when it ends.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"ichigh0st"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ichigh0st"},"content":"        return reply;","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user when they have not specified a date for the","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ichigh0st"},"content":"     * \"search\" command.","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have not entered a date to search for.","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"ichigh0st"},"content":"    public static String emptyDateInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please enter the date you would like to search for in the format DD/MM/YYYY.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user when they have not entered the date in a valid format.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have entered the date in an invalid format.","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidDateInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":89,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please enter a valid date in the format DD/MM/YYYY.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user when they have not entered the date and time","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"ichigh0st"},"content":"     * in a valid format.","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have entered the date and time","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"ichigh0st"},"content":"     *     in an invalid format.","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidDateTimeInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please input a valid date and time in the format DD/MM/YYYY HHMM (time optional)\";","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user when they have not entered the dates and time of an event in a valid format.","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have entered the date and time","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"ichigh0st"},"content":"     *     in an invalid format.","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidStartEndDateInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please input valid starting and ending dates and times in the format\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"ichigh0st"},"content":"                + \"  DD/MM/YYYY HHMM - DD/MM/YYYY HHMM (ending date optional)\";","lastModifiedDate":"2022-09-04"},{"lineNumber":112,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user that they have entered an invalid argument for the","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"ichigh0st"},"content":"     * \"delete\" command.","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they did not specify the task to delete..","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidDeleteInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please enter an integer so i know which task to delete!\";","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"ichigh0st"},"content":"     * Sends when the user enters any commands not recognised by Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user whenever Duke does not understand the input.","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"ichigh0st"},"content":"    public static String invalidInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":130,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"sorry, i don\u0027t know what that means :(\";","lastModifiedDate":"2022-09-04"},{"lineNumber":131,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"ichigh0st"},"content":"     * Informs the user when they have not specified any search terms for the","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"ichigh0st"},"content":"     * \"find\" command.","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"ichigh0st"},"content":"     * @return A string informing the user that they have not entered any keywords to search for.","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"ichigh0st"},"content":"    public static String emptyFindInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":140,"author":{"gitId":"ichigh0st"},"content":"        return SAD_FACE + \"please enter the keywords you would like to search for.\";","lastModifiedDate":"2022-09-04"},{"lineNumber":141,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"ichigh0st"},"content":"     * Sends a goodbye message in the event that the task list created by Duke could not be","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"ichigh0st"},"content":"     * saved to the hard drive.","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"ichigh0st"},"content":"     * @return A string containing the goodbye message and informing the user that the task list","lastModifiedDate":"2022-09-08"},{"lineNumber":148,"author":{"gitId":"ichigh0st"},"content":"     *     could not be saved to the hard drive.","lastModifiedDate":"2022-09-08"},{"lineNumber":149,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"ichigh0st"},"content":"    public static String saveFail() {","lastModifiedDate":"2022-09-04"},{"lineNumber":151,"author":{"gitId":"ichigh0st"},"content":"        return START + \"bye! i was unable to save your list to the hard drive, but i hope to see you again soon! :)\";","lastModifiedDate":"2022-09-04"},{"lineNumber":152,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"ichigh0st"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"ichigh0st"},"content":"     * Sends a goodbye message upon exiting Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"ichigh0st"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"ichigh0st"},"content":"     * @return The goodbye message.","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"ichigh0st"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"ichigh0st"},"content":"    public static String goodbye() {","lastModifiedDate":"2022-09-04"},{"lineNumber":160,"author":{"gitId":"ichigh0st"},"content":"        return START + \"bye! i hope to see you again soon! :)\";","lastModifiedDate":"2022-09-04"},{"lineNumber":161,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":164}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-radius: 19; -fx-padding: 4;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #afc9fa; -fx-text-fill: white; -fx-label-padding: 8; -fx-border-radius: 16; -fx-background-radius: 16;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"ichigh0st":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #e6eef0;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"38.0\" prefWidth\u003d\"70.0\" style\u003d\"-fx-background-radius: 20; -fx-background-color: #424242; -fx-text-fill: white\" text\u003d\"send\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"                \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"                \u003cInsets /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"            \u003c/opaqueInsets\u003e\u003c/Button\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #faf2f8;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #c8eef7;\" /\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"ichigh0st":27}},{"path":"src/test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"clean room","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"todo clean room","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"deadline lab 1 /by tomorrow midnight","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"event training /at Friday 7-9pm","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"mark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"unmark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"delete 1","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"ichigh0st":14}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"public class EventTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    public void testNewEvent() {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"        Event ev \u003d new Event(\"convention\", \"on\",","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"                LocalDateTime.parse(\"27/08/2022 1200\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")),","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"                LocalTime.parse(\"1700\", DateTimeFormatter.ofPattern(\"HHmm\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"        assertEquals(\"[E][ ] convention (on: Sat, 27 Aug 2022, 12:00PM to 05:00PM)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"                ev.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":20}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ichigh0st"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ichigh0st"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ichigh0st"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ichigh0st"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ichigh0st"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ichigh0st"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ichigh0st"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ichigh0st"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ichigh0st"},"content":"    private static ByteArrayOutputStream output;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ichigh0st"},"content":"    private static PrintStream oldStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ichigh0st"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ichigh0st"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ichigh0st"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ichigh0st"},"content":"        output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ichigh0st"},"content":"        PrintStream stream \u003d new PrintStream(output);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ichigh0st"},"content":"        oldStream \u003d System.out;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ichigh0st"},"content":"        System.setOut(stream);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ichigh0st"},"content":"    @AfterEach","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ichigh0st"},"content":"    public void reset() {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ichigh0st"},"content":"        System.out.flush();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ichigh0st"},"content":"        System.setOut(oldStream);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ichigh0st"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ichigh0st"},"content":"    public void testPrintEmptyList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ichigh0st"},"content":"        tasks.printList();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ichigh0st"},"content":"        assertEquals(","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ichigh0st"},"content":"                \u0027\\u2619\u0027 + \" your list is empty. START adding some tasks to do now!\\n\",","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ichigh0st"},"content":"                output.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ichigh0st"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ichigh0st"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ichigh0st"},"content":"    public void add_todoTask_success() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ichigh0st"},"content":"        tasks.add(new ToDo(\"go jogging\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ichigh0st"},"content":"        assertEquals(","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ichigh0st"},"content":"                \u0027\\u2619\u0027 + \" added:\\n     [T][ ] go jogging\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ichigh0st"},"content":"                        + \"  you now have 1 task in the list. type list to see it!\\n\",","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ichigh0st"},"content":"                output.toString()","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ichigh0st"},"content":"        );","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ichigh0st"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ichigh0st"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ichigh0st":50}},{"path":"src/test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ichigh0st"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ichigh0st":1,"-":20}}]

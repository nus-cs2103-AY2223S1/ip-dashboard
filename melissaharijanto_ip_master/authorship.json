[{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":" * A class to represent the commands that the users can use.","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"public class Commands {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"    /** Ui that prints statements for the bot. */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"     * @param command The command that is inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskList The list of tasks that the user has inputted.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"     * @throws DukeException Exceptions exclusive to the Duke bot, thrown when","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"     * the user does not input a number, or inputs invalid characters after the","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"     * \u0027mark\u0027 command.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"    public static void mark(String command, ArrayList\u003cTask\u003e taskList) throws DukeException{","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"            String number \u003d command.split(\" \")[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"            int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"            Task task \u003d taskList.get(num - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"            ui.mark(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"☹ OOPS!!! The number you are talking about does not exist. \" +","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"                    \"\\nPerhaps it is not a number at all? Please check again!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"     * Unmarks a task as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"     * @param command The command that is inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskList The list of tasks that the user has inputted.","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"     * @throws DukeException Exceptions exclusive to the Duke bot, thrown when","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"     * the user does not input a number, or inputs invalid characters after the","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"     * \u0027unmark\u0027 command.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"    public static void unmark(String command, ArrayList\u003cTask\u003e taskList) throws DukeException{","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"melissaharijanto"},"content":"            String number \u003d command.split(\" \")[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"melissaharijanto"},"content":"            int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"            Task task \u003d taskList.get(num - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"melissaharijanto"},"content":"            ui.unmark(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"melissaharijanto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"☹ OOPS!!! The number you are talking about does not exist.\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"melissaharijanto"},"content":"                    \"\\nPerhaps it is not a number at all? Please check again!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"melissaharijanto"},"content":"     * Adds a task with a deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"melissaharijanto"},"content":"     * @param command The command that is inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskList The list of tasks that the user has inputted.","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"melissaharijanto"},"content":"     * @throws DukeException Exceptions exclusive to the Duke bot, thrown when","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"melissaharijanto"},"content":"     * the user does not include a proper description of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"melissaharijanto"},"content":"    public static void deadline(String command, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"melissaharijanto"},"content":"            String taskName \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\"/\") - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"melissaharijanto"},"content":"            String by \u003d command.split(\"/by\")[1].trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"melissaharijanto"},"content":"            LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"melissaharijanto"},"content":"            Task newTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"melissaharijanto"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"melissaharijanto"},"content":"            int amountOfTasks \u003d taskList.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"melissaharijanto"},"content":"            ui.addTask(newTask, amountOfTasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"melissaharijanto"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"☹ OOPS!! Date is invalid! Hint: Make it YYYY-MM-DD.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"melissaharijanto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"melissaharijanto"},"content":"     * Adds a task that is classified as an event.","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"melissaharijanto"},"content":"     * @param command The command that is inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskList The list of tasks that the user has inputted.","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"melissaharijanto"},"content":"     * @throws DukeException Exceptions exclusive to the Duke bot, thrown when","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"melissaharijanto"},"content":"     * the user does not include a proper description of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"melissaharijanto"},"content":"    public static void event(String command, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"melissaharijanto"},"content":"            String taskName \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\"/\") - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"melissaharijanto"},"content":"            String at \u003d command.split(\"/at\")[1].trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"melissaharijanto"},"content":"            Task newTask \u003d new Event(taskName, at);","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"melissaharijanto"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"melissaharijanto"},"content":"            int amountOfTasks \u003d taskList.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"melissaharijanto"},"content":"            ui.addTask(newTask, amountOfTasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"melissaharijanto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"melissaharijanto"},"content":"     * Function to add a task with that has to be done soon, without a description","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"melissaharijanto"},"content":"     * of the specific place or time.","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"melissaharijanto"},"content":"     * @param command The command that is inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskList The list of tasks that the user has inputted.","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"melissaharijanto"},"content":"     * @throws DukeException Exceptions exclusive to the Duke bot, thrown when","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"melissaharijanto"},"content":"     * the user does not include a proper description of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"melissaharijanto"},"content":"    public static void toDo(String command, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"melissaharijanto"},"content":"            if (command.split(\" \")[1] !\u003d null) {","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"melissaharijanto"},"content":"                String taskName \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"melissaharijanto"},"content":"                Task newTask \u003d new ToDo(taskName);","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"melissaharijanto"},"content":"                taskList.add(newTask);","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"melissaharijanto"},"content":"                int amountOfTasks \u003d taskList.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"melissaharijanto"},"content":"                ui.addTask(newTask, amountOfTasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"melissaharijanto"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"melissaharijanto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify what you want to do!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"melissaharijanto"},"content":"     * Function to delete any task that has been inputted.","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"melissaharijanto"},"content":"     * @param command The command that is inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskList The list of tasks that the user has inputted.","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"melissaharijanto"},"content":"     * @throws DukeException Exceptions exclusive to the Duke bot, thrown when","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"melissaharijanto"},"content":"     * the user does not include a proper description of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"melissaharijanto"},"content":"    public static void delete(String command, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"melissaharijanto"},"content":"            String number \u003d command.split(\" \")[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"melissaharijanto"},"content":"            int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"melissaharijanto"},"content":"            Task task \u003d taskList.get(num - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"melissaharijanto"},"content":"            taskList.remove(num - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"melissaharijanto"},"content":"            int amountOfTasksLeft \u003d taskList.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"melissaharijanto"},"content":"            ui.delete(task, amountOfTasksLeft);","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"melissaharijanto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"☹ OOPS!!! Looks like the task you\u0027re looking for does not exist :-(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":144,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":147}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":" * Class to represent tasks of the type Deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"    /** String that represents when a task must be done by. */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"     * @param by The time it has to be done by.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"    public Deadline(String taskName, LocalDate by) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"        super(taskName);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"     * Returns the String representation of the Deadline task.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"     * @return the String representation of the Deadline task.","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"    ","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":" * The main class that executes the Duke chatbot.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"    /** List of tasks. */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"    protected ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"    protected final String DIRECTORY \u003d System.getProperty(\"user.home\") + \"/DukeData\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"    protected final String FILE_PATH \u003d DIRECTORY + \"/Duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"    /** Ui that prints statements for the bot. */","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"    protected static Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"    public File initialize() throws DukeException{","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"            File parentDirectory \u003d new File(DIRECTORY);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"            if (!parentDirectory.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"                parentDirectory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"            File dukeFile \u003d new File(FILE_PATH);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"            if(!dukeFile.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"                dukeFile.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"            return dukeFile;","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"OOPS!! A new file cannot be created.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"    public void readFile(File dukeFile) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"melissaharijanto"},"content":"            Scanner sc \u003d new Scanner(dukeFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"melissaharijanto"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"                String commands \u003d sc.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"                String typeOfTask \u003d commands.substring(1, 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"melissaharijanto"},"content":"                String marked \u003d commands.substring(4, 5);","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"melissaharijanto"},"content":"                String description \u003d commands.substring(7);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"melissaharijanto"},"content":"                switch (typeOfTask) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"melissaharijanto"},"content":"                case \"T\":","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"melissaharijanto"},"content":"                    Task toDo \u003d new ToDo(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"melissaharijanto"},"content":"                    if (marked \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"melissaharijanto"},"content":"                        toDo.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"melissaharijanto"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"melissaharijanto"},"content":"                    taskList.add(toDo);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"melissaharijanto"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"melissaharijanto"},"content":"                case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"melissaharijanto"},"content":"                    String[] deadlineDescription \u003d description.split(\"by:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"melissaharijanto"},"content":"                    String deadlineName \u003d deadlineDescription[0]","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"melissaharijanto"},"content":"                            .substring(0, deadlineDescription[0].length() - 1)","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"melissaharijanto"},"content":"                            .trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"melissaharijanto"},"content":"                    String by \u003d deadlineDescription[1].substring(1, deadlineDescription[1].length() - 1).trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"melissaharijanto"},"content":"                    LocalDate deadlineDate \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"melissaharijanto"},"content":"                    Task deadline \u003d new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"melissaharijanto"},"content":"                    if (marked \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"melissaharijanto"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"melissaharijanto"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"melissaharijanto"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"melissaharijanto"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"melissaharijanto"},"content":"                case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"melissaharijanto"},"content":"                    String[] eventDescription \u003d description.split(\"at:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"melissaharijanto"},"content":"                    String eventName \u003d eventDescription[0]","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"melissaharijanto"},"content":"                            .substring(0, eventDescription[0].length() - 1)","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"melissaharijanto"},"content":"                            .trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"melissaharijanto"},"content":"                    String at \u003d eventDescription[1].substring(0, eventDescription[1].length() - 1).trim();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"melissaharijanto"},"content":"                    Task event \u003d new Event(eventName, at);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"melissaharijanto"},"content":"                    if (marked \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"melissaharijanto"},"content":"                        event.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"melissaharijanto"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"melissaharijanto"},"content":"                    taskList.add(event);","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"melissaharijanto"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"melissaharijanto"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"melissaharijanto"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"melissaharijanto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"OOPS!! Failed to read file.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"melissaharijanto"},"content":"    public void writeAndSaveToFile(File dukeFile) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"melissaharijanto"},"content":"            FileWriter writer \u003d new FileWriter(dukeFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"melissaharijanto"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"melissaharijanto"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"melissaharijanto"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"melissaharijanto"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"melissaharijanto"},"content":"            writer.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"melissaharijanto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"melissaharijanto"},"content":"            throw new DukeException(\"OOPS!! Failed to write to file.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"melissaharijanto"},"content":"     * Determines whether a command line inputted by","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"melissaharijanto"},"content":"     * the user is a valid command.","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"melissaharijanto"},"content":"     * @param command Command line that is inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"melissaharijanto"},"content":"     * @return A boolean value that states whether the command exists or not.","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"melissaharijanto"},"content":"    public boolean doesCommandExist(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"melissaharijanto"},"content":"        return command.equals(\"list\") || command.equals(\"mark\")","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"melissaharijanto"},"content":"                || command.equals(\"unmark\") || command.equals(\"deadline\") || command.equals(\"event\")","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"melissaharijanto"},"content":"                || command.equals(\"todo\") || command.equals(\"delete\") || command.equals(\"bye\");","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"melissaharijanto"},"content":"     * Detects the commands inputted by a user; if the command exists,","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"melissaharijanto"},"content":"     * it will execute the given command. Otherwise, the ui will","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"melissaharijanto"},"content":"     * print a message saying that the command does not exist.","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"melissaharijanto"},"content":"     * @param typeOfCommandLine The type of command line inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"melissaharijanto"},"content":"     * @param userInput The whole string inputted by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"melissaharijanto"},"content":"    public void detectCommand(CommandLine typeOfCommandLine, String userInput, File dukeFile) {","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"melissaharijanto"},"content":"            switch (typeOfCommandLine) {","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"melissaharijanto"},"content":"            case BYE:","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"melissaharijanto"},"content":"                ui.exit();","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"melissaharijanto"},"content":"            case LIST:","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"melissaharijanto"},"content":"                ui.list(taskList);","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"melissaharijanto"},"content":"            case MARK:","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"melissaharijanto"},"content":"                Commands.mark(userInput, taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"melissaharijanto"},"content":"            case UNMARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"melissaharijanto"},"content":"                Commands.unmark(userInput, taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":142,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":143,"author":{"gitId":"melissaharijanto"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-19"},{"lineNumber":144,"author":{"gitId":"melissaharijanto"},"content":"                Commands.deadline(userInput, taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":145,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":146,"author":{"gitId":"melissaharijanto"},"content":"            case EVENT:","lastModifiedDate":"2022-08-19"},{"lineNumber":147,"author":{"gitId":"melissaharijanto"},"content":"                Commands.event(userInput, taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":149,"author":{"gitId":"melissaharijanto"},"content":"            case TODO:","lastModifiedDate":"2022-08-19"},{"lineNumber":150,"author":{"gitId":"melissaharijanto"},"content":"                Commands.toDo(userInput, taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":151,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":152,"author":{"gitId":"melissaharijanto"},"content":"            case DELETE:","lastModifiedDate":"2022-08-19"},{"lineNumber":153,"author":{"gitId":"melissaharijanto"},"content":"                Commands.delete(userInput, taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":154,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":155,"author":{"gitId":"melissaharijanto"},"content":"            default:","lastModifiedDate":"2022-08-19"},{"lineNumber":156,"author":{"gitId":"melissaharijanto"},"content":"                ui.commandDoesNotExist();","lastModifiedDate":"2022-08-17"},{"lineNumber":157,"author":{"gitId":"melissaharijanto"},"content":"                break;","lastModifiedDate":"2022-08-19"},{"lineNumber":158,"author":{"gitId":"melissaharijanto"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":159,"author":{"gitId":"melissaharijanto"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":160,"author":{"gitId":"melissaharijanto"},"content":"            ui.errorMessage(e);","lastModifiedDate":"2022-08-20"},{"lineNumber":161,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":162,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":165,"author":{"gitId":"melissaharijanto"},"content":"     * Executes the bot.","lastModifiedDate":"2022-08-20"},{"lineNumber":166,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":167,"author":{"gitId":"melissaharijanto"},"content":"     * @param args Main arguments.","lastModifiedDate":"2022-08-20"},{"lineNumber":168,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-19"},{"lineNumber":170,"author":{"gitId":"melissaharijanto"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"melissaharijanto"},"content":"        ui.greet();","lastModifiedDate":"2022-08-20"},{"lineNumber":172,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":173,"author":{"gitId":"melissaharijanto"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"melissaharijanto"},"content":"            File dukeFile \u003d duke.initialize();","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"melissaharijanto"},"content":"            duke.readFile(dukeFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"melissaharijanto"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-19"},{"lineNumber":177,"author":{"gitId":"melissaharijanto"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":178,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":179,"author":{"gitId":"melissaharijanto"},"content":"            while (true) {","lastModifiedDate":"2022-08-20"},{"lineNumber":180,"author":{"gitId":"melissaharijanto"},"content":"                String commandLine \u003d userInput.split(\" \")[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":181,"author":{"gitId":"melissaharijanto"},"content":"                if (duke.doesCommandExist(commandLine)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"melissaharijanto"},"content":"                    CommandLine typeOfCommandLine \u003d CommandLine.valueOf(commandLine.toUpperCase());","lastModifiedDate":"2022-08-20"},{"lineNumber":183,"author":{"gitId":"melissaharijanto"},"content":"                    duke.detectCommand(typeOfCommandLine, userInput, dukeFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"melissaharijanto"},"content":"                    if (typeOfCommandLine \u003d\u003d CommandLine.BYE) {","lastModifiedDate":"2022-08-20"},{"lineNumber":185,"author":{"gitId":"melissaharijanto"},"content":"                        duke.writeAndSaveToFile(dukeFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":186,"author":{"gitId":"melissaharijanto"},"content":"                        sc.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":187,"author":{"gitId":"melissaharijanto"},"content":"                        return;","lastModifiedDate":"2022-08-20"},{"lineNumber":188,"author":{"gitId":"melissaharijanto"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":189,"author":{"gitId":"melissaharijanto"},"content":"                } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":190,"author":{"gitId":"melissaharijanto"},"content":"                    ui.commandDoesNotExist();","lastModifiedDate":"2022-08-19"},{"lineNumber":191,"author":{"gitId":"melissaharijanto"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":192,"author":{"gitId":"melissaharijanto"},"content":"                userInput \u003d sc.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":193,"author":{"gitId":"melissaharijanto"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":194,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":195,"author":{"gitId":"melissaharijanto"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":196,"author":{"gitId":"melissaharijanto"},"content":"            ui.errorMessage(e);","lastModifiedDate":"2022-08-24"},{"lineNumber":197,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":198,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":199,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":200,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":201,"author":{"gitId":"melissaharijanto"},"content":"     * Enum class to represent the command lines that exist.","lastModifiedDate":"2022-08-20"},{"lineNumber":202,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":203,"author":{"gitId":"melissaharijanto"},"content":"    enum CommandLine {","lastModifiedDate":"2022-08-20"},{"lineNumber":204,"author":{"gitId":"melissaharijanto"},"content":"        BYE,","lastModifiedDate":"2022-08-20"},{"lineNumber":205,"author":{"gitId":"melissaharijanto"},"content":"        LIST,","lastModifiedDate":"2022-08-20"},{"lineNumber":206,"author":{"gitId":"melissaharijanto"},"content":"        MARK,","lastModifiedDate":"2022-08-20"},{"lineNumber":207,"author":{"gitId":"melissaharijanto"},"content":"        UNMARK,","lastModifiedDate":"2022-08-20"},{"lineNumber":208,"author":{"gitId":"melissaharijanto"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-20"},{"lineNumber":209,"author":{"gitId":"melissaharijanto"},"content":"        EVENT,","lastModifiedDate":"2022-08-20"},{"lineNumber":210,"author":{"gitId":"melissaharijanto"},"content":"        TODO,","lastModifiedDate":"2022-08-20"},{"lineNumber":211,"author":{"gitId":"melissaharijanto"},"content":"        DELETE,","lastModifiedDate":"2022-08-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"melissaharijanto":209,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":" * Class that represents errors exclusive to the Duke chat bot.","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"    /** The error message. */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"    String errorMessage;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"     * @param errorMessage The error message that will be printed out.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"     * Returns the String representation of the error message.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"     * @return Returns the String representation of the error message.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"        return errorMessage;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":29}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":" * Class to represent tasks of the type Event.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"    /** String that represents the venue of the task. */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"    /** Constructor for the Event class. */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"    public Event(String taskName, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"        super(taskName);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"     * Returns the String representation of the Event task.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"     * @return the String representation of the Event task.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":" * Class to represent Task (not to be instantiated, hence abstract).","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"    /** String representation of the task name. */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    /** Boolean value to decide whether a task is done. */","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"    protected Task(String taskName){","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"     * Returns the status icon of a task; if done, \u0027X\u0027 will","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"     * be returned; otherwise a space will be returned.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"     * @return Status icon of a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"     * Unmarks a task as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"    public void unmarkAsDone(){","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"melissaharijanto"},"content":"     * Returns the String representation of a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"     * @return the String representation of a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"melissaharijanto"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"melissaharijanto"},"content":"        return \"[\" + statusIcon + \"] \" + taskName;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":57}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":" * Class to represent tasks of the type ToDo.","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"     * Constructor for the ToDo class.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"        super(taskName);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"     * Returns the String representation of the ToDo task.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"     * @return the String representation of the ToDo task.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":25}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":" * Class that represents the Ui, used to print","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":" * statements for the bot.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":" * @author Melissa Anastasia Harijanto","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"public class Ui {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"    /** String that represents a line. */","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"    protected String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"     * Greets the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"    public void greet() {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"        String greetings \u003d \"\\nHello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line + greetings + line);","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"     * Echoes the user input.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"     * @param text The text to be echoed by the bot.","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"    public void echo(String text) {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line + \"\\n\" + text + \"\\n\" + line);","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"melissaharijanto"},"content":"     * Prints a message when the user adds a task to the bot.","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"melissaharijanto"},"content":"     * @param task The task that is added.","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"melissaharijanto"},"content":"     * @param amountOfTasks The total amount of tasks that has been added by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"melissaharijanto"},"content":"    public void addTask(Task task, int amountOfTasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"Now you have \" + amountOfTasks + \" tasks in the list.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"melissaharijanto"},"content":"     * Prints the list of tasks added by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"melissaharijanto"},"content":"     * @param taskList The list of tasks to be printed.","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"melissaharijanto"},"content":"    public void list(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"melissaharijanto"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"melissaharijanto"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"melissaharijanto"},"content":"            String taskName \u003d task.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"melissaharijanto"},"content":"            System.out.println(count + \".\" + taskName);","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"melissaharijanto"},"content":"            count++;","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"melissaharijanto"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"melissaharijanto"},"content":"     * Prints a message when a task is marked as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"melissaharijanto"},"content":"     * @param task The task that is marked as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"melissaharijanto"},"content":"    public void mark(Task task){","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"melissaharijanto"},"content":"        String taskName \u003d task.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(taskName);","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"melissaharijanto"},"content":"     * Prints a message when a task is marked as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"melissaharijanto"},"content":"     * @param task The task that is marked as undone.","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"melissaharijanto"},"content":"    public void unmark(Task task){","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"melissaharijanto"},"content":"        String taskName \u003d task.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(taskName);","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"melissaharijanto"},"content":"     * Prints a message when the bot exits.","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"melissaharijanto"},"content":"    public void exit(){","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"melissaharijanto"},"content":"        String exitLine \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line + \"\\n\" + exitLine + \"\\n\" + line);","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"melissaharijanto"},"content":"     * Prints a message when a user inputs a command that does not exist.","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"melissaharijanto"},"content":"    public void commandDoesNotExist(){","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-17"},{"lineNumber":106,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"melissaharijanto"},"content":"     * Prints a message when a user deletes their tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"melissaharijanto"},"content":"     * @param task The task that is to be deleted.","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"melissaharijanto"},"content":"     * @param amountOfTasks The total amount of tasks that the user has left.","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"melissaharijanto"},"content":"    public void delete(Task task, int amountOfTasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(\"Now you have \" + amountOfTasks + \" tasks in the list.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"melissaharijanto"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"melissaharijanto"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"melissaharijanto"},"content":"     * Prints an error message.","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"melissaharijanto"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"melissaharijanto"},"content":"     * @param e The exception that is to be printed.","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"melissaharijanto"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"melissaharijanto"},"content":"    public void errorMessage(DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(e.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"melissaharijanto"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"melissaharijanto"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"melissaharijanto"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":133}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"melissaharijanto"},"content":"todo Run in the Morning","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"melissaharijanto"},"content":"deadline homework","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"melissaharijanto"},"content":"deadline homework /by 2022-08-28","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"melissaharijanto"},"content":"blah","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"melissaharijanto"},"content":"event Concert /at Buona Vista","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"melissaharijanto"},"content":"event sleep","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"melissaharijanto"},"content":"todo sleep","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"melissaharijanto"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"melissaharijanto"},"content":"todo test 5","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"melissaharijanto"},"content":"todo test 6","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"melissaharijanto"},"content":"deadline assignment 3 /by 2022-08-31","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"melissaharijanto"},"content":"deadline cca commitments /by 2022-09-15","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"melissaharijanto"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"melissaharijanto"},"content":"delete 4","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"melissaharijanto"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"melissaharijanto"},"content":"delete 4","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"melissaharijanto"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"melissaharijanto"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"melissaharijanto"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"melissaharijanto"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"melissaharijanto"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"melissaharijanto"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"melissaharijanto"},"content":"unmark 400","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"melissaharijanto"},"content":"deadline cca commitments /by 2000","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"melissaharijanto"},"content":"deadline something /by tomorrow","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"melissaharijanto"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"melissaharijanto":26}}]

{"authorDailyContributionsMap":{"Ferusel":[{"date":"2022-08-17","commitResults":[{"hash":"bd57fa7def4ec4a43c219ff4c4f796ab9519573e","messageTitle":"Complete first increment which repeats user input","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":6}}},{"hash":"6ca13a1eb867468aaed898258884bf61eeb1da32","messageTitle":"Complete second increment which allows saving and printing of user inputs","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":2}}},{"hash":"27651e5cd0677debe6010bd4e32335faa7652146","messageTitle":"Add Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"ac77926b90db1249e951ebd33f84cf439a1cdf81","messageTitle":"Add ability for user to add to a list of tasks where each task can be marked and unmarked","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"d31db7b23e5da2e21f3fd84a2f9c7041d94d6105","messageTitle":"Refactor user input logic to use switch statements","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":19}}},{"hash":"30e815d036dbe734c23957c70927ca5ce60eae2d","messageTitle":"Refactor toString method to include isComplete status","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"4d057cb8fba3d94f07c79353a4a9948a29b463ae","messageTitle":"Rename toDoName field to taskTitle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"d5093b140175c20b519a36a4b036c49b94b8a5b9","messageTitle":"Modify Task to initialize isCompleted field to false by default","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":4}}},{"hash":"a427f8a5bd3ea4da595fc7b383537d49f415a262","messageTitle":"Rename Task taskTitle field to taskName","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"0c182bbc887ed1c973c3d84f2ee846f0c30478e4","messageTitle":"Add Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"26c658c6bd0fa0dbed19c64f0abc379c917904a9","messageTitle":"Add Event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"c47cb4931132950d88f4c2327ec5962a8fc4e143","messageTitle":"Add ToDo class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"37bd625d913260a8703f351afa20bd09a822aec3","messageTitle":"Allow CLI to handle addition of ToDo, Deadline, Event inputs","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":7}}},{"hash":"bc9ebcc5881a6b99148b27bbb1a7f5c35135d3a9","messageTitle":"Rename taskName field to taskDescription","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}}]},{"date":"2022-08-18","commitResults":[{"hash":"c484bed6e0af266827adebf6350e1ac4ab778a48","messageTitle":"Add UnknownCommandException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"fb5eaee6c09ba739c9e6448ef340ea458f8d42de","messageTitle":"Add MissingDescriptionException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"9c1bbfe211104b2728f6702ede7147ae6ec5b231","messageTitle":"Add error handling to Duke","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":54}}},{"hash":"0a4997950adddac1d070f5cce0c3a55a9b52ca9e","messageTitle":"Add delete functionality to Duke","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"c9bdeb4c4e7dba6ba95e505178d8065efd673182","messageTitle":"Add tests for Duke for todo, deadline, event, list, mark, unmark, delete, bye commands","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0}}},{"hash":"6bce672f9ab1644c19505c2a341b19093c2e92fc","messageTitle":"Replace user input command with enum COMMANDS","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":14}}},{"hash":"9ea4f46ea67a64c23eac7e1c343cfb38b5712e0b","messageTitle":"Fix bug where invalid user commands cause a runtime error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"9381188e176dece173692af1e8634dd10084776a","messageTitle":"Update tests to include exception handling","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}}]},{"date":"2022-08-21","commitResults":[{"hash":"07eb358ec3d288fd7f7eeb6deaa208558513163c","messageTitle":"Add saving of user data to external .txt file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":4}}},{"hash":"43aa9171eede661a7d554c17ec79d2af0c8f6e06","messageTitle":"Add WrongDatetimeFormatException","messageBody":"This exception is thrown when a provided string does not follow a specified datetime format during validation.\nA string is passed to this Exception that specifies the correct datetime format to follow, which is printed.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"90cedad42835e69e8065442a0f9f3a24417250c4","messageTitle":"Change timeRange field to startDateTime and endDateTime field","messageBody":"Event class now stores the start and end of the event as LocalDateTime objects.\n\ntoString() method is also modified to\nreflect these changes.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":5}}},{"hash":"c6b983c4831973003f3f009acc550ef6063a8c3e","messageTitle":"Modify by field to store LocalDateTime type","messageBody":"Deadline class now stores the deadline as LocalDateTime object.\n\ntoString() method is also modified to\nreflect these changes.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"90696660fdc994bb6496e7d5e215bad1866aa655","messageTitle":"Modify Duke to convert deadline and event time ranges to LocalDatetime objects","messageBody":"Previously, Duke saves the deadline and event time\nranges as String objects to Deadline and Event objects.\n\nNow, Duke validates and parses user inputs to these\ndatetimes to LocalDateTime objects and saves them to\nDeadline and Event objects.\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":9}}},{"hash":"a4973027d20cbdb5f32faf450fcec68246ccb37c","messageTitle":"Fix formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":96}}},{"hash":"6d44f838260ef312ff2d7bd0600464f42cdd2210","messageTitle":"Add relevant header comments to all classes and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":8}}}]},{"date":"2022-08-22","commitResults":[{"hash":"c0f5629ffb0c6e1a135fb026a714e8c6c585737a","messageTitle":"Add DukeException","messageBody":"Represents custom-defined exceptions that are thrown within Duke\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"2293a2de75028d040f31beb27e10d37abade29c8","messageTitle":"Modify custom exceptions to extend from DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"4baefc0ae98a5c40400f401dafa9e05ad3d0f2f3","messageTitle":"Add Ui class and relevant print statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":0}}},{"hash":"5602cb891d0ab86210f3bad822989ff35eb6ac8a","messageTitle":"Convert Ui class methods to static methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"a4e7de89ad4360ee369a12e66579636798d9687a","messageTitle":"Add Storage class and associated methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":0}}},{"hash":"784f77898b6e3ee2e24126eb2b8b2f932f0ee06d","messageTitle":"Fix wrong use of TaskList.size()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e9eaae3f47007c3128d6a14867754c2ef4aa9089","messageTitle":"Add TaskList class and associated methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"8ffcd516e5902d6c642fde1417c2a7f90040c8f0","messageTitle":"Add Command class and stubs for Command subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}}]},{"date":"2022-08-23","commitResults":[{"hash":"5bf38923bdc0efa0cf0f2e0cfb57ebd9e6349f82","messageTitle":"Add getEncodedValue function","messageBody":"Returns the encoded string representing a Task object to be saved in the storage\n","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":64}}},{"hash":"c05368a088941e73b88246953e0329b8c6f766b0","messageTitle":"Add abstract Command class","messageBody":"Represents an abstract Command that is executed later. Should be inherited and used in subclasses.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":1}}},{"hash":"3b69b812289071404305c0e1458ca0cb01fcb970","messageTitle":"Create methods for DeadlineCommand representing addition of deadline to task list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"b8cef25f1a5f86daa148e85c08c5acbd203c927c","messageTitle":"Create methods for DeleteCommand representing deletion of a task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":1}}},{"hash":"b84444b18de7c1474036d6d1a30f157a8367c24e","messageTitle":"Create methods for EventCommand representing addition of event to tasklist","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":0}}},{"hash":"9363244504bdee5444d5c09abf0df3f2b42b0a6c","messageTitle":"Create methods for ToDoCommand representing addition of Todo to task list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"9b1d12fc8e8fcd45012afdd5eeeea76db02339d2","messageTitle":"Create methods for Goodbye representing exit of Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"1074dd83fa344afaa29ec47233e9e439128e64dd","messageTitle":"Create methods for Goodbye representing an invalid command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"e57b47aef1611065d5b4325b76dd490fab3310b2","messageTitle":"Create methods for Goodbye representing list command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"e2f59fe408c0dd91c5f23b685df4696fd1e141da","messageTitle":"Create methods for MarkCommand representing marking a list item","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":1}}},{"hash":"f2f517aea2472d96f4beb6ca54b01429e7f5cb44","messageTitle":"Create methods for UnmarkCommand representing unmarking a list item","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"590ef1e27bd686a457c3f1830e815a44686fcb17","messageTitle":"Make Ui methods static","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":8}}},{"hash":"c3c4e0c7cb26760fcd599bbbcc268b98567268c4","messageTitle":"Create methods for TaskList representing the list of tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"c4021cf8b991db1af54c438a32c9a8a0c1cce870","messageTitle":"Move Storage to commons Package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":45}}},{"hash":"5803515efd3a6175153acfd13c7437bbeb4ca24d","messageTitle":"Create Parser class to parse user commands from string","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":0}}},{"hash":"008b61ff8cc8b643c9c619616f90bf65c9fefec1","messageTitle":"Create IllegalIndexException class","messageBody":"Represents illegal access of index or illegal index data type\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"b8e36b4ff2621a85bffd7332e8ac955fecf16846","messageTitle":"Create IllegalUseException class","messageBody":"Represents when a method in the parent class should not be used directly and used in its subclasses\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"4acb27cdd3736743934935923539f395209a0efc","messageTitle":"Refactor Duke class to heavily use OOP-based approach","messageBody":"","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":249}}},{"hash":"1e989269d264a28a11ebbed5bd052a40840b8bdc","messageTitle":"Add build.gradle config","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"0aab33a44cdd934ee8685203054fe589d767ed9b","messageTitle":"Rename packages to lowercase and perform refactoring","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":83},"md":{"insertions":2,"deletions":2}}},{"hash":"48b3a8086086b2d7e8b9c4458fef24d2f49cb02f","messageTitle":"Add checkstyle plugin to gradle build","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0}}},{"hash":"b9f723d1c44f742d7671893da56a2dc5ce06c085","messageTitle":"Add dummy jUnit test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"1e1303f4725988f3877f910592848597b9f8241f","messageTitle":"Write tests for Parser class","messageBody":"Tests for isValidDatetime and splitArrayIntoSubstrings function\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"2e6bc0efbb908c546ec1a961810c24dc6cb1aad2","messageTitle":"Modify printSaving to use print()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c35cc94597097ca3600620d94bde621bb0b2f0e0","messageTitle":"Write tests for Ui class","messageBody":"Test for printSaving function\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":1}}},{"hash":"4bc912248f09445c772e6e96fcdad3461043b0f0","messageTitle":"Add JavaDocs to all classes except Command classes and unit test classes","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":282,"deletions":29}}},{"hash":"a15bb89218609c7fc7b48985f5767b9f191b08de","messageTitle":"Fix formatting","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":22}}},{"hash":"9dafd6433b32b98000e66db9a029dbe54c4b4ed5","messageTitle":"Add InsufficientArgumentsException Exception","messageBody":"Thrown when there is insufficient arguments to a function.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"6262490e12c91e9e8c5559e784f1a59c87084926","messageTitle":"Add printFindResults function","messageBody":"Prints the results of calling the Find command\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"ff78249a1c6d59496d5ee6d3d9144c95e37893dd","messageTitle":"Add FIND enum and case for FIND","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"18e5b9d178f82a5cc71ae72117088a492eb107e7","messageTitle":"Add FindCommand representing case where user wants to find a Task in the current task list","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"Ferusel":{"java":1291,"md":2,"fxml":0,"sh":0,"bat":0,"gradle":7,"txt":16}},"authorContributionVariance":{"Ferusel":217423.58},"authorDisplayNameMap":{"Ferusel":"CS2103T-W16-2 MAI .. KAI"}}

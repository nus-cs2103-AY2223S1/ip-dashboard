[{"path":".data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"deadline name 5 sleep done 1 1 deadline 22 2 Sep 2022 at 00:00:00","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"event name 15 CS2102 tutorial done 1 0 startTime 22 2 Sep 2022 at 09:00:00 endTime 22 2 Sep 2022 at 10:00:00","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"NicholasPatrick":2}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"# ui.Duke project template","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"3. After that, locate the `src/main/java/ui.Duke.java` file, right-click it, and choose `Run ui.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasPatrick":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"checkstyle {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"    testCompile \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasPatrick":23,"-":40}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"import ui.Main;","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":" * The main class to be run.","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"public class Launcher {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":12}},{"path":"src/main/java/functional/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package functional;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import technical.SaveLine;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":" * Class for tasks with a deadline","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String DEADLINE_INFOTYPE \u003d \"deadline\";","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String DEADLINE_DEADLINE_LABEL \u003d \"deadline\";","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct functional.Task with a fixed name.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct a task with a deadline from a SaveLine. If the argument is","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"     * invalid, an error may or may not be thrown.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"     * @param line The SaveLine containing necessary information.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"    public Deadline(SaveLine line) {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"        super(line);","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"        deadline \u003d LocalDateTime","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"            .parse(line.getValue(DEADLINE_DEADLINE_LABEL), DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"     * Shows the deadline name and status as a String.","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A String with the task name and status.","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"        return String.format(\"[D]%s (by %s)\", super.toString(),","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"            deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\")));","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"     * Turns the task into a SaveLine, so it\u0027s ready to be saved. Can also be","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"     * used to compare two tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A SaveLine with the data associated with the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"    public SaveLine toData() {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"        SaveLine ret \u003d super.toData();","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"        ret.setInfoType(DEADLINE_INFOTYPE);","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"        ret.addKeyValue(DEADLINE_DEADLINE_LABEL,","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"            deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\")));","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"        return ret;","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"    public boolean equals(Object rhs) {","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"        if (rhs instanceof Deadline) {","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"NicholasPatrick"},"content":"            Deadline rhsDeadline \u003d (Deadline) rhs;","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"NicholasPatrick"},"content":"            return toData().equals(rhsDeadline.toData());","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"NicholasPatrick"},"content":"        return false;","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"NicholasPatrick":72}},{"path":"src/main/java/functional/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package functional;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import technical.SaveLine;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":" * Class for tasks with starting and ending times.","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String EVENT_INFOTYPE \u003d \"event\";","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String EVENT_START_TIME_LABEL \u003d \"startTime\";","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String EVENT_END_TIME_LABEL \u003d \"endTime\";","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct functional.Task with a fixed name.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct a task with a time interval from a SaveLine. If the argument","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"     * is invalid, an error may or may not be thrown.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"     * @param line The SaveLine containing necessary information.","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"    public Event(SaveLine line) {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"        super(line);","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"        startTime \u003d LocalDateTime","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"            .parse(line.getValue(EVENT_START_TIME_LABEL), DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"        endTime \u003d LocalDateTime","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"            .parse(line.getValue(EVENT_END_TIME_LABEL), DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"     * Shows the event name and status as a String.","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A String with the task name and status.","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"        return String.format(\"[E]%s (from %s to %s)\", super.toString(),","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"            startTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\")),","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"            endTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\")));","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"     * Turns the task into a SaveLine, so it\u0027s ready to be saved. Can also be","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"     * used to compare two tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A SaveLine with the data associated with the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"    public SaveLine toData() {","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"        SaveLine ret \u003d super.toData();","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"        ret.setInfoType(EVENT_INFOTYPE);","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"        ret.addKeyValue(EVENT_START_TIME_LABEL,","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"            startTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\")));","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"        ret.addKeyValue(EVENT_END_TIME_LABEL, endTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy \u0027at\u0027 HH:mm:ss\")));","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"NicholasPatrick"},"content":"        return ret;","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"NicholasPatrick"},"content":"     * Checks whether this is equal to another Object. If the other object is","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"NicholasPatrick"},"content":"     * not an Event, the return value will be false.","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"NicholasPatrick"},"content":"     * @param rhs The right hand side of the comparison.","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"NicholasPatrick"},"content":"     * @return The boolean stating whether this and the argument are equal.","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"NicholasPatrick"},"content":"    public boolean equals(Object rhs) {","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"NicholasPatrick"},"content":"        if (rhs instanceof Event) {","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"NicholasPatrick"},"content":"            Event rhsDeadline \u003d (Event) rhs;","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"NicholasPatrick"},"content":"            return toData().equals(rhsDeadline.toData());","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"NicholasPatrick"},"content":"        return false;","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"NicholasPatrick":85}},{"path":"src/main/java/functional/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package functional;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import technical.SaveLine;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":" * Class for tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String TASK_INFOTYPE \u003d \"task\";","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String TASK_NAME_LABEL \u003d \"name\";","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String TASK_IS_DONE_LABEL \u003d \"done\";","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    protected String name;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct functional.Task with a fixed name.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct a task from a SaveLine.","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"     * @param line The SaveLine containing necessary information.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"    public Task(SaveLine line) {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"        name \u003d line.getValue(TASK_NAME_LABEL);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"        isDone \u003d line.getValue(TASK_IS_DONE_LABEL).equals(\"1\");","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"     * Get the name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"     * @return The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"    public String getName() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"        return name;","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"     * Get whether the task is done or not.","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"     * @return Whether the task is done or not.","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"        return isDone;","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"     * Mark a task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"    public void doTask() {","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"     * Mark a task as not done.","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"    public void undo() {","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"NicholasPatrick"},"content":"     * Get the character symbol of the done-ness of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"NicholasPatrick"},"content":"     * @return Returns \u0027X\u0027 for done tasks and \u0027 \u0027 for not done tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"NicholasPatrick"},"content":"    public char mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"NicholasPatrick"},"content":"        return isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"NicholasPatrick"},"content":"     * Shows the task name and status as a String.","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A String with the task name and status.","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"NicholasPatrick"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"NicholasPatrick"},"content":"        return String.format(\"[%c] %s\", mark(), name);","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"NicholasPatrick"},"content":"     * Turns the task into a SaveLine, so it\u0027s ready to be saved. Can also be","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"NicholasPatrick"},"content":"     * used to compare two tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A SaveLine with the data associated with the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"NicholasPatrick"},"content":"    public SaveLine toData() {","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"NicholasPatrick"},"content":"        return new SaveLine(TASK_INFOTYPE, TASK_NAME_LABEL, name, TASK_IS_DONE_LABEL, isDone ? \"1\" : \"0\");","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"NicholasPatrick":98}},{"path":"src/main/java/functional/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package functional;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import technical.SaveLine;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":" * Class for tasks with no specific time.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String TODO_INFOTYPE \u003d \"todo\";","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct functional.Task with a fixed name.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"     * Construct a task from a SaveLine. If the argument is invalid.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"     * @param line The SaveLine containing the necessary information.","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"    public Todo(SaveLine line) {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"        super(line);","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"     * Shows the todo name and status as a String.","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A String with the task name and status.","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"     * Turns the task into a SaveLine, so it\u0027s ready to be saved. Can also be","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"     * used to compare two tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A SaveLine with the data associated with the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"    public SaveLine toData() {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"        SaveLine ret \u003d super.toData();","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"        ret.setInfoType(TODO_INFOTYPE);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"        return ret;","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"     * Checks whether this is equal to another Object. If the other object is","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"     * not a Todo, the return value will be false.","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"     * @param rhs The right hand side of the comparison.","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"     * @return The boolean stating whether this and the argument are equal.","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"    public boolean equals(Object rhs) {","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"        if (rhs instanceof Todo) {","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"            Todo rhsDeadline \u003d (Todo) rhs;","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"            return toData().equals(rhsDeadline.toData());","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"        return false;","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"NicholasPatrick":66}},{"path":"src/main/java/technical/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package technical;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"import ui.Ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":" * Parser class to process user inputs.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"public class Parser {","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"     * Splits a command line into arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"     * @param line The command line String.","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A String array of arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"    public static String[] tokenise(String line) {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"        return line.split(\" \");","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"     * Lists the list of commands.","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"    public static String mismatch() {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"        return Ui.reply(\"list of commands: list, mark, unmark, todo, deadline, event, delete\");","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"     * Parses and executes a command.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"     * @param line The line of the command","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"     * @return Whether the program should continue running","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException in case of failure to write into save file.","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"    public static Pair\u003cString, Boolean\u003e parseExecute(String line) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"        String[] arguments \u003d Parser.tokenise(line);","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"bye\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(Ui.bye(), false);","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"list\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.list(), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"mark\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.mark(arguments), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"unmark\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.unmark(arguments), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"todo\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.todo(arguments), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"deadline\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.deadline(arguments), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"event\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.event(arguments), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"delete\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.delete(arguments), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"        if (arguments[0].equals(\"find\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"            return new Pair\u003c\u003e(TaskList.find(arguments), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"        return new Pair\u003c\u003e(mismatch(), true);","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"NicholasPatrick":68}},{"path":"src/main/java/technical/SaveFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package technical;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.File;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":" * The class which organises the save file.","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"public class SaveFile {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String SAVE_FILE_NAME \u003d \".data.txt\";","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"    private static final String TEMPORARY_FILE_NAME \u003d \".data_temp.txt\";","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"    private static final File saveFile \u003d new File(SAVE_FILE_NAME);","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"    private static final File temporaryFile \u003d new File(TEMPORARY_FILE_NAME);","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"    private static ArrayList\u003cSaveLine\u003e fileData;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"     * Guarantees the existence of the save file. Only needs to be called in the","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"     * beginning but there\u0027s no harm in calling it many times.","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException if the file failed to be created.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"    private static void guaranteeSaveFile() throws IOException {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"        saveFile.createNewFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"     * Loads the contents of the save file into fileData.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException if the file failed to be created or read.","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"    public static void loadSaveFile() throws IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"        guaranteeSaveFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"        FileReader fileReader \u003d new FileReader(saveFile);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"        fileData \u003d (ArrayList\u003cSaveLine\u003e) bufferedReader.lines().map(SaveLine::of).collect(Collectors.toList());","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"     * Adds data into fileData.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"     * @param infoType The type of information.","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"     * @param nameData The details of the data.","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException if the file failed to be created or written into.","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"    public static void addData(String infoType, String ... nameData) throws IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"        fileData.add(new SaveLine(infoType, nameData));","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"        saveFile();","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"     * Adds data into fileData.","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"     * @param saveLine The necessary information packed into a SaveLine.","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException if the file failed to be created or written into.","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"    public static void addData(SaveLine saveLine) throws IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"        fileData.add(saveLine);","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"        saveFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"NicholasPatrick"},"content":"     * Removes data from the fileData.","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"NicholasPatrick"},"content":"     * @param infoType The type of information","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"NicholasPatrick"},"content":"     * @param nameData The details of the data.","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException if the file failed to be created or written into.","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"NicholasPatrick"},"content":"    public static void removeData(String infoType, String ... nameData) throws IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"NicholasPatrick"},"content":"        fileData.remove(new SaveLine(infoType, nameData));","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"NicholasPatrick"},"content":"        saveFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"NicholasPatrick"},"content":"     * Saves the file with the contents of fileData.","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException if the file failed to be created or written into.","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"NicholasPatrick"},"content":"    public static void saveFile() throws IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"NicholasPatrick"},"content":"        guaranteeSaveFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"NicholasPatrick"},"content":"        temporaryFile.delete();","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"NicholasPatrick"},"content":"        temporaryFile.createNewFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"NicholasPatrick"},"content":"        FileWriter temporaryFileWriter \u003d new FileWriter(temporaryFile);","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"NicholasPatrick"},"content":"        for (SaveLine i : fileData) {","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"NicholasPatrick"},"content":"            temporaryFileWriter.append(i.toString());","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"NicholasPatrick"},"content":"            temporaryFileWriter.append(\u0027\\n\u0027);","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"NicholasPatrick"},"content":"        temporaryFileWriter.close();","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"NicholasPatrick"},"content":"        saveFile.delete();","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"NicholasPatrick"},"content":"        temporaryFile.renameTo(saveFile);","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"NicholasPatrick"},"content":"    // TODO: Prevent fileData from being edited outside this class.","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"NicholasPatrick"},"content":"     * Obtains the fileData.","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"NicholasPatrick"},"content":"     * @return fileData itself.","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"NicholasPatrick"},"content":"    public static ArrayList\u003cSaveLine\u003e getFileData() {","lastModifiedDate":"2022-09-02"},{"lineNumber":106,"author":{"gitId":"NicholasPatrick"},"content":"        return fileData;","lastModifiedDate":"2022-09-02"},{"lineNumber":107,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":108,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"NicholasPatrick":108}},{"path":"src/main/java/technical/SaveLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package technical;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":" * The class for encapsulating information in a line for the SaveFile.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"public class SaveLine {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"    private String infoType;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    private ArrayList\u003cPair\u003cString, String\u003e\u003e keyValuePairs;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"     * Constructs a SaveLine from variadic arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"     * @param infoType The name of the information.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"     * @param nameData The details of the data.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"    public SaveLine(String infoType, String ... nameData) {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"        this.infoType \u003d infoType;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"        this.keyValuePairs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 0; i \u003c nameData.length; i +\u003d 2) {","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"            this.keyValuePairs.add(new Pair\u003c\u003e(nameData[i], nameData[i + 1]));","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"     * Constructs a SaveLine from an ArrayList.","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"     * @param infoType The name of the information.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"     * @param nameData The details of the data as key-value pairs.","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"    public SaveLine(String infoType, ArrayList\u003cPair\u003cString, String\u003e\u003e nameData) {","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"        this.infoType \u003d infoType;","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"        this.keyValuePairs \u003d nameData;","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"     * Transforms the information into a string which cannot be read in an","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"     * ambiguous manner.","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"     * @return The string reflecting the contents of the SaveLine.","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"    public String toString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder ret \u003d new StringBuilder(infoType);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"        for (Pair\u003cString, String\u003e i : keyValuePairs) {","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(i.getKey());","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(i.getValue().length());","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(i.getValue());","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"        return ret.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"     * Checks whether this is equal to another Objbect. If the other object is","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"     * not a SaveLine, the return value will be false.","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"     * @param rhs The right hand side of the comparison.","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"     * @return The boolean stating whether this and the argument are equal.","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"NicholasPatrick"},"content":"    public boolean equals(Object rhs) {","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"NicholasPatrick"},"content":"        if (rhs instanceof SaveLine) {","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"NicholasPatrick"},"content":"            SaveLine rhsSaveLine \u003d (SaveLine) rhs;","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"NicholasPatrick"},"content":"            return rhsSaveLine.infoType.equals(infoType) \u0026\u0026 rhsSaveLine.keyValuePairs.equals(keyValuePairs);","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"NicholasPatrick"},"content":"        return false;","lastModifiedDate":"2022-09-02"},{"lineNumber":74,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"NicholasPatrick"},"content":"     * Parses a line of information from a save file to this class.","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"NicholasPatrick"},"content":"     * @param line The String of information from a save file.","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"NicholasPatrick"},"content":"     * @return A SaveLine with the information from the given String.","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"NicholasPatrick"},"content":"    public static SaveLine of(String line) {","lastModifiedDate":"2022-09-02"},{"lineNumber":83,"author":{"gitId":"NicholasPatrick"},"content":"        System.out.println(\"reading\" + line);","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"NicholasPatrick"},"content":"        int left \u003d 0;","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"NicholasPatrick"},"content":"        int right \u003d 0;","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"NicholasPatrick"},"content":"        // read the information type","lastModifiedDate":"2022-09-02"},{"lineNumber":87,"author":{"gitId":"NicholasPatrick"},"content":"        while (right \u003c line.length() \u0026\u0026 line.charAt(right) !\u003d \u0027 \u0027) {","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"NicholasPatrick"},"content":"            ++right;","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"NicholasPatrick"},"content":"        String infoType \u003d line.substring(left, right);","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"NicholasPatrick"},"content":"        left \u003d right;","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"NicholasPatrick"},"content":"        // read the data","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"NicholasPatrick"},"content":"        ArrayList\u003cPair\u003cString, String\u003e\u003e typeData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"NicholasPatrick"},"content":"        while (right \u003c line.length()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"NicholasPatrick"},"content":"            // space","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"NicholasPatrick"},"content":"            ++right;","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"NicholasPatrick"},"content":"            left \u003d right;","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"NicholasPatrick"},"content":"            // read the type","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"NicholasPatrick"},"content":"            while (line.charAt(right) !\u003d \u0027 \u0027) {","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"NicholasPatrick"},"content":"                ++right;","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"NicholasPatrick"},"content":"            String type \u003d line.substring(left, right);","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"NicholasPatrick"},"content":"            left \u003d right;","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"NicholasPatrick"},"content":"            // space","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"NicholasPatrick"},"content":"            ++right;","lastModifiedDate":"2022-09-02"},{"lineNumber":106,"author":{"gitId":"NicholasPatrick"},"content":"            left \u003d right;","lastModifiedDate":"2022-09-02"},{"lineNumber":107,"author":{"gitId":"NicholasPatrick"},"content":"            // read the amount of data","lastModifiedDate":"2022-09-02"},{"lineNumber":108,"author":{"gitId":"NicholasPatrick"},"content":"            while (line.charAt(right) !\u003d \u0027 \u0027) {","lastModifiedDate":"2022-09-02"},{"lineNumber":109,"author":{"gitId":"NicholasPatrick"},"content":"                ++right;","lastModifiedDate":"2022-09-02"},{"lineNumber":110,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":111,"author":{"gitId":"NicholasPatrick"},"content":"            int amount \u003d Integer.parseInt(line.substring(left, right));","lastModifiedDate":"2022-09-02"},{"lineNumber":112,"author":{"gitId":"NicholasPatrick"},"content":"            left \u003d right;","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"NicholasPatrick"},"content":"            // space","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"NicholasPatrick"},"content":"            ++right;","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"NicholasPatrick"},"content":"            left \u003d right;","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"NicholasPatrick"},"content":"            // read data","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"NicholasPatrick"},"content":"            right +\u003d amount;","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"NicholasPatrick"},"content":"            String data \u003d line.substring(left, right);","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"NicholasPatrick"},"content":"            left \u003d right;","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"NicholasPatrick"},"content":"            // conclude type data pair","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"NicholasPatrick"},"content":"            typeData.add(new Pair\u003c\u003e(type, data));","lastModifiedDate":"2022-09-02"},{"lineNumber":122,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":123,"author":{"gitId":"NicholasPatrick"},"content":"        return new SaveLine(infoType, typeData);","lastModifiedDate":"2022-09-02"},{"lineNumber":124,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":125,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":126,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":127,"author":{"gitId":"NicholasPatrick"},"content":"     * Gets the value of a given key.","lastModifiedDate":"2022-09-02"},{"lineNumber":128,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":129,"author":{"gitId":"NicholasPatrick"},"content":"     * @param key The key.","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"NicholasPatrick"},"content":"     * @return The value associated with the key. Empty if the key is invalid.","lastModifiedDate":"2022-09-02"},{"lineNumber":131,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":132,"author":{"gitId":"NicholasPatrick"},"content":"    public String getValue(String key) {","lastModifiedDate":"2022-09-02"},{"lineNumber":133,"author":{"gitId":"NicholasPatrick"},"content":"        for (Pair\u003cString, String\u003e i : keyValuePairs) {","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"NicholasPatrick"},"content":"            if (i.getKey().equals(key)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":135,"author":{"gitId":"NicholasPatrick"},"content":"                return i.getValue();","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"NicholasPatrick"},"content":"        return \"\";","lastModifiedDate":"2022-09-02"},{"lineNumber":139,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"NicholasPatrick"},"content":"     * Sets the value of a given key. If the key doesn\u0027t exist, it\u0027s added.","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"NicholasPatrick"},"content":"     * @param key The key.","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"NicholasPatrick"},"content":"     * @param value The value.","lastModifiedDate":"2022-09-02"},{"lineNumber":146,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":147,"author":{"gitId":"NicholasPatrick"},"content":"    public void setKeyValue(String key, String value) {","lastModifiedDate":"2022-09-02"},{"lineNumber":148,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 0; i \u003c keyValuePairs.size(); ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":149,"author":{"gitId":"NicholasPatrick"},"content":"            if (keyValuePairs.get(i).getKey().equals(key)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":150,"author":{"gitId":"NicholasPatrick"},"content":"                keyValuePairs.set(i, new Pair\u003c\u003e(key, value));","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"NicholasPatrick"},"content":"                return;","lastModifiedDate":"2022-09-02"},{"lineNumber":152,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":153,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":154,"author":{"gitId":"NicholasPatrick"},"content":"        addKeyValue(key, value);","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":156,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":157,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":158,"author":{"gitId":"NicholasPatrick"},"content":"     * Gets the infoType.","lastModifiedDate":"2022-09-02"},{"lineNumber":159,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":160,"author":{"gitId":"NicholasPatrick"},"content":"     * @return The infoType.","lastModifiedDate":"2022-09-02"},{"lineNumber":161,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":162,"author":{"gitId":"NicholasPatrick"},"content":"    public String getInfoType() {","lastModifiedDate":"2022-09-02"},{"lineNumber":163,"author":{"gitId":"NicholasPatrick"},"content":"        return infoType;","lastModifiedDate":"2022-09-02"},{"lineNumber":164,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":165,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":166,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":167,"author":{"gitId":"NicholasPatrick"},"content":"     * Sets the infoType.","lastModifiedDate":"2022-09-02"},{"lineNumber":168,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":169,"author":{"gitId":"NicholasPatrick"},"content":"     * @param infoType The infoType.","lastModifiedDate":"2022-09-02"},{"lineNumber":170,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":171,"author":{"gitId":"NicholasPatrick"},"content":"    public void setInfoType(String infoType) {","lastModifiedDate":"2022-09-02"},{"lineNumber":172,"author":{"gitId":"NicholasPatrick"},"content":"        this.infoType \u003d infoType;","lastModifiedDate":"2022-09-02"},{"lineNumber":173,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":174,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":175,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":176,"author":{"gitId":"NicholasPatrick"},"content":"     * Adds a key-value pair of information.","lastModifiedDate":"2022-09-02"},{"lineNumber":177,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":178,"author":{"gitId":"NicholasPatrick"},"content":"     * @param key The key.","lastModifiedDate":"2022-09-02"},{"lineNumber":179,"author":{"gitId":"NicholasPatrick"},"content":"     * @param value The value.","lastModifiedDate":"2022-09-02"},{"lineNumber":180,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":181,"author":{"gitId":"NicholasPatrick"},"content":"    public void addKeyValue(String key, String value) {","lastModifiedDate":"2022-09-02"},{"lineNumber":182,"author":{"gitId":"NicholasPatrick"},"content":"        keyValuePairs.add(new Pair\u003c\u003e(key, value));","lastModifiedDate":"2022-09-02"},{"lineNumber":183,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":184,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"NicholasPatrick":184}},{"path":"src/main/java/technical/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package technical;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"import functional.Deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"import functional.Event;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"import functional.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"import functional.Todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"import ui.Ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":" * class storing the list of tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"public class TaskList {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"     * Loads tasks from the save file.","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"     * @throws IOException","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"    public static void loadFromSaveFile() throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"        SaveFile.loadSaveFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"        for (SaveLine i : SaveFile.getFileData()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"            if (i.getInfoType().equals(\"todo\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"                TaskList.taskList.add(new Todo(i));","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"                continue;","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"            if (i.getInfoType().equals(\"deadline\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"                TaskList.taskList.add(new Deadline(i));","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"                continue;","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"            if (i.getInfoType().equals(\"event\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"                TaskList.taskList.add(new Event(i));","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"                continue;","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"     * Lists the todo list.","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"    public static String list() {","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"You have no tasks in your list.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"        String[] toReply \u003d new String[taskList.size() + 1];","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"        toReply[0] \u003d \"Here are the tasks in your list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"            toReply[i + 1] \u003d String.format(\"%d. %s\", i + 1, taskList.get(i));","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"        return Ui.reply(toReply);","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"     * Reply to be made after just adding a task.","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"    public static String justAddedComment() {","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"        return Ui.reply(new String[] {\"Successfully added the following task\",","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"            taskList.get(taskList.size() - 1).toString(),","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"            String.format(\"You now have %d tasks in the list.\",","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"            taskList.size())});","lastModifiedDate":"2022-09-02"},{"lineNumber":66,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"NicholasPatrick"},"content":"     * Append a functional.Todo to the todoList.","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"NicholasPatrick"},"content":"     * @param arguments The command arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":72,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"NicholasPatrick"},"content":"    public static String todo(String[] arguments) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder todoName \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 1; i \u003c arguments.length; ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"NicholasPatrick"},"content":"            if (todoName.length() !\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"NicholasPatrick"},"content":"                todoName.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"NicholasPatrick"},"content":"            todoName.append(arguments[i]);","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"NicholasPatrick"},"content":"        if (todoName.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":82,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"Please include a name\");","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":84,"author":{"gitId":"NicholasPatrick"},"content":"        taskList.add(new Todo(todoName.toString()));","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"NicholasPatrick"},"content":"        SaveFile.addData(taskList.get(taskList.size() - 1).toData());","lastModifiedDate":"2022-09-02"},{"lineNumber":86,"author":{"gitId":"NicholasPatrick"},"content":"        return justAddedComment();","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":88,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":89,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":90,"author":{"gitId":"NicholasPatrick"},"content":"     * Append a functional.Deadline to the todoList.","lastModifiedDate":"2022-09-02"},{"lineNumber":91,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":92,"author":{"gitId":"NicholasPatrick"},"content":"     * @param arguments The command arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":93,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":94,"author":{"gitId":"NicholasPatrick"},"content":"    public static String deadline(String[] arguments) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder deadlineName \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":96,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder deadlineDeadlineString \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"NicholasPatrick"},"content":"        boolean byFlagRead \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 1; i \u003c arguments.length; ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":99,"author":{"gitId":"NicholasPatrick"},"content":"            if (arguments[i].equals(\"/by\") \u0026\u0026 !byFlagRead) {","lastModifiedDate":"2022-09-02"},{"lineNumber":100,"author":{"gitId":"NicholasPatrick"},"content":"                byFlagRead \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"NicholasPatrick"},"content":"                continue;","lastModifiedDate":"2022-09-02"},{"lineNumber":102,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"NicholasPatrick"},"content":"            if (byFlagRead) {","lastModifiedDate":"2022-09-02"},{"lineNumber":104,"author":{"gitId":"NicholasPatrick"},"content":"                if (deadlineDeadlineString.length() !\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":105,"author":{"gitId":"NicholasPatrick"},"content":"                    deadlineDeadlineString.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":106,"author":{"gitId":"NicholasPatrick"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":107,"author":{"gitId":"NicholasPatrick"},"content":"                deadlineDeadlineString.append(arguments[i]);","lastModifiedDate":"2022-09-02"},{"lineNumber":108,"author":{"gitId":"NicholasPatrick"},"content":"            } else {","lastModifiedDate":"2022-09-02"},{"lineNumber":109,"author":{"gitId":"NicholasPatrick"},"content":"                if (deadlineName.length() !\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":110,"author":{"gitId":"NicholasPatrick"},"content":"                    deadlineName.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":111,"author":{"gitId":"NicholasPatrick"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":112,"author":{"gitId":"NicholasPatrick"},"content":"                deadlineName.append(arguments[i]);","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"NicholasPatrick"},"content":"        if (deadlineName.length() \u003d\u003d 0 || deadlineDeadlineString.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(new String[]{\"Format the command as follows:\",","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"NicholasPatrick"},"content":"                \"deadline \u003cdeadline name\u003e /by \u003cdeadline\u003e\"});","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"NicholasPatrick"},"content":"        LocalDateTime deadlineDeadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"NicholasPatrick"},"content":"            deadlineDeadline \u003d LocalDateTime","lastModifiedDate":"2022-09-02"},{"lineNumber":122,"author":{"gitId":"NicholasPatrick"},"content":"                .parse(deadlineDeadlineString.toString(),","lastModifiedDate":"2022-09-02"},{"lineNumber":123,"author":{"gitId":"NicholasPatrick"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy/M/d H:m:s\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":124,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":125,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"Please format your date as\"","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"NicholasPatrick"},"content":"                + \" \\\"year/month/date hour/minute/second\\\" (24 hour format).\");","lastModifiedDate":"2022-09-02"},{"lineNumber":127,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":128,"author":{"gitId":"NicholasPatrick"},"content":"        taskList.add(new Deadline(deadlineName.toString(), deadlineDeadline));","lastModifiedDate":"2022-09-02"},{"lineNumber":129,"author":{"gitId":"NicholasPatrick"},"content":"        SaveFile.addData(taskList.get(taskList.size() - 1).toData());","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"NicholasPatrick"},"content":"        return justAddedComment();","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":132,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":133,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"NicholasPatrick"},"content":"     * Append a functional.Event to the todoList.","lastModifiedDate":"2022-09-02"},{"lineNumber":135,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":136,"author":{"gitId":"NicholasPatrick"},"content":"     * @param arguments The command arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":137,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":138,"author":{"gitId":"NicholasPatrick"},"content":"    public static String event(String[] arguments) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder eventName \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":140,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder eventStartTimeString \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":141,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder eventEndTimeString \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":142,"author":{"gitId":"NicholasPatrick"},"content":"        int readMode \u003d 0;","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 1; i \u003c arguments.length; ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"NicholasPatrick"},"content":"            if (arguments[i].equals(\"/from\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"NicholasPatrick"},"content":"                readMode \u003d 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":146,"author":{"gitId":"NicholasPatrick"},"content":"                continue;","lastModifiedDate":"2022-09-02"},{"lineNumber":147,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":148,"author":{"gitId":"NicholasPatrick"},"content":"            if (arguments[i].equals(\"/to\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":149,"author":{"gitId":"NicholasPatrick"},"content":"                readMode \u003d 2;","lastModifiedDate":"2022-09-02"},{"lineNumber":150,"author":{"gitId":"NicholasPatrick"},"content":"                continue;","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":152,"author":{"gitId":"NicholasPatrick"},"content":"            if (readMode \u003d\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":153,"author":{"gitId":"NicholasPatrick"},"content":"                if (eventName.length() !\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":154,"author":{"gitId":"NicholasPatrick"},"content":"                    eventName.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"NicholasPatrick"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":156,"author":{"gitId":"NicholasPatrick"},"content":"                eventName.append(arguments[i]);","lastModifiedDate":"2022-09-02"},{"lineNumber":157,"author":{"gitId":"NicholasPatrick"},"content":"            } else if (readMode \u003d\u003d 1) {","lastModifiedDate":"2022-09-02"},{"lineNumber":158,"author":{"gitId":"NicholasPatrick"},"content":"                if (eventStartTimeString.length() !\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":159,"author":{"gitId":"NicholasPatrick"},"content":"                    eventStartTimeString.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":160,"author":{"gitId":"NicholasPatrick"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":161,"author":{"gitId":"NicholasPatrick"},"content":"                eventStartTimeString.append(arguments[i]);","lastModifiedDate":"2022-09-02"},{"lineNumber":162,"author":{"gitId":"NicholasPatrick"},"content":"            } else if (readMode \u003d\u003d 2) {","lastModifiedDate":"2022-09-02"},{"lineNumber":163,"author":{"gitId":"NicholasPatrick"},"content":"                if (eventEndTimeString.length() !\u003d 0) {","lastModifiedDate":"2022-09-02"},{"lineNumber":164,"author":{"gitId":"NicholasPatrick"},"content":"                    eventEndTimeString.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":165,"author":{"gitId":"NicholasPatrick"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":166,"author":{"gitId":"NicholasPatrick"},"content":"                eventEndTimeString.append(arguments[i]);","lastModifiedDate":"2022-09-02"},{"lineNumber":167,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":168,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":169,"author":{"gitId":"NicholasPatrick"},"content":"        if (eventName.length() \u003d\u003d 0 || eventStartTimeString.length() \u003d\u003d 0","lastModifiedDate":"2022-09-09"},{"lineNumber":170,"author":{"gitId":"NicholasPatrick"},"content":"            || eventEndTimeString.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-09"},{"lineNumber":171,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(new String[]{\"Format the command as follows:\",","lastModifiedDate":"2022-09-09"},{"lineNumber":172,"author":{"gitId":"NicholasPatrick"},"content":"                \"event \u003cevent name\u003e /from \u003cevent start time\u003e /to \u003cevent end time\u003e\"});","lastModifiedDate":"2022-09-02"},{"lineNumber":173,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":174,"author":{"gitId":"NicholasPatrick"},"content":"        LocalDateTime eventStartTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":175,"author":{"gitId":"NicholasPatrick"},"content":"        LocalDateTime eventEndTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":176,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":177,"author":{"gitId":"NicholasPatrick"},"content":"            eventStartTime \u003d LocalDateTime","lastModifiedDate":"2022-09-02"},{"lineNumber":178,"author":{"gitId":"NicholasPatrick"},"content":"                .parse(eventStartTimeString.toString(),","lastModifiedDate":"2022-09-02"},{"lineNumber":179,"author":{"gitId":"NicholasPatrick"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy/M/d H:m:s\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":180,"author":{"gitId":"NicholasPatrick"},"content":"            eventEndTime \u003d LocalDateTime","lastModifiedDate":"2022-09-02"},{"lineNumber":181,"author":{"gitId":"NicholasPatrick"},"content":"                .parse(eventEndTimeString.toString(),","lastModifiedDate":"2022-09-02"},{"lineNumber":182,"author":{"gitId":"NicholasPatrick"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy/M/d H:m:s\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":183,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":184,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"Please format your date as\"","lastModifiedDate":"2022-09-09"},{"lineNumber":185,"author":{"gitId":"NicholasPatrick"},"content":"                + \" \\\"year/month/date hour/minute/second\\\" (24 hour format).\");","lastModifiedDate":"2022-09-02"},{"lineNumber":186,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":187,"author":{"gitId":"NicholasPatrick"},"content":"        taskList.add(new Event(eventName.toString(), eventStartTime, eventEndTime));","lastModifiedDate":"2022-09-02"},{"lineNumber":188,"author":{"gitId":"NicholasPatrick"},"content":"        SaveFile.addData(taskList.get(taskList.size() - 1).toData());","lastModifiedDate":"2022-09-02"},{"lineNumber":189,"author":{"gitId":"NicholasPatrick"},"content":"        return justAddedComment();","lastModifiedDate":"2022-09-09"},{"lineNumber":190,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":191,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":192,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":193,"author":{"gitId":"NicholasPatrick"},"content":"     * Marks tasks as done. In the case of invalid arguments, it will reply","lastModifiedDate":"2022-09-02"},{"lineNumber":194,"author":{"gitId":"NicholasPatrick"},"content":"     * with the appropriate message.","lastModifiedDate":"2022-09-02"},{"lineNumber":195,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":196,"author":{"gitId":"NicholasPatrick"},"content":"     * @param arguments The command arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":197,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":198,"author":{"gitId":"NicholasPatrick"},"content":"    public static String mark(String[] arguments) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"NicholasPatrick"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":200,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"You don\u0027t have any tasks to mark!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":201,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":202,"author":{"gitId":"NicholasPatrick"},"content":"        int i;","lastModifiedDate":"2022-09-02"},{"lineNumber":203,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":204,"author":{"gitId":"NicholasPatrick"},"content":"            i \u003d Integer.parseInt(arguments[1]) - 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":205,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":206,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"Please enter the item ID you wish to mark\");","lastModifiedDate":"2022-09-09"},{"lineNumber":207,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":208,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(String.format(\"Invalid argument! (Please enter an integer\"","lastModifiedDate":"2022-09-09"},{"lineNumber":209,"author":{"gitId":"NicholasPatrick"},"content":"                + \" between 1 and %d)\", taskList.size()));","lastModifiedDate":"2022-09-02"},{"lineNumber":210,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":211,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":212,"author":{"gitId":"NicholasPatrick"},"content":"            taskList.get(i).doTask();","lastModifiedDate":"2022-09-02"},{"lineNumber":213,"author":{"gitId":"NicholasPatrick"},"content":"            String ret \u003d Ui.reply(new String[]{\"Ok, I\u0027m marking this as done\",","lastModifiedDate":"2022-09-09"},{"lineNumber":214,"author":{"gitId":"NicholasPatrick"},"content":"                taskList.get(i).toString()});","lastModifiedDate":"2022-09-02"},{"lineNumber":215,"author":{"gitId":"NicholasPatrick"},"content":"            SaveFile.getFileData().get(i).setKeyValue(\"done\", \"1\");","lastModifiedDate":"2022-09-02"},{"lineNumber":216,"author":{"gitId":"NicholasPatrick"},"content":"            SaveFile.saveFile();","lastModifiedDate":"2022-09-02"},{"lineNumber":217,"author":{"gitId":"NicholasPatrick"},"content":"            return ret;","lastModifiedDate":"2022-09-09"},{"lineNumber":218,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":219,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(String.format(\"Invalid argument! (Please enter an integer\"","lastModifiedDate":"2022-09-09"},{"lineNumber":220,"author":{"gitId":"NicholasPatrick"},"content":"                + \" between 1 and %d)\", taskList.size()));","lastModifiedDate":"2022-09-02"},{"lineNumber":221,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":222,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":223,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":224,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":225,"author":{"gitId":"NicholasPatrick"},"content":"     * Marks tasks as not done. In the case of invalid arguments, it will","lastModifiedDate":"2022-09-02"},{"lineNumber":226,"author":{"gitId":"NicholasPatrick"},"content":"     * reply with the appropriate message.","lastModifiedDate":"2022-09-02"},{"lineNumber":227,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":228,"author":{"gitId":"NicholasPatrick"},"content":"     * @param arguments The command arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":229,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":230,"author":{"gitId":"NicholasPatrick"},"content":"    public static String unmark(String[] arguments) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":231,"author":{"gitId":"NicholasPatrick"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":232,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"You don\u0027t have any tasks to unmark!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":233,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":234,"author":{"gitId":"NicholasPatrick"},"content":"        int i;","lastModifiedDate":"2022-09-02"},{"lineNumber":235,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":236,"author":{"gitId":"NicholasPatrick"},"content":"            i \u003d Integer.parseInt(arguments[1]) - 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":237,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":238,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"Please enter the item ID you wish to unmark\");","lastModifiedDate":"2022-09-09"},{"lineNumber":239,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":240,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(String.format(\"Invalid argument! (Please enter an integer\"","lastModifiedDate":"2022-09-09"},{"lineNumber":241,"author":{"gitId":"NicholasPatrick"},"content":"                + \" between 1 and %d)\", taskList.size()));","lastModifiedDate":"2022-09-02"},{"lineNumber":242,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":243,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":244,"author":{"gitId":"NicholasPatrick"},"content":"            taskList.get(i).undo();","lastModifiedDate":"2022-09-02"},{"lineNumber":245,"author":{"gitId":"NicholasPatrick"},"content":"            String ret \u003d Ui.reply(new String[]{\"Ok, I\u0027m marking this as not done\",","lastModifiedDate":"2022-09-09"},{"lineNumber":246,"author":{"gitId":"NicholasPatrick"},"content":"                taskList.get(i).toString()});","lastModifiedDate":"2022-09-02"},{"lineNumber":247,"author":{"gitId":"NicholasPatrick"},"content":"            SaveFile.getFileData().get(i).setKeyValue(\"done\", \"0\");","lastModifiedDate":"2022-09-02"},{"lineNumber":248,"author":{"gitId":"NicholasPatrick"},"content":"            SaveFile.saveFile();","lastModifiedDate":"2022-09-02"},{"lineNumber":249,"author":{"gitId":"NicholasPatrick"},"content":"            return ret;","lastModifiedDate":"2022-09-09"},{"lineNumber":250,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":251,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(String.format(\"Invalid argument! (Please enter an integer\"","lastModifiedDate":"2022-09-09"},{"lineNumber":252,"author":{"gitId":"NicholasPatrick"},"content":"                + \" between 1 and %d)\", taskList.size()));","lastModifiedDate":"2022-09-02"},{"lineNumber":253,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":254,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":255,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":256,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":257,"author":{"gitId":"NicholasPatrick"},"content":"     * Deletes a task.","lastModifiedDate":"2022-09-02"},{"lineNumber":258,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":259,"author":{"gitId":"NicholasPatrick"},"content":"     * @param arguments The command arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":260,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":261,"author":{"gitId":"NicholasPatrick"},"content":"    public static String delete(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":262,"author":{"gitId":"NicholasPatrick"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":263,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"You don\u0027t have any tasks to delete!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":264,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":265,"author":{"gitId":"NicholasPatrick"},"content":"        int i;","lastModifiedDate":"2022-09-02"},{"lineNumber":266,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":267,"author":{"gitId":"NicholasPatrick"},"content":"            i \u003d Integer.parseInt(arguments[1]) - 1;","lastModifiedDate":"2022-09-02"},{"lineNumber":268,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":269,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"Please enter the item ID you wish to delete\");","lastModifiedDate":"2022-09-09"},{"lineNumber":270,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":271,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(String.format(\"Invalid argument! (Please enter an integer\"","lastModifiedDate":"2022-09-09"},{"lineNumber":272,"author":{"gitId":"NicholasPatrick"},"content":"                + \" between 1 and %d)\", taskList.size()));","lastModifiedDate":"2022-09-02"},{"lineNumber":273,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":274,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":275,"author":{"gitId":"NicholasPatrick"},"content":"            String ret \u003d Ui.reply(new String[]{\"Ok, I\u0027m deleting this\",","lastModifiedDate":"2022-09-09"},{"lineNumber":276,"author":{"gitId":"NicholasPatrick"},"content":"                taskList.get(i).toString()});","lastModifiedDate":"2022-09-02"},{"lineNumber":277,"author":{"gitId":"NicholasPatrick"},"content":"            taskList.remove(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":278,"author":{"gitId":"NicholasPatrick"},"content":"            SaveFile.getFileData().remove(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":279,"author":{"gitId":"NicholasPatrick"},"content":"            SaveFile.saveFile();","lastModifiedDate":"2022-09-02"},{"lineNumber":280,"author":{"gitId":"NicholasPatrick"},"content":"            return ret;","lastModifiedDate":"2022-09-09"},{"lineNumber":281,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":282,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(String.format(\"Invalid argument! (Please enter an integer\"","lastModifiedDate":"2022-09-09"},{"lineNumber":283,"author":{"gitId":"NicholasPatrick"},"content":"                + \" between 1 and %d)\", taskList.size()));","lastModifiedDate":"2022-09-02"},{"lineNumber":284,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":285,"author":{"gitId":"NicholasPatrick"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-02"},{"lineNumber":286,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":287,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":288,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":289,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":290,"author":{"gitId":"NicholasPatrick"},"content":"     * Finds all tasks with the searched phrase and lists them.","lastModifiedDate":"2022-09-02"},{"lineNumber":291,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":292,"author":{"gitId":"NicholasPatrick"},"content":"     * @param arguments The command arguments.","lastModifiedDate":"2022-09-02"},{"lineNumber":293,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":294,"author":{"gitId":"NicholasPatrick"},"content":"    public static String find(String[] arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":295,"author":{"gitId":"NicholasPatrick"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-09-02"},{"lineNumber":296,"author":{"gitId":"NicholasPatrick"},"content":"            return Ui.reply(\"You have no tasks in your list.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":297,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":298,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder searchPhraseStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":299,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 1; i \u003c arguments.length; ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":300,"author":{"gitId":"NicholasPatrick"},"content":"            if (i \u003e 1) {","lastModifiedDate":"2022-09-02"},{"lineNumber":301,"author":{"gitId":"NicholasPatrick"},"content":"                searchPhraseStringBuilder.append(\u0027 \u0027);","lastModifiedDate":"2022-09-02"},{"lineNumber":302,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":303,"author":{"gitId":"NicholasPatrick"},"content":"            searchPhraseStringBuilder.append(arguments[i]);","lastModifiedDate":"2022-09-02"},{"lineNumber":304,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":305,"author":{"gitId":"NicholasPatrick"},"content":"        String searchPhrase \u003d searchPhraseStringBuilder.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":306,"author":{"gitId":"NicholasPatrick"},"content":"        ArrayList\u003cString\u003e toReplyArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-02"},{"lineNumber":307,"author":{"gitId":"NicholasPatrick"},"content":"        toReplyArrayList.add(\"Here are the tasks in your list which matches the\"","lastModifiedDate":"2022-09-02"},{"lineNumber":308,"author":{"gitId":"NicholasPatrick"},"content":"            + \" search phrase.\");","lastModifiedDate":"2022-09-02"},{"lineNumber":309,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":310,"author":{"gitId":"NicholasPatrick"},"content":"            if (taskList.get(i).getName().contains(searchPhrase)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":311,"author":{"gitId":"NicholasPatrick"},"content":"                toReplyArrayList.add(String.format(\"%d. %s\", i + 1, taskList.get(i)));","lastModifiedDate":"2022-09-02"},{"lineNumber":312,"author":{"gitId":"NicholasPatrick"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":313,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":314,"author":{"gitId":"NicholasPatrick"},"content":"        String[] toReply \u003d new String[toReplyArrayList.size()];","lastModifiedDate":"2022-09-02"},{"lineNumber":315,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 0; i \u003c toReply.length; ++i) {","lastModifiedDate":"2022-09-02"},{"lineNumber":316,"author":{"gitId":"NicholasPatrick"},"content":"            toReply[i] \u003d toReplyArrayList.get(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":317,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":318,"author":{"gitId":"NicholasPatrick"},"content":"        return Ui.reply(toReply);","lastModifiedDate":"2022-09-09"},{"lineNumber":319,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":320,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"NicholasPatrick":320}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"    DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"    private void flip() {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"        db.flip();","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"        return db;","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":61}},{"path":"src/main/java/ui/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import technical.Parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":" * Class to marry UI with Java application.","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"public class Duke {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"    Pair\u003cString, Boolean\u003e getResponse(String input) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"        return Parser.parseExecute(input);","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":20}},{"path":"src/main/java/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"            stage.show();","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":31}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"import javafx.util.Pair;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user_pfp.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke_pfp.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"    protected void setDuke(Duke d) {","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"    private void handleUserInput() throws IOException, InterruptedException {","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"NicholasPatrick"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"NicholasPatrick"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"NicholasPatrick"},"content":"        Pair\u003cString, Boolean\u003e response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"NicholasPatrick"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"NicholasPatrick"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"NicholasPatrick"},"content":"            DialogBox.getDukeDialog(response.getKey(), dukeImage)","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"NicholasPatrick"},"content":"        );","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"NicholasPatrick"},"content":"        if (!response.getValue()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"NicholasPatrick"},"content":"            ScheduledExecutorService executor \u003d Executors.newScheduledThreadPool(1);","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"NicholasPatrick"},"content":"            executor.schedule(() -\u003e exit(0), 1, TimeUnit.SECONDS);","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":65}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":" * The class for interacting with the user.","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"public class Ui {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"     * Prints a one line reply with the appropriate style.","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"     * @param message A string of the one line reply message.","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    public static String reply(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"        return \"\u003e \" + message + \u0027\\n\u0027;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"     * Prints a multiline reply with the appropriate style.","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"     * @param message An array of Strings containing the messages for each line.","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"    public static String reply(String[] message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"        StringBuilder ret \u003d new StringBuilder();","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"        for (int i \u003d 0; i \u003c message.length; ++i) {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(i \u003d\u003d 0 ? \"\u003e \" : \"  \");","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(message[i]);","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"            ret.append(\u0027\\n\u0027);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"        return ret.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"     * Sends a goodbye message before closing dialogue.","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"    public static String bye() {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"        return reply(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"NicholasPatrick":19}},{"path":"src/test/java/functional/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package functional;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":" * JUnit test class for Event.","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"public class EventTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"     * Tests whether Event::toString performs as expected","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"    @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"    public void toStringCheck() {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"        Event event \u003d new Event(\"sleep\",","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"            LocalDateTime.of(2022, 10, 19, 18, 17, 16),","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"            LocalDateTime.of(2022, 11, 20, 19, 18, 17));","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"        assertEquals(event.toString(), \"[E][ ] sleep (from 19 Oct 2022 at 18:17:16 to 20 Nov 2022 at 19:18:17)\");","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"NicholasPatrick":24}},{"path":"src/test/java/technical/SaveLineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"package technical;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":" * JUnit test class for SaveLine.","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":" * @author Nicholas Patrick","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"import functional.Deadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"import functional.Event;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"public class SaveLineTest {","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"  /**","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"   * Tests whether SaveLine can turn into a String and back without any error.","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"   */","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"  @Test","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"  public void toStringAndBackChecks() {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"    SaveLine exampleDeadline \u003d new Deadline(\"Theology\",","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"        LocalDateTime.of(2022, 9, 2, 20, 10, 4)).toData();","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"    String printedDeadline \u003d exampleDeadline.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"    SaveLine readDeadline \u003d SaveLine.of(printedDeadline);","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"    assertEquals(exampleDeadline, readDeadline);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"    SaveLine exampleEvent \u003d new Event(\"Theology\",","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"        LocalDateTime.of(2022, 9, 2, 20, 10, 4),","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"        LocalDateTime.of(2023, 10, 11, 12, 13, 14)).toData();","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"    String printedEvent \u003d exampleEvent.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"    SaveLine readEvent \u003d SaveLine.of(printedEvent);","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"    assertEquals(exampleEvent, readEvent);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"    exampleEvent.setKeyValue(\"startTime\", \"something else\");","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"    assertNotEquals(exampleEvent, readEvent);","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"  }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"NicholasPatrick":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NicholasPatrick"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"NicholasPatrick"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"NicholasPatrick"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"NicholasPatrick"},"content":"mark","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"NicholasPatrick"},"content":"unmark","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"NicholasPatrick"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"NicholasPatrick"},"content":"todo a b c","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"NicholasPatrick"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"NicholasPatrick"},"content":"deadline a /by","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"NicholasPatrick"},"content":"deadline     /by a","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"NicholasPatrick"},"content":"deadline b z    /by c d","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"NicholasPatrick"},"content":"deadline a b /at c d","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"NicholasPatrick"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"NicholasPatrick"},"content":"event a /at","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"NicholasPatrick"},"content":"event     /at a","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"event b z    /at c d","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"NicholasPatrick"},"content":"event a b /by c d","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"NicholasPatrick"},"content":"todo d e f","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"NicholasPatrick"},"content":"mark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"NicholasPatrick"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"NicholasPatrick"},"content":"mark 9","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"NicholasPatrick"},"content":"event gio /at 798 hiouh","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"NicholasPatrick"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"NicholasPatrick"},"content":"unmark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"NicholasPatrick"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"NicholasPatrick"},"content":"unmark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"NicholasPatrick"},"content":"unmark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"NicholasPatrick"},"content":"unmark 99","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"NicholasPatrick"},"content":"a","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"NicholasPatrick"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"NicholasPatrick"},"content":"delete a","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"NicholasPatrick"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"NicholasPatrick"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"NicholasPatrick"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"NicholasPatrick"},"content":"delete 4","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"NicholasPatrick"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"NicholasPatrick"},"content":"delete 0","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"NicholasPatrick"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"NicholasPatrick"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"NicholasPatrick"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"NicholasPatrick"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"NicholasPatrick"},"content":"delete 0","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"NicholasPatrick"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"NicholasPatrick"},"content":"list","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"NicholasPatrick":52}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NicholasPatrick"},"content":"java -classpath ..\\bin ui.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasPatrick":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"NicholasPatrick"},"content":"#javac ../src/main/java/*.java \u0026\u0026 java Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasPatrick":1,"-":38}}]

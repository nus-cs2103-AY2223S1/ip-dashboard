[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"T| |do homework","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"E|X|do homework|2022-12-30-1500","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"D|X|do homework|2022-12-30-1500","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"E| |play basketball|2012-12-12-1623","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"asaierika":4}},{"path":"src/main/java/AddToListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * the class of exceptions related to","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" * add to list function of Rabbit","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"public class AddToListException extends RabbitException{","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    private Type type;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    public enum Type {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"        FULL, FORMAT, TIMEFORMAT;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    public AddToListException(Type type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"        switch(this.type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"        case FULL:","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"            return \"There are too many tasks in the list!\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"                    + \"Don\u0027t exceed 100 please. The poor notebook is full.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"        case FORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"            return \"Do I have to teach you again the format of creating a task?\";","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"        case TIMEFORMAT:","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"            return \"Hmmmm...I\u0027m not sure if that\u0027s a valid time. Do you live on the earth or...?\";","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"        return \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":29}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":" * A subclass of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":" * It has a content that represents the task and a time","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":" * when the deadline is.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"     * Constructor of a task that has a deadline. The task is created","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"     * as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"     * @param content the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"     * @param time the time of the deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"    public Deadline(String content, LocalDateTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"        super(content);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"     * Constructor of a task that has a deadline. The task is created","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"     * as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"     * @param content the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"     * @param time the time of the deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"    public Deadline(String content, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"        super(content, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"asaierika"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"asaierika"},"content":"     * @return the deadline.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"asaierika"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"asaierika"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"asaierika"},"content":"        return this.time.format(formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"asaierika"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"asaierika"},"content":"        String timeString \u003d this.time.format(formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"asaierika"},"content":"        return (this.isDone() ? \"[D][X] \" : \"[D][ ] \") + this.getContent() + \" by \" + timeString;","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":53}},{"path":"src/main/java/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class DeleteException extends RabbitException {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    public enum Type {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"        FORMAT, INDEX;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    private Type type;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    public DeleteException(Type type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"        switch(this.type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"            case FORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"                return \"Type \u0027delete index\u0027 to delete a task if that\u0027s what you want.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"            case INDEX:","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"                return \"You can\u0027t delete a task that\u0027s not in the list.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"        return \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":" * A subclass of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":" * It has a content that represents the event and a time","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":" * when the event happens.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"     * Constructor of an event. The event is created","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"     * as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"     * @param content the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"     * @param time the time that the event happens.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"    public Event(String content, LocalDateTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"        super(content);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"     * Constructor of an event.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"     * @param content the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"     * @param time the time that the event happens.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"     * @param isDone whether the event is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"    public Event(String content, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"        super(content, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"asaierika"},"content":"     * Returns the time of the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"asaierika"},"content":"     * @return the time when the event happens","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"asaierika"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"asaierika"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"asaierika"},"content":"        return this.time.format(formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"asaierika"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"asaierika"},"content":"        String timeString \u003d this.time.format(formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"asaierika"},"content":"        return (this.isDone() ? \"[E][X] \" : \"[E][ ] \") + this.getContent() + \" at \" + timeString;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":52}},{"path":"src/main/java/ExportDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class ExportDataException extends RabbitException {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"        return \"Failed to write one or more lines from\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"                \"the list into data.txt due to wrong format of tasks.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"asaierika":7}},{"path":"src/main/java/ImportDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class ImportDataException extends RabbitException {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"        return \"Fail to import one or more lines from data.txt due to format error.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"asaierika":6}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class InvalidInputException extends RabbitException {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"        return \"Ummm...what is that? I don\u0027t get it.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"asaierika":6}},{"path":"src/main/java/MarkUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * the class of exceptions related to the mark","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" * and unmark functions of Rabbit","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"public class MarkUnmarkException extends RabbitException{","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    private Type type;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    public enum Type {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"        INDEX, MARKFORMAT, MARKREPEAT,","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"        UNMARKFORMAT, UNMARKREPEAT;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    public MarkUnmarkException(Type type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"    };","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"        switch (this.type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"            case INDEX:","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"                return \"Hey, be careful.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"                        + \"The index must be between 1 and the size of the list, alright?\";","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"            case MARKFORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"                return \"Type \u0027mark + the index of the task\u0027 \"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"                        + \"if that\u0027s what you want.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"            case MARKREPEAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"                return \"What do you mean? This task is already marked as done.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"            case UNMARKFORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"                return \"Type \u0027unmark + the index of the task\u0027 if that\u0027s what you want.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"            case UNMARKREPEAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"                return \"What do you mean? This task is not done in the first place.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"        return \"An Unknown exception related to mark and unmark functions occurred.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":34}},{"path":"src/main/java/Rabbit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":" * Rabbit is a short-tempered, annoyed bot that puts in her 30% efforts","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":" *  to help you solve some simple problems as her part-time jpb.","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":" *","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":" * @author Jiang Zhimeng","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"public class Rabbit {","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"    private static final String greet \u003d \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"            + \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"            + \"Yo...nice to meet you. This is rabbit...Ughhhhh I hate this job.\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"            + \"You can input stuff that you want me to write on this grandma-aged notebook.\\n\"","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"            + \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"            + \"1. Type the type of a task followed by its content and time to add it into the list.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"            + \"   There are three types: todo, deadline and event.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"            + \"   - To add todo, type \u0027todo the content\u0027 such as \u0027todo do homework\u0027.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"            + \"   - To add deadline, type \u0027deadline the content /year-month-day-time\u0027 \"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"            + \"such as \u0027deadline do homework /2022-08-22-1800\u0027.\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"            + \"   - To add event, type \u0027event the content /year-month-day-time\u0027 \"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"            + \"such as \u0027deadline do homework /2022-08-22-1800\u0027.\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"            + \"2. Type \u0027list\u0027 then I\u0027ll show all the existing lines to you.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"asaierika"},"content":"            + \"3. Type \u0027mark + the index of an existing task\u0027 to marks it as done. Like \u0027mark 1\u0027.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"asaierika"},"content":"            + \"4. Type \u0027unmark + the index of an existing task\u0027 to unmark a task.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"asaierika"},"content":"            + \"5. Type \u0027delete + the index of an existing task\u0027 to delete it.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"asaierika"},"content":"            + \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"asaierika"},"content":"            + \"Actually why not just do me a favour? Type \u0027bye\u0027 in the console and free both of us.\";","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"asaierika"},"content":"    private static final String bye \u003d \"Thanks a lot. I\u0027m gonna have some carrot tea later. See you...\";","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"asaierika"},"content":"    // initialise the list that stores tasks.","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"asaierika"},"content":"    /** a list that keeps all the tasks */","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"asaierika"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"asaierika"},"content":"    final static String dir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"asaierika"},"content":"    /** path of data.txt */","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"asaierika"},"content":"    private static Path path \u003d Paths.get(dir, \"data\", \"data.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"asaierika"},"content":"    private enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"asaierika"},"content":"        TODO, DEADLINE, EVENT;","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"asaierika"},"content":"     *  Adds the input lines the user types into","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"asaierika"},"content":"     *  a list with a size no more than 100.","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"asaierika"},"content":"     * @param task the type of the task that is to be added.","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"asaierika"},"content":"     * @param input the content (and the time) of the task the user inputs.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"asaierika"},"content":"    private static void addToList(TaskType task, String input) throws AddToListException {","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"asaierika"},"content":"        if (list.size() \u003d\u003d 100) {","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"asaierika"},"content":"            // throws an exception when there are already 100 lines in","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"asaierika"},"content":"            // the list when the user is trying to input a new line.","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"asaierika"},"content":"            throw new AddToListException(AddToListException.Type.FULL);","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"asaierika"},"content":"            // initialise the task to be added","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"asaierika"},"content":"            Task added \u003d new Todo(\"\");","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"asaierika"},"content":"            String content \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"asaierika"},"content":"            LocalDateTime time \u003d LocalDateTime.now();","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"asaierika"},"content":"            switch (task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"asaierika"},"content":"            case TODO:","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"asaierika"},"content":"                content \u003d input.substring(5, input.length());","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"asaierika"},"content":"                added \u003d new Todo(content);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"asaierika"},"content":"                list.add(added);","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"asaierika"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"asaierika"},"content":"            case DEADLINE:","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"asaierika"},"content":"                // the content and time of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"asaierika"},"content":"                String deadline \u003d input.substring(9, input.length());","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"asaierika"},"content":"                // the index of the character in the string before which is the content","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"asaierika"},"content":"                int i \u003d scanContent(deadline);","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"asaierika"},"content":"                content \u003d deadline.substring(0, i - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"asaierika"},"content":"                time \u003d scanTime(deadline.substring(i + 1, deadline.length()));","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"asaierika"},"content":"                added \u003d new Deadline(content, time);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"asaierika"},"content":"                list.add(added);","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"asaierika"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"asaierika"},"content":"            case EVENT:","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"asaierika"},"content":"                // the content and time of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"asaierika"},"content":"                String event \u003d input.substring(6, input.length());","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"asaierika"},"content":"                // the index of the character in the string before which is the content","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"asaierika"},"content":"                int j \u003d scanContent(event);","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"asaierika"},"content":"                content \u003d event.substring(0, j - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"asaierika"},"content":"                time \u003d scanTime(event.substring(j + 1, event.length()));","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"asaierika"},"content":"                added \u003d new Event(event.substring(0, j - 1), time);","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"asaierika"},"content":"                list.add(added);","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"asaierika"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"asaierika"},"content":"            System.out.println(\"Okay...noted.\\n\" + added.getContent() + \"...Huh? Hope you can remember it.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"asaierika"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"asaierika"},"content":"            // if the format is wrong, there will be a","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"asaierika"},"content":"            // StringIndexOutOfBoundsException, catch it","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"asaierika"},"content":"            // and throw an AddToListException","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"asaierika"},"content":"            throw new AddToListException(AddToListException.Type.FORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"asaierika"},"content":"     * Prints the list of current tasks","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"asaierika"},"content":"     * when the user inputs \"list\".","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":113,"author":{"gitId":"asaierika"},"content":"    private static void list() {","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"asaierika"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"asaierika"},"content":"            System.out.println(\"There is no task in the list.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"asaierika"},"content":"        for (int i  \u003d 0; i \u003c list.size(); i++ ) {","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"asaierika"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"asaierika"},"content":"            System.out.println(index + \". \" + list.get(i));","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"asaierika"},"content":"     * Marks the task at index i as done","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"asaierika"},"content":"     * @param input the user\u0027s input.","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"asaierika"},"content":"    private static void mark(String input) throws MarkUnmarkException {","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"asaierika"},"content":"            Integer.parseInt(input.substring(5));","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"asaierika"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"asaierika"},"content":"            // if input is mark + a non-integer,","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"asaierika"},"content":"            // throws an exception due to incorrect format","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.MARKFORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"asaierika"},"content":"        int i \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"asaierika"},"content":"        if (i \u003e list.size() || i \u003c\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.INDEX);","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"asaierika"},"content":"        if (list.get(i - 1).isDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":144,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.MARKREPEAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"asaierika"},"content":"        System.out.println(\"Okay...task: \" + list.get(i - 1).getContent() + \" is marked as done.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"asaierika"},"content":"        list.get(i - 1).markDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":152,"author":{"gitId":"asaierika"},"content":"     * Unmarks the task at index i as not done","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":154,"author":{"gitId":"asaierika"},"content":"     * @param input the user\u0027s input.","lastModifiedDate":"2022-08-18"},{"lineNumber":155,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":156,"author":{"gitId":"asaierika"},"content":"    private static void unmark(String input) throws MarkUnmarkException {","lastModifiedDate":"2022-08-18"},{"lineNumber":157,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"asaierika"},"content":"            Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"asaierika"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"asaierika"},"content":"            // if input is unmark + a non-integer,","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"asaierika"},"content":"            // throws an exception due to incorrect format","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.UNMARKFORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"asaierika"},"content":"        int i \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"asaierika"},"content":"        if (i \u003e list.size() || i \u003c\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":167,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.INDEX);","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":169,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":170,"author":{"gitId":"asaierika"},"content":"        if (!list.get(i - 1).isDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":171,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.UNMARKREPEAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":172,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":173,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":174,"author":{"gitId":"asaierika"},"content":"        System.out.println(\"Okay...task: \" + list.get(i - 1).getContent() + \" is unmarked.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":175,"author":{"gitId":"asaierika"},"content":"        list.get(i - 1).unmark();","lastModifiedDate":"2022-08-17"},{"lineNumber":176,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":177,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":178,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"asaierika"},"content":"     * Returning the first word of the string.","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":181,"author":{"gitId":"asaierika"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2022-08-18"},{"lineNumber":182,"author":{"gitId":"asaierika"},"content":"     * @return the index of the character in the string","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"asaierika"},"content":"     * before which is the first word","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":185,"author":{"gitId":"asaierika"},"content":"    private static int scanFunction(String input) {","lastModifiedDate":"2022-08-18"},{"lineNumber":186,"author":{"gitId":"asaierika"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":187,"author":{"gitId":"asaierika"},"content":"            if (input.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-18"},{"lineNumber":188,"author":{"gitId":"asaierika"},"content":"                return i + 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":190,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":191,"author":{"gitId":"asaierika"},"content":"       return input.length();","lastModifiedDate":"2022-08-18"},{"lineNumber":192,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":193,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":194,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"asaierika"},"content":"     * Returns the index that separates the content","lastModifiedDate":"2022-08-23"},{"lineNumber":196,"author":{"gitId":"asaierika"},"content":"     * from the time of the task when the user creates a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":197,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":198,"author":{"gitId":"asaierika"},"content":"     * @param input the string after the task type in the input.","lastModifiedDate":"2022-08-23"},{"lineNumber":199,"author":{"gitId":"asaierika"},"content":"     * @return the index of the character in the string before which.","lastModifiedDate":"2022-08-23"},{"lineNumber":200,"author":{"gitId":"asaierika"},"content":"     * is the content, after which is the time, -1 if the format is wrong.","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":202,"author":{"gitId":"asaierika"},"content":"    private static int scanContent(String input) {","lastModifiedDate":"2022-08-18"},{"lineNumber":203,"author":{"gitId":"asaierika"},"content":"        for (int i \u003d 0; i \u003c input.length() - 1; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":204,"author":{"gitId":"asaierika"},"content":"            if (input.charAt(i) \u003d\u003d \u0027 \u0027 \u0026\u0026 input.charAt(i + 1) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"asaierika"},"content":"                return i + 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":206,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":207,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":208,"author":{"gitId":"asaierika"},"content":"        return -1;","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":210,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":211,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":212,"author":{"gitId":"asaierika"},"content":"     * Returns localDataTime according to the input.","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":214,"author":{"gitId":"asaierika"},"content":"     * @param input the time input from the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":215,"author":{"gitId":"asaierika"},"content":"     * @return a LocalDataTime instance.","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"asaierika"},"content":"    private static LocalDateTime scanTime(String input) throws AddToListException {","lastModifiedDate":"2022-08-25"},{"lineNumber":218,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":219,"author":{"gitId":"asaierika"},"content":"            int year \u003d Integer.parseInt(input.substring(0,4));","lastModifiedDate":"2022-08-25"},{"lineNumber":220,"author":{"gitId":"asaierika"},"content":"            int month \u003d Integer.parseInt(input.substring(5,7));","lastModifiedDate":"2022-08-25"},{"lineNumber":221,"author":{"gitId":"asaierika"},"content":"            int day \u003d Integer.parseInt(input.substring(8,10));","lastModifiedDate":"2022-08-25"},{"lineNumber":222,"author":{"gitId":"asaierika"},"content":"            int hour \u003d Integer.parseInt(input.substring(11,13));","lastModifiedDate":"2022-08-25"},{"lineNumber":223,"author":{"gitId":"asaierika"},"content":"            int minute \u003d Integer.parseInt(input.substring(13,15));","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"asaierika"},"content":"            return LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"asaierika"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":226,"author":{"gitId":"asaierika"},"content":"            // if input is delete + a non-integer,","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"asaierika"},"content":"            // throws an exception due to incorrect format","lastModifiedDate":"2022-08-25"},{"lineNumber":228,"author":{"gitId":"asaierika"},"content":"            throw new AddToListException(AddToListException.Type.FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":229,"author":{"gitId":"asaierika"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"asaierika"},"content":"            throw new AddToListException(AddToListException.Type.TIMEFORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":232,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":233,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":235,"author":{"gitId":"asaierika"},"content":"     * Deletes a specified task from the list.","lastModifiedDate":"2022-08-23"},{"lineNumber":236,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":237,"author":{"gitId":"asaierika"},"content":"     * @param input The input from the user intended to delete a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":238,"author":{"gitId":"asaierika"},"content":"     * @throws DeleteException The task to be deleted is not in the list.","lastModifiedDate":"2022-08-23"},{"lineNumber":239,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":240,"author":{"gitId":"asaierika"},"content":"    private static void delete(String input) throws DeleteException {","lastModifiedDate":"2022-08-18"},{"lineNumber":241,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":242,"author":{"gitId":"asaierika"},"content":"            Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"asaierika"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":244,"author":{"gitId":"asaierika"},"content":"            // if input is delete + a non-integer,","lastModifiedDate":"2022-08-18"},{"lineNumber":245,"author":{"gitId":"asaierika"},"content":"            // throws an exception due to incorrect format","lastModifiedDate":"2022-08-18"},{"lineNumber":246,"author":{"gitId":"asaierika"},"content":"            throw new DeleteException(DeleteException.Type.FORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":247,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":248,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":249,"author":{"gitId":"asaierika"},"content":"        int i \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"asaierika"},"content":"        if (i \u003e list.size() || i \u003c\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"asaierika"},"content":"            // the index is not within the bound of the list","lastModifiedDate":"2022-08-18"},{"lineNumber":252,"author":{"gitId":"asaierika"},"content":"            throw new DeleteException(DeleteException.Type.INDEX);","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":254,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":255,"author":{"gitId":"asaierika"},"content":"        System.out.println(\"Okay...task: \" + list.get(i - 1).getContent() + \" is deleted.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":256,"author":{"gitId":"asaierika"},"content":"        list.remove(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":257,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":258,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":259,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":260,"author":{"gitId":"asaierika"},"content":"     * Imports a task from data.txt into the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":261,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":262,"author":{"gitId":"asaierika"},"content":"     * @param input the line of the task to be imported.","lastModifiedDate":"2022-08-24"},{"lineNumber":263,"author":{"gitId":"asaierika"},"content":"     * @throws ImportDataException","lastModifiedDate":"2022-08-25"},{"lineNumber":264,"author":{"gitId":"asaierika"},"content":"     * @throws AddToListException","lastModifiedDate":"2022-08-25"},{"lineNumber":265,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":266,"author":{"gitId":"asaierika"},"content":"    private static void importData(String input) throws ImportDataException, AddToListException {","lastModifiedDate":"2022-08-25"},{"lineNumber":267,"author":{"gitId":"asaierika"},"content":"        char type \u003d input.charAt(0);","lastModifiedDate":"2022-08-24"},{"lineNumber":268,"author":{"gitId":"asaierika"},"content":"        /** indicates the index of the second \"|\" */","lastModifiedDate":"2022-08-24"},{"lineNumber":269,"author":{"gitId":"asaierika"},"content":"        int contentBreak \u003d 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":270,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":271,"author":{"gitId":"asaierika"},"content":"        if (type \u003d\u003d \u0027E\u0027 || type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":272,"author":{"gitId":"asaierika"},"content":"            for (int i \u003d 2; i \u003c input.length(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":273,"author":{"gitId":"asaierika"},"content":"                if (input.charAt(i) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":274,"author":{"gitId":"asaierika"},"content":"                    contentBreak \u003d i;","lastModifiedDate":"2022-08-24"},{"lineNumber":275,"author":{"gitId":"asaierika"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":276,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":277,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":278,"author":{"gitId":"asaierika"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":279,"author":{"gitId":"asaierika"},"content":"                boolean isDone \u003d input.charAt(2) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":280,"author":{"gitId":"asaierika"},"content":"                String content \u003d input.substring(4, contentBreak);","lastModifiedDate":"2022-08-24"},{"lineNumber":281,"author":{"gitId":"asaierika"},"content":"                LocalDateTime time \u003d scanTime(input.substring(contentBreak + 1, input.length()));","lastModifiedDate":"2022-08-25"},{"lineNumber":282,"author":{"gitId":"asaierika"},"content":"                if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":283,"author":{"gitId":"asaierika"},"content":"                    list.add(new Event(content, time, isDone));","lastModifiedDate":"2022-08-24"},{"lineNumber":284,"author":{"gitId":"asaierika"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":285,"author":{"gitId":"asaierika"},"content":"                if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":286,"author":{"gitId":"asaierika"},"content":"                    list.add(new Deadline(content, time, isDone));","lastModifiedDate":"2022-08-24"},{"lineNumber":287,"author":{"gitId":"asaierika"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":288,"author":{"gitId":"asaierika"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":289,"author":{"gitId":"asaierika"},"content":"                throw new ImportDataException();","lastModifiedDate":"2022-08-25"},{"lineNumber":290,"author":{"gitId":"asaierika"},"content":"            } catch (AddToListException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":291,"author":{"gitId":"asaierika"},"content":"                throw e;","lastModifiedDate":"2022-08-25"},{"lineNumber":292,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":293,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":294,"author":{"gitId":"asaierika"},"content":"        } else if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-08-24"},{"lineNumber":295,"author":{"gitId":"asaierika"},"content":"            boolean isDone \u003d input.charAt(2) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":296,"author":{"gitId":"asaierika"},"content":"            String content \u003d input.substring(4, input.length());","lastModifiedDate":"2022-08-24"},{"lineNumber":297,"author":{"gitId":"asaierika"},"content":"            list.add(new Todo(content, isDone));","lastModifiedDate":"2022-08-24"},{"lineNumber":298,"author":{"gitId":"asaierika"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":299,"author":{"gitId":"asaierika"},"content":"            throw new ImportDataException();","lastModifiedDate":"2022-08-25"},{"lineNumber":300,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":301,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":302,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":303,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":304,"author":{"gitId":"asaierika"},"content":"     * Exports tasks from the list into data.txt","lastModifiedDate":"2022-08-24"},{"lineNumber":305,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":306,"author":{"gitId":"asaierika"},"content":"     * @throws ExportDataException","lastModifiedDate":"2022-08-25"},{"lineNumber":307,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":308,"author":{"gitId":"asaierika"},"content":"    private static void exportData() throws ExportDataException {","lastModifiedDate":"2022-08-25"},{"lineNumber":309,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":310,"author":{"gitId":"asaierika"},"content":"            FileWriter fw \u003d new FileWriter(path.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":311,"author":{"gitId":"asaierika"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":312,"author":{"gitId":"asaierika"},"content":"                if (list.get(i) instanceof Todo) {","lastModifiedDate":"2022-08-24"},{"lineNumber":313,"author":{"gitId":"asaierika"},"content":"                    Todo todo \u003d (Todo) list.get(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":314,"author":{"gitId":"asaierika"},"content":"                    fw.write(\"T\") ;","lastModifiedDate":"2022-08-24"},{"lineNumber":315,"author":{"gitId":"asaierika"},"content":"                    fw.write(\"|\" + (todo.isDone() ? \"X\" : \" \")","lastModifiedDate":"2022-08-24"},{"lineNumber":316,"author":{"gitId":"asaierika"},"content":"                            + \"|\"  + todo.getContent() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":317,"author":{"gitId":"asaierika"},"content":"                } else if (list.get(i) instanceof Event) {","lastModifiedDate":"2022-08-24"},{"lineNumber":318,"author":{"gitId":"asaierika"},"content":"                    Event event \u003d (Event) list.get(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":319,"author":{"gitId":"asaierika"},"content":"                    fw.write(\"E\") ;","lastModifiedDate":"2022-08-24"},{"lineNumber":320,"author":{"gitId":"asaierika"},"content":"                    fw.write(\"|\" + (event.isDone() ? \"X\" : \" \")","lastModifiedDate":"2022-08-24"},{"lineNumber":321,"author":{"gitId":"asaierika"},"content":"                            + \"|\"  + event.getContent()","lastModifiedDate":"2022-08-24"},{"lineNumber":322,"author":{"gitId":"asaierika"},"content":"                    + \"|\" + event.getTime() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":323,"author":{"gitId":"asaierika"},"content":"                } else if (list.get(i) instanceof Deadline) {","lastModifiedDate":"2022-08-24"},{"lineNumber":324,"author":{"gitId":"asaierika"},"content":"                    Deadline deadline \u003d (Deadline) list.get(i);","lastModifiedDate":"2022-08-24"},{"lineNumber":325,"author":{"gitId":"asaierika"},"content":"                    fw.write(\"D\") ;","lastModifiedDate":"2022-08-24"},{"lineNumber":326,"author":{"gitId":"asaierika"},"content":"                    fw.write(\"|\" + (deadline.isDone() ? \"X\" : \" \")","lastModifiedDate":"2022-08-24"},{"lineNumber":327,"author":{"gitId":"asaierika"},"content":"                            + \"|\"  + deadline.getContent()","lastModifiedDate":"2022-08-24"},{"lineNumber":328,"author":{"gitId":"asaierika"},"content":"                            + \"|\" + deadline.getTime() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":329,"author":{"gitId":"asaierika"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":330,"author":{"gitId":"asaierika"},"content":"                    throw new ExportDataException();","lastModifiedDate":"2022-08-25"},{"lineNumber":331,"author":{"gitId":"asaierika"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":332,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":333,"author":{"gitId":"asaierika"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":334,"author":{"gitId":"asaierika"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":335,"author":{"gitId":"asaierika"},"content":"            System.out.println(\"Error when writing into data.txt.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":336,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":337,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":338,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":339,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":340,"author":{"gitId":"asaierika"},"content":"     * Main method of Rabbit.","lastModifiedDate":"2022-08-23"},{"lineNumber":341,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":342,"author":{"gitId":"asaierika"},"content":"     * @param args The commandline arguments.","lastModifiedDate":"2022-08-23"},{"lineNumber":343,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":344,"author":{"gitId":"asaierika"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":345,"author":{"gitId":"asaierika"},"content":"        // if directory ./date does not exist, create it","lastModifiedDate":"2022-08-24"},{"lineNumber":346,"author":{"gitId":"asaierika"},"content":"        if (!Files.exists(path.getParent())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":347,"author":{"gitId":"asaierika"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":348,"author":{"gitId":"asaierika"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2022-08-24"},{"lineNumber":349,"author":{"gitId":"asaierika"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":350,"author":{"gitId":"asaierika"},"content":"                System.out.println(\"Error when creating directory ./data.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":351,"author":{"gitId":"asaierika"},"content":"                return;","lastModifiedDate":"2022-08-24"},{"lineNumber":352,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":353,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":354,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":355,"author":{"gitId":"asaierika"},"content":"        // try import data.txt from ./data","lastModifiedDate":"2022-08-24"},{"lineNumber":356,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":357,"author":{"gitId":"asaierika"},"content":"            File data \u003d new File(path.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":358,"author":{"gitId":"asaierika"},"content":"            Scanner s \u003d new Scanner(data); // create a Scanner using the File as the source","lastModifiedDate":"2022-08-24"},{"lineNumber":359,"author":{"gitId":"asaierika"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":360,"author":{"gitId":"asaierika"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":361,"author":{"gitId":"asaierika"},"content":"                importData(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":362,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":363,"author":{"gitId":"asaierika"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":364,"author":{"gitId":"asaierika"},"content":"            System.out.println(\"File data.txt is not found.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":365,"author":{"gitId":"asaierika"},"content":"            System.out.println(\"Create a new data.txt.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":366,"author":{"gitId":"asaierika"},"content":"            // if data.txt is not found, create a new data.txt file under ./data","lastModifiedDate":"2022-08-24"},{"lineNumber":367,"author":{"gitId":"asaierika"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":368,"author":{"gitId":"asaierika"},"content":"                Files.createFile(path);","lastModifiedDate":"2022-08-24"},{"lineNumber":369,"author":{"gitId":"asaierika"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2022-08-24"},{"lineNumber":370,"author":{"gitId":"asaierika"},"content":"                System.out.println(\"Error when creating data.txt.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":371,"author":{"gitId":"asaierika"},"content":"                return;","lastModifiedDate":"2022-08-24"},{"lineNumber":372,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":373,"author":{"gitId":"asaierika"},"content":"        } catch (ImportDataException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":374,"author":{"gitId":"asaierika"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":375,"author":{"gitId":"asaierika"},"content":"        } catch (AddToListException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":376,"author":{"gitId":"asaierika"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":377,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":378,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":379,"author":{"gitId":"asaierika"},"content":"        System.out.println(greet);","lastModifiedDate":"2022-08-18"},{"lineNumber":380,"author":{"gitId":"asaierika"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":381,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":382,"author":{"gitId":"asaierika"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":383,"author":{"gitId":"asaierika"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":384,"author":{"gitId":"asaierika"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":385,"author":{"gitId":"asaierika"},"content":"                System.out.println(bye);","lastModifiedDate":"2022-08-15"},{"lineNumber":386,"author":{"gitId":"asaierika"},"content":"                sc.close();","lastModifiedDate":"2022-08-18"},{"lineNumber":387,"author":{"gitId":"asaierika"},"content":"                break;","lastModifiedDate":"2022-08-15"},{"lineNumber":388,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":389,"author":{"gitId":"asaierika"},"content":"            // the function that the input is calling","lastModifiedDate":"2022-08-18"},{"lineNumber":390,"author":{"gitId":"asaierika"},"content":"            String function \u003d input.substring(0, scanFunction(input));","lastModifiedDate":"2022-08-18"},{"lineNumber":391,"author":{"gitId":"asaierika"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":392,"author":{"gitId":"asaierika"},"content":"                switch (function) {","lastModifiedDate":"2022-08-18"},{"lineNumber":393,"author":{"gitId":"asaierika"},"content":"                case \"list\":","lastModifiedDate":"2022-08-18"},{"lineNumber":394,"author":{"gitId":"asaierika"},"content":"                    list();","lastModifiedDate":"2022-08-17"},{"lineNumber":395,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":396,"author":{"gitId":"asaierika"},"content":"                case \"mark \":","lastModifiedDate":"2022-08-18"},{"lineNumber":397,"author":{"gitId":"asaierika"},"content":"                    mark(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":398,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":399,"author":{"gitId":"asaierika"},"content":"                case \"unmark \":","lastModifiedDate":"2022-08-18"},{"lineNumber":400,"author":{"gitId":"asaierika"},"content":"                    unmark(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":401,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":402,"author":{"gitId":"asaierika"},"content":"                case \"todo \":","lastModifiedDate":"2022-08-18"},{"lineNumber":403,"author":{"gitId":"asaierika"},"content":"                    addToList(TaskType.TODO, input);","lastModifiedDate":"2022-08-18"},{"lineNumber":404,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":405,"author":{"gitId":"asaierika"},"content":"                case \"deadline \":","lastModifiedDate":"2022-08-18"},{"lineNumber":406,"author":{"gitId":"asaierika"},"content":"                    addToList(TaskType.DEADLINE, input);","lastModifiedDate":"2022-08-18"},{"lineNumber":407,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":408,"author":{"gitId":"asaierika"},"content":"                case \"event \":","lastModifiedDate":"2022-08-18"},{"lineNumber":409,"author":{"gitId":"asaierika"},"content":"                    addToList(TaskType.EVENT, input);","lastModifiedDate":"2022-08-18"},{"lineNumber":410,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":411,"author":{"gitId":"asaierika"},"content":"                case \"delete \":","lastModifiedDate":"2022-08-18"},{"lineNumber":412,"author":{"gitId":"asaierika"},"content":"                    delete(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":413,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":414,"author":{"gitId":"asaierika"},"content":"                default:","lastModifiedDate":"2022-08-18"},{"lineNumber":415,"author":{"gitId":"asaierika"},"content":"                    // the user keyed in an invalid input","lastModifiedDate":"2022-08-18"},{"lineNumber":416,"author":{"gitId":"asaierika"},"content":"                    throw new InvalidInputException();","lastModifiedDate":"2022-08-24"},{"lineNumber":417,"author":{"gitId":"asaierika"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":418,"author":{"gitId":"asaierika"},"content":"                exportData();","lastModifiedDate":"2022-08-24"},{"lineNumber":419,"author":{"gitId":"asaierika"},"content":"            } catch (MarkUnmarkException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":420,"author":{"gitId":"asaierika"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":421,"author":{"gitId":"asaierika"},"content":"            } catch (AddToListException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":422,"author":{"gitId":"asaierika"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":423,"author":{"gitId":"asaierika"},"content":"            } catch (DeleteException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":424,"author":{"gitId":"asaierika"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":425,"author":{"gitId":"asaierika"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":426,"author":{"gitId":"asaierika"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":427,"author":{"gitId":"asaierika"},"content":"            } catch (ExportDataException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":428,"author":{"gitId":"asaierika"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":429,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":430,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":431,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":432,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"asaierika":432}},{"path":"src/main/java/RabbitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * the class of exceptions related to Rabbit","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"public abstract class RabbitException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    public RabbitException(){};","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * A class of tasks noted by Rabbit.","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    // the specification of the task.","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    private String content;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    // whether the task is marked as done.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"    private boolean done;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"    /** a constructor of Task","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"     * @param content the content of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"    public Task(String content) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"    /** a constructor of Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"     * @param content the content of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"    public Task(String content, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"        this.done \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"     * returns the content of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"     * @return the content of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"    public String getContent() {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"asaierika"},"content":"        return this.content;","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"asaierika"},"content":"     * returns true if the task is marked as done,","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"asaierika"},"content":"     * false otherwise","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"asaierika"},"content":"     * @return true if the task is marked as done,","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"asaierika"},"content":"     * false otherwise","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"asaierika"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"asaierika"},"content":"        return this.done;","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"asaierika"},"content":"     * marks the task as done.","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"asaierika"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"asaierika"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"asaierika"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"asaierika"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"asaierika"},"content":"        return this.done ? \"[X] \" + this.content : \"[ ] \" + this.content;","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"asaierika":64}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * A subclass of task.","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"     * Constructor of a task to be done.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"     * The task is created as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"     * @param content the task to be done.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    public Todo(String content) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"        super(content);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"     * Constructor of a task to be done.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"     * @param content the task to be done.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"    public Todo(String content, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"        super(content, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"        return this.isDone() ? \"[T][X] \" + this.getContent() : \"[T][ ] \" + this.getContent();","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"blablabla","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"todo play basketball","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"deadline do homework /9am ","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"event meet with friends /3pm ","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"event ","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"event do homework ","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"mark a","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"if [ ! -d \"~/Repositories/ip-fork/bin\" ]","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    mkdir ~/Repositories/ip-fork/bin","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"if ! javac -cp ~/Repositories/ip-fork/src/main/java -Xlint:none -d ~/Repositories/ip-fork/bin ~/Repositories/ip-fork/src/main/java/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"java -classpath ~/Repositories/ip-fork/bin Rabbit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asaierika":5,"-":29}}]

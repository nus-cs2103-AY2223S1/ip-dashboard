[{"path":"src/main/java/AddToListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * the class of exceptions related to","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" * add to list function of Rabbit","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"public class AddToListException extends RabbitException{","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    private Type type;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    public enum Type {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"        FULL, FORMAT;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    public AddToListException(Type type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"        switch(this.type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"            case FULL:","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"                return \"There are too many tasks in the list!\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"                        + \"Don\u0027t exceed 100 please. The poor notebook is full.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"            case FORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"                return \"Do I have to teach you again the format of creating a task?\";","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"        return \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":27}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    private String time;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"    public Deadline(String content, String time) {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"        super(content);","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"        return this.isDone() ? \"[D][X] \" + this.getContent() + \" by \" + this.time","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"                : \"[D][ ] \" + this.getContent() + \" by \" + this.time;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":13}},{"path":"src/main/java/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class DeleteException extends RabbitException {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    public enum Type {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"        FORMAT, INDEX;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    private Type type;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    public DeleteException(Type type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"        switch(this.type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"            case FORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"                return \"Type \u0027delete index\u0027 to delete a task if that\u0027s what you want.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"            case INDEX:","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"                return \"You can\u0027t delete a task that\u0027s not in the list.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"        return \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    private String time;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"    public Event(String content, String time) {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"        super(content);","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"        return this.isDone() ? \"[E][X] \" + this.getContent() + \" at \" + this.time","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"                :\"[E][ ] \" + this.getContent() + \" at \" + this.time;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":13}},{"path":"src/main/java/MarkUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * the class of exceptions related to the mark","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" * and unmark functions of Rabbit","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"public class MarkUnmarkException extends RabbitException{","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    private Type type;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    public enum Type {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"        INDEX, MARKFORMAT, MARKREPEAT,","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"        UNMARKFORMAT, UNMARKREPEAT;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    public MarkUnmarkException(Type type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"    };","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"        switch (this.type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"            case INDEX:","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"                return \"Hey, be careful.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"                        + \"The index must be between 1 and the size of the list, alright?\";","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"            case MARKFORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"                return \"Type \u0027mark + the index of the task\u0027 \"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"                        + \"if that\u0027s what you want.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"            case MARKREPEAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"                return \"What do you mean? This task is already marked as done.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"            case UNMARKFORMAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"                return \"Type \u0027unmark + the index of the task\u0027 if that\u0027s what you want.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"            case UNMARKREPEAT:","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"                return \"What do you mean? This task is not done in the first place.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"        return \"An Unknown exception related to mark and unmark functions occurred.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":34}},{"path":"src/main/java/Rabbit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":" * Rabbit is a short-tempered, annoyed bot that puts in her 30% efforts","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":" *  to help you solve some simple problems as her part-time jpb.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":" *","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":" * @author Jiang Zhimeng","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"public class Rabbit {","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"    private static String greet \u003d \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"            + \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"            + \"Yo...nice to meet you. This is rabbit...Ughhhhh I hate this job.\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"            + \"You can input stuff that you want me to write on this grandma-aged notebook.\\n\"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"            + \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"            + \"1. Type the type of a task followed by its content and time to add it into the list.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"            + \"   There are three types: todo, deadline and event.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"            + \"   - To add todo, type \u0027todo the content\u0027 such as \u0027todo do homework\u0027.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"            + \"   - To add deadline, type \u0027deadline the content /the time\u0027 such as \u0027deadline do homework /9am\u0027.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"            + \"   - To add event, type \u0027event the content /the time\u0027 such as \u0027event do homework /9am\u0027.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"            + \"2. Type \u0027list\u0027 then I\u0027ll show all the existing lines to you.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"            + \"3. Type \u0027mark + the index of an existing task\u0027 to marks it as done. Like \u0027mark 1\u0027.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"            + \"4. Type \u0027unmark + the index of an existing task\u0027 to unmark a task.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"            + \"5. Type \u0027delete + the index of an existing task\u0027 to delete it.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"            + \"-----------------------------------------------------------------------------\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"            + \"Actually why not just do me a favour? Type \u0027bye\u0027 in the console and free both of us.\";","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"    private static String bye \u003d \"Thanks a lot. I\u0027m gonna have some carrot tea later. See you...\";","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"    // initialise the list that stores tasks.","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"    private enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"        TODO, DEADLINE, EVENT;","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"asaierika"},"content":"     *  Rabbit adds the input lines the user types into","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"asaierika"},"content":"     *  a list with a size no more than 100.","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"asaierika"},"content":"     * @param task the type of the task that is to be added","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"asaierika"},"content":"     * @param input the content (and the time) of the task the user inputs","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"asaierika"},"content":"    private static void addToList(TaskType task, String input) throws AddToListException {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"asaierika"},"content":"        if (list.size() \u003d\u003d 100) {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"asaierika"},"content":"            // throws an exception when there are already 100 lines in","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"asaierika"},"content":"            // the list when the user is trying to input a new line.","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"asaierika"},"content":"            throw new AddToListException(AddToListException.Type.FULL);","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"asaierika"},"content":"            // initialise the task to be added","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"asaierika"},"content":"            Task added \u003d new Todo(\"\");","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"asaierika"},"content":"            switch (task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"asaierika"},"content":"                case TODO:","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"asaierika"},"content":"                    added \u003d new Todo(input.substring(5, input.length()));","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"asaierika"},"content":"                    list.add(added);","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"asaierika"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"asaierika"},"content":"                    // the content and time of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"asaierika"},"content":"                    String deadline \u003d input.substring(9, input.length());","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"asaierika"},"content":"                    // the index of the character in the string before which is the content","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"asaierika"},"content":"                    int i \u003d scanContent(deadline);","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"asaierika"},"content":"                    added \u003d new Deadline(deadline.substring(0, i - 1), deadline.substring(i + 1, deadline.length()));","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"asaierika"},"content":"                    list.add(added);","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"asaierika"},"content":"                case EVENT:","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"asaierika"},"content":"                    // the content and time of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"asaierika"},"content":"                    String event \u003d input.substring(6, input.length());","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"asaierika"},"content":"                    // the index of the character in the string before which is the content","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"asaierika"},"content":"                    int j \u003d scanContent(event);","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"asaierika"},"content":"                    added \u003d new Event(event.substring(0, j - 1), event.substring(j + 1, event.length()));","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"asaierika"},"content":"                    list.add(added);","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"asaierika"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"asaierika"},"content":"            System.out.println(\"Okay...noted.\\n\" + added.getContent() + \"...Huh? Hope you can remember it.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"asaierika"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"asaierika"},"content":"            // if the format is wrong, there will be a","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"asaierika"},"content":"            // StringIndexOutOfBoundsException, catch it","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"asaierika"},"content":"            // and throw an AddToListException","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"asaierika"},"content":"            throw new AddToListException(AddToListException.Type.FORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"asaierika"},"content":"     * Rabbit prints the list of current tasks","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"asaierika"},"content":"     * when the user inputs \"list\".","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"asaierika"},"content":"    private static void list() {","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"asaierika"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"asaierika"},"content":"            System.out.println(\"There is no task in the list.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"asaierika"},"content":"        for (int i  \u003d 0; i \u003c list.size(); i++ ) {","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"asaierika"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"asaierika"},"content":"            System.out.println(index + \". \" + list.get(i));","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"asaierika"},"content":"     * marks the task at index i as done","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"asaierika"},"content":"     * @param input the user\u0027s input.","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"asaierika"},"content":"    private static void mark(String input) throws MarkUnmarkException {","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"asaierika"},"content":"            Integer.parseInt(input.substring(5));","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"asaierika"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"asaierika"},"content":"            // if input is mark + a non-integer,","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"asaierika"},"content":"            // throws an exception due to incorrect format","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.MARKFORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"asaierika"},"content":"        int i \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"asaierika"},"content":"        if (i \u003e list.size() || i \u003c\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.INDEX);","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"asaierika"},"content":"        if (list.get(i - 1).isDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.MARKREPEAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"asaierika"},"content":"        System.out.println(\"Okay...task: \" + list.get(i - 1).getContent() + \" is marked as done.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"asaierika"},"content":"        list.get(i - 1).markDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":125,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":126,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"asaierika"},"content":"     * unmarks the task at index i as not done","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"asaierika"},"content":"     * @param input the user\u0027s input.","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"asaierika"},"content":"    private static void unmark(String input) throws MarkUnmarkException {","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"asaierika"},"content":"            Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"asaierika"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"asaierika"},"content":"            // if input is unmark + a non-integer,","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"asaierika"},"content":"            // throws an exception due to incorrect format","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.UNMARKFORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"asaierika"},"content":"        int i \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"asaierika"},"content":"        if (i \u003e list.size() || i \u003c\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.INDEX);","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":144,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"asaierika"},"content":"        if (!list.get(i - 1).isDone()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"asaierika"},"content":"            throw new MarkUnmarkException(MarkUnmarkException.Type.UNMARKREPEAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"asaierika"},"content":"        System.out.println(\"Okay...task: \" + list.get(i - 1).getContent() + \" is unmarked.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"asaierika"},"content":"        list.get(i - 1).unmark();","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":152,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":153,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"asaierika"},"content":"     * scans which function of Rabbit is called by","lastModifiedDate":"2022-08-18"},{"lineNumber":155,"author":{"gitId":"asaierika"},"content":"     * returning the first word of the string.","lastModifiedDate":"2022-08-18"},{"lineNumber":156,"author":{"gitId":"asaierika"},"content":"     * Functions include \"mark, unmark, list, todo,","lastModifiedDate":"2022-08-18"},{"lineNumber":157,"author":{"gitId":"asaierika"},"content":"     * deadline, event and bye.","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"asaierika"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"asaierika"},"content":"     * @return the index of the character in the string","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"asaierika"},"content":"     * before which is the first word","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"asaierika"},"content":"    private static int scanFunction(String input) {","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"asaierika"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"asaierika"},"content":"            if (input.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"asaierika"},"content":"                return i + 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":168,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":169,"author":{"gitId":"asaierika"},"content":"       return input.length();","lastModifiedDate":"2022-08-18"},{"lineNumber":170,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":171,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":172,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":173,"author":{"gitId":"asaierika"},"content":"     * scans the content of the task when the user","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"asaierika"},"content":"     * is trying to create a task","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"asaierika"},"content":"     * @param input the string after the task type in the input","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"asaierika"},"content":"     * @return the index of the character in the string before which","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"asaierika"},"content":"     * is the content, after which is the time, -1 if the format is wrong.","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":180,"author":{"gitId":"asaierika"},"content":"    private static int scanContent(String input) {","lastModifiedDate":"2022-08-18"},{"lineNumber":181,"author":{"gitId":"asaierika"},"content":"        for (int i \u003d 0; i \u003c input.length() - 1; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":182,"author":{"gitId":"asaierika"},"content":"            if (input.charAt(i) \u003d\u003d \u0027 \u0027 \u0026\u0026 input.charAt(i + 1) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"asaierika"},"content":"                return i + 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":185,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":186,"author":{"gitId":"asaierika"},"content":"        return -1;","lastModifiedDate":"2022-08-18"},{"lineNumber":187,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":188,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"asaierika"},"content":"    private static void delete(String input) throws DeleteException{","lastModifiedDate":"2022-08-18"},{"lineNumber":190,"author":{"gitId":"asaierika"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":191,"author":{"gitId":"asaierika"},"content":"            Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":192,"author":{"gitId":"asaierika"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"asaierika"},"content":"            // if input is delete + a non-integer,","lastModifiedDate":"2022-08-18"},{"lineNumber":194,"author":{"gitId":"asaierika"},"content":"            // throws an exception due to incorrect format","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"asaierika"},"content":"            throw new DeleteException(DeleteException.Type.FORMAT);","lastModifiedDate":"2022-08-18"},{"lineNumber":196,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":197,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":198,"author":{"gitId":"asaierika"},"content":"        int i \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2022-08-18"},{"lineNumber":199,"author":{"gitId":"asaierika"},"content":"        if (i \u003e list.size() || i \u003c\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":200,"author":{"gitId":"asaierika"},"content":"            // the index is not within the bound of the list","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"asaierika"},"content":"            throw new DeleteException(DeleteException.Type.INDEX);","lastModifiedDate":"2022-08-18"},{"lineNumber":202,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":203,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":204,"author":{"gitId":"asaierika"},"content":"        System.out.println(\"Okay...task: \" + list.get(i - 1).getContent() + \" is deleted.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"asaierika"},"content":"        list.remove(i - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":206,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":207,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":208,"author":{"gitId":"asaierika"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"asaierika"},"content":"        System.out.println(greet);","lastModifiedDate":"2022-08-18"},{"lineNumber":210,"author":{"gitId":"asaierika"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":211,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":212,"author":{"gitId":"asaierika"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":213,"author":{"gitId":"asaierika"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":214,"author":{"gitId":"asaierika"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":215,"author":{"gitId":"asaierika"},"content":"                System.out.println(bye);","lastModifiedDate":"2022-08-15"},{"lineNumber":216,"author":{"gitId":"asaierika"},"content":"                sc.close();","lastModifiedDate":"2022-08-18"},{"lineNumber":217,"author":{"gitId":"asaierika"},"content":"                break;","lastModifiedDate":"2022-08-15"},{"lineNumber":218,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":219,"author":{"gitId":"asaierika"},"content":"            // the function that the input is calling","lastModifiedDate":"2022-08-18"},{"lineNumber":220,"author":{"gitId":"asaierika"},"content":"            String function \u003d input.substring(0, scanFunction(input));","lastModifiedDate":"2022-08-18"},{"lineNumber":221,"author":{"gitId":"asaierika"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":222,"author":{"gitId":"asaierika"},"content":"                switch (function) {","lastModifiedDate":"2022-08-18"},{"lineNumber":223,"author":{"gitId":"asaierika"},"content":"                    case \"list\":","lastModifiedDate":"2022-08-18"},{"lineNumber":224,"author":{"gitId":"asaierika"},"content":"                        list();","lastModifiedDate":"2022-08-17"},{"lineNumber":225,"author":{"gitId":"asaierika"},"content":"                        continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":226,"author":{"gitId":"asaierika"},"content":"                    case \"mark \":","lastModifiedDate":"2022-08-18"},{"lineNumber":227,"author":{"gitId":"asaierika"},"content":"                        mark(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":228,"author":{"gitId":"asaierika"},"content":"                        continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":229,"author":{"gitId":"asaierika"},"content":"                    case \"unmark \":","lastModifiedDate":"2022-08-18"},{"lineNumber":230,"author":{"gitId":"asaierika"},"content":"                        unmark(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":231,"author":{"gitId":"asaierika"},"content":"                        continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":232,"author":{"gitId":"asaierika"},"content":"                    case \"todo \":","lastModifiedDate":"2022-08-18"},{"lineNumber":233,"author":{"gitId":"asaierika"},"content":"                        addToList(TaskType.TODO, input);","lastModifiedDate":"2022-08-18"},{"lineNumber":234,"author":{"gitId":"asaierika"},"content":"                        continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":235,"author":{"gitId":"asaierika"},"content":"                    case \"deadline \":","lastModifiedDate":"2022-08-18"},{"lineNumber":236,"author":{"gitId":"asaierika"},"content":"                        addToList(TaskType.DEADLINE, input);","lastModifiedDate":"2022-08-18"},{"lineNumber":237,"author":{"gitId":"asaierika"},"content":"                        continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":238,"author":{"gitId":"asaierika"},"content":"                    case \"event \":","lastModifiedDate":"2022-08-18"},{"lineNumber":239,"author":{"gitId":"asaierika"},"content":"                        addToList(TaskType.EVENT, input);","lastModifiedDate":"2022-08-18"},{"lineNumber":240,"author":{"gitId":"asaierika"},"content":"                        continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":241,"author":{"gitId":"asaierika"},"content":"                    case \"delete \":","lastModifiedDate":"2022-08-18"},{"lineNumber":242,"author":{"gitId":"asaierika"},"content":"                        delete(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"asaierika"},"content":"                        continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":244,"author":{"gitId":"asaierika"},"content":"                    default:","lastModifiedDate":"2022-08-18"},{"lineNumber":245,"author":{"gitId":"asaierika"},"content":"                        // the user keyed in an invalid input","lastModifiedDate":"2022-08-18"},{"lineNumber":246,"author":{"gitId":"asaierika"},"content":"                        System.out.println(\"Ummm...what is that? I don\u0027t get it.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":247,"author":{"gitId":"asaierika"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":248,"author":{"gitId":"asaierika"},"content":"            } catch (MarkUnmarkException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":249,"author":{"gitId":"asaierika"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"asaierika"},"content":"            } catch (AddToListException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"asaierika"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":252,"author":{"gitId":"asaierika"},"content":"            } catch (DeleteException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"asaierika"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":254,"author":{"gitId":"asaierika"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":255,"author":{"gitId":"asaierika"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":256,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":257,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"asaierika":257}},{"path":"src/main/java/RabbitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * the class of exceptions related to Rabbit","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"public abstract class RabbitException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    public RabbitException(){};","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":" * A class of tasks noted by Rabbit.","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"    // the specification of the task.","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    private String content;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    // whether the task is marked as done.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"    private boolean done;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"    /** a constructor of Task","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"     * @param content the content of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"    public Task(String content) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"asaierika"},"content":"     * returns the content of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"asaierika"},"content":"     * @return the content of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"asaierika"},"content":"    public String getContent() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"asaierika"},"content":"        return this.content;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"asaierika"},"content":"     * returns true if the task is marked as done,","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"asaierika"},"content":"     * false otherwise","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"asaierika"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"asaierika"},"content":"     * @return true if the task is marked as done,","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"asaierika"},"content":"     * false otherwise","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"asaierika"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"asaierika"},"content":"        return this.done;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"asaierika"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"asaierika"},"content":"     * marks the task as done.","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"asaierika"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"asaierika"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"asaierika"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"asaierika"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"asaierika"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"asaierika"},"content":"        return this.done ? \"[X] \" + this.content : \"[ ] \" + this.content;","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"asaierika":54}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"    public Todo(String content) {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"        super(content);","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"        return this.isDone() ? \"[T][X] \" + this.getContent() : \"[T][ ] \" + this.getContent();","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asaierika"},"content":"blablabla","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"asaierika"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"asaierika"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"asaierika"},"content":"todo play basketball","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"deadline do homework /9am ","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"asaierika"},"content":"event meet with friends /3pm ","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"asaierika"},"content":"event ","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"asaierika"},"content":"event do homework ","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"asaierika"},"content":"mark a","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"asaierika"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"asaierika"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"asaierika"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"asaierika"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"asaierika"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"asaierika"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"asaierika"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"asaierika"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"asaierika":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"asaierika"},"content":"if [ ! -d \"~/Repositories/ip-fork/bin\" ]","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"asaierika"},"content":"    mkdir ~/Repositories/ip-fork/bin","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"asaierika"},"content":"if ! javac -cp ~/Repositories/ip-fork/src/main/java -Xlint:none -d ~/Repositories/ip-fork/bin ~/Repositories/ip-fork/src/main/java/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"asaierika"},"content":"java -classpath ~/Repositories/ip-fork/bin Rabbit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"asaierika"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asaierika":5,"-":29}}]

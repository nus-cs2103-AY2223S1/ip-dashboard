[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"# duke project template","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"changjy44":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"checkstyle {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"changjy44":6,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"D,X,code,2000-12-28 1800","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"T,X,borrow book","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"E,X,dance,dance /at rc4","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"D,X,math,1912-09-09 1900","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"D, ,return book,2020-09-23 2300","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"D, ,marcus,1955-01-01 0900","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"changjy44":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" * Main class encapsulating the logic of the program.","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    private static final String FILE_PATH_DIR \u003d \"data\";","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * Executes the program.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * @param args main method.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Hello from Duke\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        Storage storage \u003d new Storage(FILE_PATH_DIR);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"        Parser parser \u003d new Parser(true);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        while (parser.isAcceptingInput()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"            String input \u003d inputScanner.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"                Command command \u003d parser.parseInput(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"                command.execute(tasks, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"                System.out.println(\"Input String cannot be parsed to Integer.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"changjy44":40,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":" * Exception class for errors in the program.","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"    public DukeException(String errormessage) {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"        super(errormessage);","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"        return this.getMessage();","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"changjy44":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"import duke.commands.NumericCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":" * Class that manages the input text.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    private boolean isAcceptingInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the Parser class.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     * @param isAcceptingInput boolean on whether the Parse should be accepting input.","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    public Parser(boolean isAcceptingInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        this.isAcceptingInput \u003d isAcceptingInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"    public boolean isAcceptingInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        return this.isAcceptingInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"     * Returns the Command object after processing an input text.","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"     * List of commands include: bye, list, mark, unmark, delete, todo, deadline, event.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"     * @param input Input text to be parsed into a command.","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If input text is not in the correct form.","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"    public Command parseInput(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"        String[] inputStringArray \u003d input.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"        String commandText \u003d inputStringArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"        switch (inputStringArray[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"            this.isAcceptingInput \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"            validateArgument(inputStringArray);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"changjy44"},"content":"            int index \u003d Integer.parseInt(inputStringArray[1]) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"changjy44"},"content":"            return new NumericCommand(commandText, index);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"changjy44"},"content":"            validateArgument(inputStringArray);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"            String todoName \u003d combineStringArray(inputStringArray, 1, inputStringArray.length);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"changjy44"},"content":"            return new TodoCommand(todoName);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"changjy44"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"changjy44"},"content":"            validateArgument(inputStringArray);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"changjy44"},"content":"            int bySplitter \u003d Arrays.asList(inputStringArray).indexOf(\"/by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"changjy44"},"content":"            String deadlineName \u003d combineStringArray(inputStringArray, 1, bySplitter);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"changjy44"},"content":"            String deadlineDateString \u003d combineStringArray(inputStringArray, bySplitter + 1, inputStringArray.length);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"changjy44"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(deadlineDateString, formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"changjy44"},"content":"            return new DeadlineCommand(deadlineName, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"changjy44"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"changjy44"},"content":"            validateArgument(inputStringArray);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"changjy44"},"content":"            int atSplitter \u003d Arrays.asList(inputStringArray).indexOf(\"/at\");","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"changjy44"},"content":"            String eventName \u003d combineStringArray(inputStringArray, 1, atSplitter);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"changjy44"},"content":"            String eventLocationString \u003d combineStringArray(inputStringArray, atSplitter + 1, inputStringArray.length);","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"changjy44"},"content":"            return new EventCommand(eventName, eventLocationString);","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"changjy44"},"content":"        case \"find\":","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"changjy44"},"content":"            validateArgument(inputStringArray);","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"changjy44"},"content":"            String searchKeyword \u003d inputStringArray[1];","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"changjy44"},"content":"            return new FindCommand(searchKeyword);","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"changjy44"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"changjy44"},"content":"            throw new DukeException(\"No suitable name for that task\");","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"changjy44"},"content":"    private void validateArgument(String[] inputStringArray) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"changjy44"},"content":"        if (inputStringArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"changjy44"},"content":"            throw new DukeException(\"Please enter an argument after the command\");","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"changjy44"},"content":"    private String combineStringArray(String[] inputStringArray, int start, int end) {","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"changjy44"},"content":"        String[] subArray \u003d Arrays.asList(inputStringArray).subList(start, end).toArray(new String[0]);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"changjy44"},"content":"        String combinedString \u003d Arrays.stream(subArray).reduce(\"\", (a, b) -\u003e a + \" \" + b).trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"changjy44"},"content":"        return combinedString;","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":104}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"import duke.tasks.DeadlinesTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":" * Class that manages the storage of tasks into the text file.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    private String directory;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    private final String fileName \u003d \"/duke.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the Storage class.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     * @param directory Location of the text file.","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    public Storage(String directory) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        this.directory \u003d directory;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"     * Returns the TaskList object represented in the text file.","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"     * @return TaskList object.","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"    public TaskList load() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        File fileDir \u003d new File(directory);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        fileDir.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        File f \u003d new File(directory + fileName);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"            f.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"                taskList.add(parseLine(s.nextLine()));","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"        return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"changjy44"},"content":"    private Task parseLine(String entry) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"changjy44"},"content":"        String[] entryArray \u003d entry.split(\",\");","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"        String taskType \u003d entryArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"changjy44"},"content":"        String name \u003d entryArray[2];","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"        boolean isMarked \u003d entryArray[1].equals(\"X\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"changjy44"},"content":"        Task newTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"changjy44"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"changjy44"},"content":"            newTask \u003d new TodoTask(name);","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"changjy44"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"changjy44"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"changjy44"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(entryArray[3], formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"changjy44"},"content":"            newTask \u003d new DeadlinesTask(name, date);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"changjy44"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"            newTask \u003d new EventTask(name, entryArray[3]);","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"changjy44"},"content":"        if (isMarked) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"changjy44"},"content":"            newTask.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"changjy44"},"content":"        return newTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"changjy44"},"content":"     * Saves all tasks in the TaskList to the text file.","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList containing the list of all the tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"changjy44"},"content":"    public void writeAll(TaskList tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"changjy44"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"changjy44"},"content":"            FileWriter fw \u003d new FileWriter(directory + \"/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"changjy44"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"changjy44"},"content":"                fw.write(tasks.get(i).toCsv() + System.lineSeparator());","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"changjy44"},"content":"            fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"changjy44"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"changjy44"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":96}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" * Task that represent the temporary storage of the Tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the TaskList class.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"     * Adds the task into the TaskList.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"     * Return the Task at the given index.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"     * @param index Position of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"     * @return Task at the position.","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"     * Remove the Task at the given index.","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"     * @param index Position of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"     * Return the size of the TaskList.","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"changjy44"},"content":"     * Return the TaskList with Tasks containing the search keyword.","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"changjy44"},"content":"     * @param searchKeyword Keyword found inside the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"     * @return TaskList with Tasks containing the search keyword.","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"    public TaskList search(String searchKeyword) {","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"changjy44"},"content":"        TaskList taskListWithKeyword \u003d new TaskList();","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"changjy44"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"changjy44"},"content":"            Task task \u003d this.get(i);","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"changjy44"},"content":"            if (task.getName().contains(searchKeyword)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"changjy44"},"content":"                taskListWithKeyword.add(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"        return taskListWithKeyword;","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":73}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" * Commands that represents the bye command.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"     * Runs the bye command by exiting the program.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occurs.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"        storage.writeAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":23}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" * Interface that represents the command to be implemented.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"public interface Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"     * Runs the command with the TaskList and Storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occurs.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":19}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import duke.tasks.DeadlinesTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":" * Command that represents the adding of a deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    private String taskName;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"    private LocalDateTime deadlineDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the deadline command.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"     * @param taskName Name of the deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"     * @param deadlineDate Date of the deadline task.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    public DeadlineCommand(String taskName, LocalDateTime deadlineDate) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"     * Runs the command by adding the deadline task into the tasklist and storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occurs.","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"        DeadlinesTask newTask \u003d new DeadlinesTask(taskName, deadlineDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        System.out.println(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        storage.writeAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":44}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" * Command that represents the adding of a event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    private String eventName;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"    private String eventLocationString;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the event command.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"     * @param eventName Name of the event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"     * @param eventLocationString Location of the event task.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    public EventCommand(String eventName, String eventLocationString) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        this.eventLocationString \u003d eventLocationString;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     * Runs the event command by adding the event task into the tasklist and storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occurs.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"        EventTask newTask \u003d new EventTask(eventName, eventLocationString);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        System.out.println(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        storage.writeAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":42}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" * Command that represents the find command.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    private String searchKeyword;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * Default constructor for the find command.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * @param searchKeyword keyword to be searched in task names.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"    public FindCommand(String searchKeyword) {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"        this.searchKeyword \u003d searchKeyword;","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"     * Runs the find command by printing a list of tasks that match the search keyword.","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occurs.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"        TaskList taskListWithKeyword \u003d tasks.search(searchKeyword);","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        if (taskListWithKeyword.getSize() \u003e 0) {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"            for (int i \u003d 0; i \u003c taskListWithKeyword.getSize(); i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"                int printedIndex \u003d i + 1;","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"                System.out.println(printedIndex + \": \" + taskListWithKeyword.get(i));","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        } else {","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"            System.out.println(\"No matching tasks found!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"changjy44":40}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" * Command that represents the list command.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"     * Runs the list command by listing all tasks in the tasklist.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occur.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"            System.out.println(index + \". \" + tasks.get(i));","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":25}},{"path":"src/main/java/duke/commands/NumericCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" * Command that represents a command with a numeric argument, mark, unmark and delete.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"public class NumericCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    private String command;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the Numeric Command.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * Command can be either mark, unmark or delete.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"     * @param command Command that the numeric command represents","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"     * @param index Numerical argument of the command.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    public NumericCommand(String command, int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     * Runs the numeric command with the task at specified index.","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     * If the command is mark, the task at specified index is marked.","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"     * If the command is unmark, the task at the specified index is unmarked.","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"     * If the command is delete, the task at the specified index is deleted.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occur.","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"            throw new DukeException(\"Please enter between 1 to the last element of the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"        switch (command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"            if (tasks.get(index).isMarked()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"                throw new DukeException(\"That task is already marked!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"            tasks.get(index).markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"            System.out.println(tasks.get(index));","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"            storage.writeAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"            if (!tasks.get(index).isMarked()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"                throw new DukeException(\"That task is already unmarked!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"changjy44"},"content":"            tasks.get(index).unmark();","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"changjy44"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"            System.out.println(tasks.get(index));","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"changjy44"},"content":"            storage.writeAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"changjy44"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"changjy44"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"changjy44"},"content":"            System.out.println(tasks.get(index));","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"changjy44"},"content":"            tasks.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"changjy44"},"content":"            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"changjy44"},"content":"            storage.writeAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"changjy44"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"changjy44"},"content":"        default:","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"changjy44"},"content":"            throw new DukeException(\"Unable to parse that numeric command\");","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":77}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":" * Command that represents the adding of a todo task.","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    private String taskName;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the Todo command.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * @param taskName Name of the todo task.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    public TodoCommand(String taskName) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"     * Runs the todo command by adding the todo task into the tasklist and storage.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"     * @param tasks TaskList that contains the temporary tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"     * @param storage Storage that the tasks are saved at.","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"     * @throws DukeException If any error occur.","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        TodoTask newTask \u003d new TodoTask(taskName);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        System.out.println(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"        storage.writeAll(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"changjy44":37}},{"path":"src/main/java/duke/tasks/DeadlinesTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":" * Task that represents Deadlines.","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"public class DeadlinesTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the Deadlines Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"     * @param name Name of the deadlines task.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"     * @param deadline Date of the deadlines Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    public DeadlinesTask(String name, LocalDateTime deadline) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        return this.deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"     * @return String representation of Deadlines Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        return \"[\" + TaskType.D + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getName()","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"                + \" (by: \" + this.getDeadline().format(formatter) + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"     * Return the String representation of the object in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"     * The following attributes are saved.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"     * Type of task - D,E,T.","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"     * Marked status - X,\" \".","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"     * Name.","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"     * Date of deadline in YYYY-MM-DD HHmm.","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"     * @return String representation of Deadlines Task in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"    public String toCsv() {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"        return TaskType.D + \",\" + this.getStatusIcon() + \",\" + this.getName() + \",\"","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"                + this.getDeadline().format(formatter);","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"changjy44":53}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":" * Task that represents Events.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"    private String time;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the Events Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     * @param time Time of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"    public EventTask(String name, String time) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"        return this.time;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"     * @return String representation of the Events Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        return \"[\" + TaskType.E + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getName()","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"                + \" (at: \" + this.getTime() + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"     * Return the String representation of the object in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"     * The following attributes are saved.","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"     * Type of task - D,E,T.","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"     * Marked status - X,\" \".","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"     * Name.","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"     * Time of the task.","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"     * @return String representation of Events Task in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"    public String toCsv() {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"        return TaskType.E + \",\" + this.getStatusIcon() + \",\" + this.getName() + \",\" + this.getTime();","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"changjy44":48}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":" * Abstract class that represents Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"    private boolean marked;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"    private String name;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the abstract Task class.","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"        this.marked \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    public boolean isMarked() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"        return this.marked;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    public String getName() {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"        return this.name;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     * Returns the status icon of the Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"     * If it is marked, return X. Else return empty string with a space.","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"     * @return Status icon of the Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"        return (marked ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"     * Changes the marked status of Task to true.","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"changjy44"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"changjy44"},"content":"        this.marked \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"changjy44"},"content":"     * Changes the marked status of Task to false.","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"changjy44"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"changjy44"},"content":"        this.marked \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"changjy44"},"content":"     * Return the String representation of the object in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"changjy44"},"content":"     * The following attributes are saved.","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"changjy44"},"content":"     * Type of task - D,E,T.","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"changjy44"},"content":"     * Marked status - X,\" \".","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"changjy44"},"content":"     * Name.","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"changjy44"},"content":"     * Any other additional information.","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"changjy44"},"content":"     * @return String representation of Task in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"changjy44"},"content":"    public abstract String toCsv();","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"changjy44":62}},{"path":"src/main/java/duke/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":" * Enum for the Type of Task. Only can be T, D and E.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"    T,","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"    D,","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"    E","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"changjy44":10}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":" * Task that represents Todo Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"     * Default constructor of the Todo Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"     * @param name Name of the Todo Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"     * @return String representation of the Todo Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"        return \"[\" + TaskType.T + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getName();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"     * Return the String representation of the object in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"     * The following attributes are saved.","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"     * Type of task - D,E,T.","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"     * Marked status - X,\" \".","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"     * Name.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"     * @return String representation of Todo Task in CSV.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"changjy44"},"content":"    public String toCsv() {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"changjy44"},"content":"        return TaskType.T + \",\" + this.getStatusIcon() + \",\" + this.getName();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"changjy44":38}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"import duke.commands.NumericCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"    public void parse_invalidMarkCommand_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"        Parser parser \u003d new Parser(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"            assertEquals(parser.parseInput(\"mark\"), new NumericCommand(\"mark\", 0));","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"            assertEquals(\"Please enter an argument (number) after mark!\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"    public void parse_emptyMarkCommand_exceptionThrown() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"        Parser parser \u003d new Parser(true);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"            assertEquals(parser.parseInput(\"\"), new ByeCommand());","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"            fail();","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"            assertEquals(\"No suitable name for that task\", e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"changjy44":34}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"    public void initialLength_emptyList_lengthIsZero() {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"        Task newTask \u003d new TodoTask(\"todoTask under test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"        assertEquals(tasks.getSize(), 0);","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"    public void addTask_emptyList_lengthIncrease() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"        Task newTask \u003d new TodoTask(\"todoTask under test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"        assertEquals(tasks.getSize(), 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"    public void removeTask_taskList_lengthDecrease() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"        Task newTask \u003d new TodoTask(\"todoTask under test\");","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"        tasks.remove(0);","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"        assertEquals(tasks.getSize(), 0);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"changjy44":34}},{"path":"text-ui-test/complete test/New Text Document.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"todo borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"mark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"unmark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"unmark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"unmark 3","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"changjy44":14}},{"path":"text-ui-test/complete test/expected.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"Hello from duke","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"What can I do for you?","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"changjy44"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"changjy44"},"content":"[T][ ]  borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"changjy44"},"content":"Now you have 1 duke.tasks in the list","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"changjy44"},"content":"1. [T][ ]  borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"changjy44"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"changjy44"},"content":"[D][ ]  return book (by: Sunday)","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"changjy44"},"content":"Now you have 2 duke.tasks in the list","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"changjy44"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"changjy44"},"content":"[E][ ]  project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"changjy44"},"content":"Now you have 3 duke.tasks in the list","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"changjy44"},"content":"1. [T][ ]  borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"changjy44"},"content":"2. [D][ ]  return book (by: Sunday)","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"changjy44"},"content":"3. [E][ ]  project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"changjy44"},"content":"Nice! I\u0027ve marked this task as done","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"[T][X]  borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"Nice! I\u0027ve marked this task as done","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"changjy44"},"content":"[D][X]  return book (by: Sunday)","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"changjy44"},"content":"Nice! I\u0027ve marked this task as done","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"changjy44"},"content":"[E][X]  project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"1. [T][X]  borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"changjy44"},"content":"2. [D][X]  return book (by: Sunday)","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"changjy44"},"content":"3. [E][X]  project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"changjy44"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"changjy44"},"content":"[T][ ]  borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"changjy44"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"changjy44"},"content":"[D][ ]  return book (by: Sunday)","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"changjy44"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"changjy44"},"content":"[E][ ]  project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"changjy44"},"content":"1. [T][ ]  borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"changjy44"},"content":"2. [D][ ]  return book (by: Sunday)","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"changjy44"},"content":"3. [E][ ]  project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"changjy44"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"changjy44":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"changjy44"},"content":"todo borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"changjy44"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"changjy44":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"changjy44"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"changjy44"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"changjy44":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"changjy44"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"changjy44":1,"-":37}}]

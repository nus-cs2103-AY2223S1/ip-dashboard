[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"plugins {","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"repositories {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"dependencies {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"test {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    testLogging {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"        showExceptions true","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"        showCauses true","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"application {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"shadowJar {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"run{","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lkwlkww":62}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"@rem","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"goto fail","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"echo.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"goto fail","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":":execute","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":":end","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":":fail","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":":mainEnd","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":":omega","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lkwlkww":91}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import duke.parse.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" * Main driver class for the Duke / MumBot programme.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     * Stores all the tasks of the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     * Loads a previously stored list of tasks if present - if not,","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"     * creates a new file.","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    public void loadFile() throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        // Handling of the .txt file containing the list of tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"        String filePath \u003d \"/Users/kw/Library/Mobile Documents/com~apple~CloudDocs/MODS/\"","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"                + \"cs2103/projects/ip/data/duke.txt\";","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"        tasks \u003d storage.getTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"        return Parser.settleInput(input, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"     * Returns a message that should be sent to the GUI whenever the","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"     * programme starts.","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"     * @return The welcome message.  */","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"    static public String getWelcomeMsg() {","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"        return \"MumBot: Hi dear, welcome to MumBot! You are precious \u003c3\";","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"     * Saves the current list of tasks and closes the programme.","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"    private void exit() throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"        storage.save();","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"lkwlkww":60,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"public class Launcher {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"lkwlkww":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    public void start(Stage stage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"            duke \u003d new Duke();","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"            stage.show();","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"lkwlkww":35}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" * Handles the actions of the Duke programme before","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" * it is shut down.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a ByeCommand to store the details of the","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     * user\u0027s input and the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"    public ByeCommand(String[] commandArgs, TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"        super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     * Sends a goodbye message to the ui.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    public String performAction() {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"        return \"MumBot: Goodbyeeee sweetheart \u003c3\";","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":" * An abstract class for all Commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    protected String[] commandArgs; // Stores the details of a user\u0027s input.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    protected TaskList tasks; // Stores the TaskList of a user.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a Command to store the details of the","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     * user\u0027s input and the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    public Command(String[] commandArgs, TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     * Performs actions specific to the command, then returns a response message.","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns the message that MumBot should send to the GUI.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    public abstract String performAction();","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":" * Handles the deletion of a task from","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" * a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a DeleteCommand to store the details of","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"     * the user\u0027s input and the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"    public DeleteCommand(String[] commandArgs, TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"        super(commandArgs, tasks);","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns true to indicate that the programme should continue","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     *         prompting for user input.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    public String performAction() {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"        Integer index \u003d Integer.parseInt(this.commandArgs[1]) - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"        tasks.deleteTaskByIndex(index.intValue());","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"        return \"The task has been deleted :(\";","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"lkwlkww":30}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" * Handles the finding of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a FindCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     * @param commandArgs An array of Strings containing information","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     *                    pertaining to this specific mark command.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"     * @param tasks       An `ArrayList\u0026lt;Task\u0026gt;`, containing the","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"     *                    current existing tasks in the programme.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    public FindCommand(String[] commandArgs, TaskList tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"        super(commandArgs, tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * Searches for tasks that fit the search string.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns the message that MumBot should send to the GUI.","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    public String performAction() {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"        TaskList foundTasks \u003d tasks.searchUsingString(commandArgs[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        return \"Sweetie, here is the list of tasks containing your search input \u003c333\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"            + foundTasks.list();","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lkwlkww":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" * Handles the listing of tasks of a user.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a ListCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     * @param commandArgs An array of Strings containing information","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     *                    pertaining to this specific mark command.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"     * @param tasks       An `ArrayList\u0026lt;Task\u0026gt;`, containing the","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"     *                    current existing tasks in the programme.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    public ListCommand(String[] commandArgs, TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"        super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * Lists all the tasks of the user\u0027s TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns the message that MumBot should send to the GUI.","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    public String performAction() {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"        return \"Sweetie, here is the list of tasks that you have \u003c3\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"                + tasks.list();","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":33}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":" * Handles the marking or unmarking of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a MarkCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"     * @param commandArgs An array of Strings containing information","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     *                    pertaining to this specific mark command.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     * @param tasks       An `ArrayList\u0026lt;Task\u0026gt;`, containing the","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"     *                    current existing tasks in the programme.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    public MarkCommand(String[] commandArgs, TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"        super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     * Marks or unmarks a task to denote its completion.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns the message that MumBot should send to the GUI.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    public String performAction() {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"        if (commandArgs[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"            tasks.mark(Integer.parseInt(commandArgs[1]) - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        } else if (this.commandArgs[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"            tasks.unmark(Integer.parseInt(commandArgs[1]) - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"        return \"Your \" + commandArgs[0] + \" command has been carried out! \u003c3\";","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":36}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" * Handles the creating of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a TaskCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     * @param commandArgs An array of Strings containing information","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     *                    pertaining to this specific mark command.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"     * @param tasks       An `ArrayList\u0026lt;Task\u0026gt;`, containing the","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"     *                    current existing tasks in the programme.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    public TaskCommand(String[] commandArgs, TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"        super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * Adds this task to the current list of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns the message that MumBot should send to the GUI.","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    public String performAction() {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        if (this.commandArgs[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"            tasks.addTask(new Task(this.commandArgs[1]), true);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"        } else if (this.commandArgs[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"            tasks.addTask(new Task(this.commandArgs[1], this.commandArgs[2], Task.Type.DEADLINE), true);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        } else if (this.commandArgs[0].equals(\"event\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"            tasks.addTask(new Task(this.commandArgs[1], this.commandArgs[2], Task.Type.EVENT), true);","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"        return \"Your \" + commandArgs[0] + \" command has been carried out! \u003c3\";","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":42}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":" * Handles exceptions for the Duke programme.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a DukeException.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"     * @param message The message to be printed when the Exception is thrown.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"     * The string representation of a DukeException.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"        return \"Hunbun, ERROR!!! \" + getMessage();","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"lkwlkww":24}},{"path":"src/main/java/duke/parse/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.parse;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import duke.command.TaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * Handles the parsing of a user\u0027s inputs and the","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * appropriate responses to make.","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     * Parses a String[] for an \"event\", \"deadline\" or \"todo\" task.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     * @param action The command. Will be ither \"event\", \"deadline\" or \"todo\".","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     * @param splitInput A String[] containing the user\u0027s input separated by a \" \" delimiter. Each separated","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     *                   element is one element in the String[].","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns a new String[] where the first element is the command name, the","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     *         second element is the command description and if the command is a:","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     *          - deadline: The third element is the due date.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"     *          - event: The third element is the location of the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"     * @throws DukeException Throws exceptions if the following conditions","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"     *                       are fulfilled:","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"     *                       - The input has no task description.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"     *                       - The input is for a deadline or event, but it has no task and/or date description.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"     *                       - The input is for a deadline or event, but it has no \u0027 /by \u0027 or \u0027 /at \u0027 keyword -","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"     *                       respectively - in the middle of its task and date description.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    private static String[] parseString(String action, String[] splitInput) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        String[] newSplitInput \u003d new String[3];","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        newSplitInput[0] \u003d action;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"        String[] splitInputWithoutCommand \u003d new String[splitInput.length - 1];","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"            splitInputWithoutCommand[i - 1] \u003d splitInput[i];","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"        String fullTaskDetails \u003d String.join(\" \", splitInputWithoutCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"        if (action.equals(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"            if (fullTaskDetails.equals(\"\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(\"Your todo command has no description!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"            newSplitInput[1] \u003d fullTaskDetails;","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"            String dateDelimiter \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"            if (action.equals(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"                dateDelimiter \u003d \" /at \";","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"            } else if (action.equals(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"                dateDelimiter \u003d \" /by \";","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"            String[] inputArr \u003d fullTaskDetails.split(dateDelimiter);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"            if (!(inputArr.length \u003d\u003d 2)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"                // inputArr.length should be 2 to indicate proper formatting of the command and","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"                // necessary descriptions.","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"                        \"Your \" + action + \" command does not follow proper formatting!\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"                        + \"A \" + action + \" command should follow this convention:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"                        + action + \" \u003ctask description\u003e \" + dateDelimiter + \" \u003cdate description\u003e \u003c3\");","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"            newSplitInput[1] \u003d inputArr[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"            newSplitInput[2] \u003d inputArr[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"        return newSplitInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"     * Performs actions based on the input.","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"     * Commands:","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"     *   - \u0027Bye\u0027: Terminates the programme.","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"     *   - \u0027list\u0027: Lists the current stored tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"     *   - \u0027mark x\u0027, where x is a valid task index: Mark task x as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"     *   - \u0027unmark x\u0027, where x is a valid task index: Mark task x as undone.","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"     *   - \u0027todo *\u0027, where * refers to any input: Create a Todo task.","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"     *   - \u0027event x /at y\u0027, where x and y refers to any input: Create an Event task that will happen at y.","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"     *   - \u0027deadline x /by y\u0027, where x and y refers to any input: Create a Deadline task that is due by y.","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"     * @param input The input given by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"     * @param tasks The TaskList to perform appropriate actions on, after","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"     *              parsing the input.","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns the message that MumBot should output, in response to the input.","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"     * @throws DukeException When there are invalid inputs.","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"    public static String settleInput(String input, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"        String action \u003d splitInput[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"        if (action.equals(\"Bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"            Command command \u003d new ByeCommand(splitInput, tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"            return command.performAction();","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"        } else if (action.equals(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"            // Throw error if the input contains anything other than \u0027list\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"            if (!(splitInput.length \u003d\u003d 1)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(\"\u003c/3 your formatting for the list command is wrong - please just type list!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"            Command command \u003d new ListCommand(splitInput, tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"            return command.performAction();","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"        } else if (","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"                action.equals(\"mark\")","lastModifiedDate":"2022-09-02"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"                || action.equals(\"unmark\")","lastModifiedDate":"2022-09-02"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"        ) {","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"            // Throw an error if the formatting for the \u0027mark\u0027 or \u0027unmark\u0027 command is wrong","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"            if (!(splitInput.length \u003d\u003d 2)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"                        \"Your formatting for the \" + action + \" command is wrong...sigh\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"                        + \"In future, please do: \" + action + \" \u003cindex of task\u003e\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"                        + \"You can do it peepaw!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"            Integer index;","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"            // Throw an error if the character after the \u0027mark\u0027 or \u0027unmark\u0027 string is not an integer","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"                index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(\"Index was not properly specified (has to be an integer) for your \"","lastModifiedDate":"2022-09-02"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"                        + action + \" command!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"            // Throw an error if there isn\u0027t a task with that index","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"            index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"            if (index \u003e tasks.getSize()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(\"There isn\u0027t a task with that index !!!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"lkwlkww"},"content":"            Command command \u003d new MarkCommand(splitInput, tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"            return command.performAction();","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"        } else if (","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"lkwlkww"},"content":"                action.equals(\"event\")","lastModifiedDate":"2022-09-02"},{"lineNumber":143,"author":{"gitId":"lkwlkww"},"content":"                || action.equals(\"deadline\")","lastModifiedDate":"2022-09-02"},{"lineNumber":144,"author":{"gitId":"lkwlkww"},"content":"                || action.equals(\"todo\")","lastModifiedDate":"2022-09-02"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"        ) {","lastModifiedDate":"2022-09-02"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"            String[] newSplitInput \u003d parseString(action, splitInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"            Command command \u003d new TaskCommand(newSplitInput, tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"            return command.performAction();","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"lkwlkww"},"content":"        } else if (action.equals(\"find\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"lkwlkww"},"content":"            // Throw an error  if the formatting for the \u0027find\u0027 command is wrong","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"            if (!(splitInput.length \u003d\u003d 2)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"                        \"Your formatting for the \" + action + \" command is wrong!!\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":155,"author":{"gitId":"lkwlkww"},"content":"                        + \"In future, please do: \" + action + \" \u003csearch string\u003e\");","lastModifiedDate":"2022-09-02"},{"lineNumber":156,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"lkwlkww"},"content":"            Command command \u003d new FindCommand(splitInput, tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"lkwlkww"},"content":"            return command.performAction();","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"lkwlkww"},"content":"        } else if (action.equals(\"delete\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"lkwlkww"},"content":"            // Throw an error if the formatting for the \u0027delete\u0027 command is wrong","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"lkwlkww"},"content":"            if (!(splitInput.length \u003d\u003d 2)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"lkwlkww"},"content":"                        \"Your formatting for the \" + action + \" command is wrong...sigh\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":167,"author":{"gitId":"lkwlkww"},"content":"                        + \"In future, please do: \" + action + \" \u003cindex of task\u003e\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":168,"author":{"gitId":"lkwlkww"},"content":"                        + \"You can do it peepaw!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":169,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"lkwlkww"},"content":"            Integer index;","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"lkwlkww"},"content":"            // Throw an error if the character after the \u0027delete\u0027 string is not an integer","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"lkwlkww"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"lkwlkww"},"content":"                index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"lkwlkww"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(\"Index was not properly specified (has to be an integer) for your \"","lastModifiedDate":"2022-09-02"},{"lineNumber":177,"author":{"gitId":"lkwlkww"},"content":"                        + action + \" command!\");","lastModifiedDate":"2022-09-02"},{"lineNumber":178,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":179,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"            // Throw an error if there isn\u0027t a task with that index","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"lkwlkww"},"content":"            index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"lkwlkww"},"content":"            if (index \u003e tasks.getSize()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"lkwlkww"},"content":"                throw new DukeException(\"There isn\u0027t a task with that index !!!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":186,"author":{"gitId":"lkwlkww"},"content":"            Command command \u003d new DeleteCommand(splitInput, tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":187,"author":{"gitId":"lkwlkww"},"content":"            return command.performAction();","lastModifiedDate":"2022-08-25"},{"lineNumber":188,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":189,"author":{"gitId":"lkwlkww"},"content":"            return \"Your input is not recognised :(. It has to start with a command \"","lastModifiedDate":"2022-09-09"},{"lineNumber":190,"author":{"gitId":"lkwlkww"},"content":"                    + \"(todo, deadline, event, mark, unmark, list, Bye)\";","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"lkwlkww":193}},{"path":"src/main/java/duke/storage/CreateFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import duke.Main;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" * Creates a txt file that should eventually be used for","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * the writing of a `TaskList` - in String format - to itself.","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * Note that this class is package-private.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"class CreateFile {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     * Creates a file in the specified location.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * @param filePath The location that the file should be created in.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * @throws DukeException Throws a DukeException if an IOException is caught.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    public static void makeFile(String filePath) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"            throw new DukeException(\"Honey! There was a problem with creating or obtaining \"","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"                    + \"your list of tasks at \" + filePath + \" ! :(\");","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lkwlkww":35}},{"path":"src/main/java/duke/storage/LoadFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.io.File;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" * Assists with loading .txt file containing a `TaskList` in String","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" * format.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * Note that this class is package-private.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"class LoadFile {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     * Parses a task in String format into a `Task`","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     * format, and returns it.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * @param taskString The task in String format.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     * @return The task converted to a `Task` format.","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    private static Task parseTaskString(String taskString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"        String taskType \u003d taskString.substring(1, 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"        String taskDescription;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        String dateDescription;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"        if (taskType.equals(\"T\")) { // Task is a Todo","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"            taskDescription \u003d taskString.substring(7);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"            return new Task(taskDescription);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"            // Setting the appropriate dateDelimiter.","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"            String dateDelimiter;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"            boolean isDeadline \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"            if (taskType.equals(\"D\")) { // Task is a Deadline","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"                dateDelimiter \u003d \" \\\\(by: \";","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"                isDeadline \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"            } else { // Task is an Event","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"                dateDelimiter \u003d \" \\\\(at: \";","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"            /* Getting the appropriate descriptions after splitting the","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"            task in String format by the dateDelimiter. */","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"            String[] inputArr \u003d taskString.split(dateDelimiter);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"            taskDescription \u003d inputArr[0].substring(7);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"            dateDescription \u003d inputArr[1].substring(0, inputArr[1].length() - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"            return (new Task(taskDescription, dateDescription, (","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"                            isDeadline ? Task.Type.DEADLINE : Task.Type.EVENT)));","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"     * Loads a .txt file of tasks, converts it to a \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"     * and returns it.","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"     * @param filePath The location of the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"     * @return The `TaskList` converted from the .txt file.","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"     * @throws DukeException Throws an exception if an IOException is caught.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"    public static TaskList load(String filePath) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"                Task task \u003d parseTaskString(taskString);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"                tasks.addTask(task, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"            throw new DukeException(\"Honnney! There was a problem with loading your list \"","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"                    + \"of tasks from \" + filePath + \"! :,(\");","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"        return tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lkwlkww":82}},{"path":"src/main/java/duke/storage/SaveFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" * Assists with the saving of a `TaskList` to a txt format.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" * Note that this class is package-private.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"class SaveFile {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     * Writes a `TaskList` to a txt file.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     * @param tasks The `TaskList` to write.","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     * @param filePath The location of the file to write to.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"     * @throws DukeExceception Throws a DukeException if there is an IOException","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     *                         during the filewriting process.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    public static void save(TaskList tasks, String filePath) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"                writer.write(task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"                writer.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"            writer.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"            throw new DukeException(\"Honey! There was a problem with saving your list of \"","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"                    + \"tasks to \" + filePath + \" ! :(\");","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lkwlkww":40}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" * Handles the creating, loading and saving of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     * Stores the path of the .txt file to store","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     * a user\u0027s tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    private String filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     * Stores a user\u0027s list of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a Storage object.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"     * @param filePath The path of the .txt file to store a","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"     *                 user\u0027s tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"        // Create the .txt file if it hasn\u0027t already been created.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"        CreateFile.makeFile(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"        /* Load the .txt file, and get the list of tasks if the .txt","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"           file contains any data. */","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        tasks \u003d LoadFile.load(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"     * Gets the current tasks stored in this Storage object.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"        return tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"     * Saves the current tasks to a .txt file, and store it","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"     * in filePath.","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"        SaveFile.save(tasks, filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"lkwlkww":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" * Handles the initialising of Tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"     * Determines the type that this task is.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    public enum Type {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"        TODO,","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"        EVENT,","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"        DEADLINE;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    protected String taskDescription;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    protected String miscDescription;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    protected LocalDate taskDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    protected boolean hasDateTime \u003d false; // Changed to true if the task is linked to a LocalDateTime dateTime","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    private Type taskType;","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"     * Constructor for a TODO task.","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"     * @param taskDescription The main description for the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"        this.taskType \u003d Type.TODO;","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"     * Constructor for a DEADLINE or EVENT task.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"     * @param taskDescription The main description for the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"     * @param miscDescription The miscellaneous description for the task.","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"     * @param taskType        A Type Enum specifying it the task is a DEADLINE","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"     *                        or a EVENT.","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"    public Task(String taskDescription, String miscDescription, Type taskType) {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        if (taskType.equals(Type.DEADLINE)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"            /* If miscDescription is of a particular format, then convert it into a LocalDateTime object.","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"            If not, then the miscDescription is stored as a String. */","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"                LocalDate date \u003d LocalDate.parse(miscDescription, inputFormatter);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"                taskDate \u003d date;","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"                hasDateTime \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"                this.miscDescription \u003d outputFormatter.format(date);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"                this.miscDescription \u003d miscDescription;","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"        } else if (taskType.equals(Type.EVENT)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"            this.miscDescription \u003d miscDescription;","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"        return (\"[\" + (isDone ? \"X\" : \" \") + \"]\");","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"     * Updates the status of the task. If task status","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"     * is already what it\u0027s supposed to be changed to,","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"     * then no change occurs and this functions returns a reminder.","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"     * @param changeTo The status that the task should be changed to.","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"     *                 If true, then isDone is changed to true. If false, then isDone is changed","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"     *                 to false.","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"     * @return         Returns a string that describes the change made/not made.","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"    public String updateStatus(boolean changeTo) {","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"            if (changeTo) {","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"                return (\"Honeypie, this task has already been marked as done!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"                isDone \u003d !isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"                return (\"This task has been successfully marked as not done yet!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"            if (changeTo) {","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"                isDone \u003d !isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"                return (\"This task has been successfully marked as done!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"            } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"                return (\"Honeypie, this task has already been marked as not done yet!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"        case TODO:","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"            return \"[T]\" + getStatusIcon() + \" \" + taskDescription;","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"            return \"[D]\" + getStatusIcon() + \" \" + taskDescription + \" (by: \" + miscDescription + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"        case EVENT:","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"            return \"[E]\" + getStatusIcon() + \" \" + taskDescription + \" (at: \" + miscDescription + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"        default:","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"            return \"\";","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":117}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" * Stores an `ArrayList\u0026lt;Task\u0026rt;` and handles the direct operations","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":" * on it.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"    private ArrayList\u003cTask\u003e tasks; // The list of all tasks of a user.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"     * Initialises a TaskList object with an","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"     * `ArrayList\u0026lt;Task\u0026gt;` of tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"     * Adds a task to the currently stored","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"     * `ArrayList\u0026lt;Task\u0026gt;` of tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"     * @param task      The task to store.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"     * @param isVerbose If true, then outputs a message to the ui. False if otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"    public void addTask(Task task, boolean isVerbose) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"        if (isVerbose) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"            Ui.print(\"Hey sweetie, I\u0027ve added: \u0027\" + task + \"\u0027 to your lists of tasks~\");","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"     * Deletes a task from the currently stored","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"     * `ArrayList\u0026lt;Task\u0026rt;` of tasks, by its index.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"     * @param index The index of the tasks to delete.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    public void deleteTaskByIndex(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"        Task taskToRemove \u003d tasks.get(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        Ui.print(","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"                \"I\u0027ve successfully removed this task:\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"                + taskToRemove","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"                + \"Do your own chores next time hunbun!\"","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"        );","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"     * Returns a list of all the user\u0027s tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"     * @return The list of all tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"    public String list() {","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"            output +\u003d ((","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"                        i + 1)","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"                    + \". \"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"                    + tasks.get(i)","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"                    + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"        return output;","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"     * Marks a task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"    public void mark(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"        Ui.print(task.updateStatus(true));","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"     * Unmarks a task, thus denoting it to be uncompleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"    public void unmark(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"        Ui.print(task.updateStatus(false));","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"     * Returns the `ArrayList\u0026lt;Task\u0026rt;` stored in","lastModifiedDate":"2022-09-02"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"     * this TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"        return tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"     * Returns the number of elements in this object\u0027s","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"     * stored tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"     * Searches through its tasks whos descriptions fit the input String.","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"     * @param searchString The String to be used to search the tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"     * @return A `TaskList\u0026lt;Task\u0026rt;` containing the tasks,","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"    public TaskList searchUsingString(String searchString) {","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"            if (task.taskDescription !\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"                if (task.taskDescription.contains(searchString)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"            } else if (task.miscDescription !\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"                if (task.miscDescription.contains(searchString)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"        return new TaskList(foundTasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"lkwlkww":133}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"    private void flip() {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"        db.flip();","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"        return db;","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"lkwlkww":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mum.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"    public void initialize() throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"    public void setDuke(Duke d) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"        sendSystemMsg(Duke.getWelcomeMsg());","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"        d.loadFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"    private void handleUserInput() throws DukeException, InterruptedException {","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"        );","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"        if (input.equals(\"Bye\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"            System.exit(0);","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"     * Sends a message to the GUI from MumBot.","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"    public void sendSystemMsg(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"                DialogBox.getDukeDialog(message, dukeImage)","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"         );","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"lkwlkww":70}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":" * Handles outputs to the UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":" * @author Kang Wei","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"     * Prints a line break to the ui to signify the end of a message.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"    private static void endMessage() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"        System.out.println(\"-\".repeat(100));","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"     * Prints a message to the ui. Also prints a new line.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    public static void print(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"        endMessage();","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"     * Sets the ui to await the user\u0027s input.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"     * @param sc The Scanner object with which to read the user\u0027s input.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"     * @return Returns the user\u0027s input.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    public static String awaitUserInput(Scanner sc) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        return input;","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"lkwlkww":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"lkwlkww":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"lkwlkww":19}},{"path":"src/test/java/duke/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import duke.task.TaskListStub;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"public class ByeCommandTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  public void initialisationTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    ByeCommand byeCommand \u003d new ByeCommand(","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"        new String[1],","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"        new TaskListStub()","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"        );","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"  @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"  public void performAction_success() {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    String[] commandArgs \u003d new String[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    commandArgs[0] \u003d \"Bye\";","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"    ByeCommand byeCommand \u003d new ByeCommand(commandArgs, new TaskListStub());","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    assertFalse(byeCommand.performAction());","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lkwlkww":24}},{"path":"src/test/java/duke/task/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  public TaskListStub() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    super(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lkwlkww":12}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  public void dummyTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    assertEquals(2, 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"  // Tests if a TaskList can be initialised","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"  public void initialiseTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"  @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"  public void addTask_todo_success() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    tasks.addTask(new TodoTaskStub(), false);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"  @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"  public void getSizeTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"    tasks.addTask(new TodoTaskStub(), false);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"    assertEquals(tasks.getSize(), 1); // addTask_todo_success() shouldve been run, thus size is 1.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lkwlkww":33}},{"path":"src/test/java/duke/task/TodoTaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"public class TodoTaskStub extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"  public TodoTaskStub() {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"    super(\"random todo\");","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"lkwlkww":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"Hi","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"todo sweep room","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"unmark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"deadline eat fruits /by tonight !","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"event breakfast w friends /at my home~","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"mark","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"mark 200","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"mark 1 abc","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"list hello","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"deadline","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"deadline eat eggs","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"event","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"event eat eggs","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"deadline eat chicken /by","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"event eat duck /at","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"deadline sleep /by next year /by tomorrow","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"delete","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"delete 100","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"delete a","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"delete 2","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"Bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"lkwlkww":29}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"#for dir in ../src/main/java/*/; do (","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"#  cd \"$dir\" \u0026\u0026 (","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"#    if ! javac -cp ../src/main/java -Xlint:none -d ../bin \"$dir\"/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"#    then","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"#        echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"#        exit 1","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"#    fi","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"#  )","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"#); done","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"then","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    exit 1","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"fi","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lkwlkww":16,"-":38}}]

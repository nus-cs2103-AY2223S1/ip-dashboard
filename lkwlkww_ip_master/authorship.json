[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import commands.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"/*","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":" * TODO: add exceptions","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":" * - when input for mark or unmark does not contian a proper index ","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":" *   - not int","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":" *   - array does not contain that task in that index","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":" *   - index \u003c\u003d 0","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":" *","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":" * TODO: abstract out status updates from settleInput","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"  /* String ArrayList to store text entered by the user.","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"   * Won\u0027t go past 100 inputs.","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"   */","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"  private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"  /*","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"   * Parses a String[] for an \"event\", \"deadline\" or \"todo\" task.","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"   *","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"   * @param action The command. Will be ither \"event\", \"deadline\" or \"todo\".","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"   * @param splitInput A String[] containing the user\u0027s input separated by a \" \" delimiter. Each separated","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"   * element is one element in the String[].","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"   *","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"   * @return Returns a new String[] where the first element is the command name, the","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"   * second element is the command description and if the command is a:","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"   *  - deadline: The third element is the due date.","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"   *  - event: The third element is the location of the event.","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"   *","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"   * @throws DukeException Throws exceptions if the following conditions","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"   * are fulfilled:","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"   *   - The input has no task description.","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"   *   - The input is for a deadline or event, but it has no task and/or date description.","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"   *   - The input is for a deadline or event, but it has no \u0027 /by \u0027 or \u0027 /at \u0027 keyword -","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"   *   respectively - in the middle of its task and date description.","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"   */","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"  private static String[] parseString(String action, String[] splitInput) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"    String[] newSplitInput \u003d new String[3];","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"    newSplitInput[0] \u003d action;","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"    String[] splitInputWithoutCommand \u003d new String[splitInput.length - 1];","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"      splitInputWithoutCommand[i - 1] \u003d splitInput[i];","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"lkwlkww"},"content":"    String fullTaskDetails \u003d String.join(\" \", splitInputWithoutCommand);","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"lkwlkww"},"content":"    if (action.equals(\"todo\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"lkwlkww"},"content":"      if (fullTaskDetails.equals(\"\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"lkwlkww"},"content":"        throw new DukeException(\"Your todo command has no description!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"lkwlkww"},"content":"      newSplitInput[1] \u003d fullTaskDetails;","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"lkwlkww"},"content":"    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"lkwlkww"},"content":"      String dateDelimiter \u003d \"\";","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"lkwlkww"},"content":"      if (action.equals(\"event\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"lkwlkww"},"content":"        dateDelimiter \u003d \" /at \";","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"lkwlkww"},"content":"      } else if (action.equals(\"deadline\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"lkwlkww"},"content":"        dateDelimiter \u003d \" /by \";","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"lkwlkww"},"content":"      String[] inputArr \u003d fullTaskDetails.split(dateDelimiter);","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"lkwlkww"},"content":"      if (!(inputArr.length \u003d\u003d 2)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"lkwlkww"},"content":"        // inputArr.length should be 2 to indicate proper formatting of the command and","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"lkwlkww"},"content":"        // necessary descriptions.","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"lkwlkww"},"content":"        throw new DukeException(","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"lkwlkww"},"content":"            \"Your \" + action + \" command does not follow proper formatting!\\n\" +","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"lkwlkww"},"content":"            \"A \" + action + \" command should follow this convention:\\n\" +","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"lkwlkww"},"content":"            action + \" \u003ctask description\u003e \" + dateDelimiter + \" \u003cdate description\u003e \u003c3\"","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"lkwlkww"},"content":"            );","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"lkwlkww"},"content":"      newSplitInput[1] \u003d inputArr[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"lkwlkww"},"content":"      newSplitInput[2] \u003d inputArr[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"lkwlkww"},"content":"    return newSplitInput;","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"lkwlkww"},"content":"  /*","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"lkwlkww"},"content":"   * Performs actions based on the input.","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"lkwlkww"},"content":"   * Commands:","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"lkwlkww"},"content":"   *   - \u0027Bye\u0027: Terminates the programme.","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"lkwlkww"},"content":"   *   - \u0027list\u0027: Lists the current stored tasks.","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"lkwlkww"},"content":"   *   - \u0027mark x\u0027, where x is a valid task index: Mark task x as done.","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"lkwlkww"},"content":"   *   - \u0027unmark x\u0027, where x is a valid task index: Mark task x as undone.","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"lkwlkww"},"content":"   *   - \u0027todo *\u0027, where * refers to any input: Create a Todo task.","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"lkwlkww"},"content":"   *   - \u0027event x /at y\u0027, where x and y refers to any input: Create an Event task that will happen at y.","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"lkwlkww"},"content":"   *   - \u0027deadline x /by y\u0027, where x and y refers to any input: Create a Deadline task that is due by y.","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"lkwlkww"},"content":"   *","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"lkwlkww"},"content":"   * @param input The input given by the user.","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"lkwlkww"},"content":"   *","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"lkwlkww"},"content":"   * @return Returns true if the programme should continue prompting the user","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"lkwlkww"},"content":"   * for inputs. Returns false if the programme is to be terminated.","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"lkwlkww"},"content":"   */","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"lkwlkww"},"content":"  private static boolean settleInput(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"lkwlkww"},"content":"    String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"lkwlkww"},"content":"    String action \u003d splitInput[0];","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"lkwlkww"},"content":"    if (action.equals(\"Bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":106,"author":{"gitId":"lkwlkww"},"content":"      Command command \u003d new ByeCommand(splitInput, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"lkwlkww"},"content":"      return command.performAction();","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"lkwlkww"},"content":"    } else if (action.equals(\"list\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"lkwlkww"},"content":"      // Throw error if the input contains anything other than \u0027list\u0027","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"lkwlkww"},"content":"      if (!(splitInput.length \u003d\u003d 1)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"lkwlkww"},"content":"        throw new DukeException(\"\u003c/3 your formatting for the list command is wrong - please just type list!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"lkwlkww"},"content":"      Command command \u003d new ListCommand(splitInput, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"lkwlkww"},"content":"      return command.performAction();","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"lkwlkww"},"content":"    } else if (","lastModifiedDate":"2022-08-17"},{"lineNumber":118,"author":{"gitId":"lkwlkww"},"content":"        action.equals(\"mark\") ||","lastModifiedDate":"2022-08-17"},{"lineNumber":119,"author":{"gitId":"lkwlkww"},"content":"        action.equals(\"unmark\")","lastModifiedDate":"2022-08-17"},{"lineNumber":120,"author":{"gitId":"lkwlkww"},"content":"        )","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"lkwlkww"},"content":"    {","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"lkwlkww"},"content":"      // Throw an error if the formatting for the \u0027mark\u0027 or \u0027unmark\u0027 command is wrong","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"lkwlkww"},"content":"      if (!(splitInput.length \u003d\u003d 2)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"lkwlkww"},"content":"        throw new DukeException(","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"lkwlkww"},"content":"            \"Your formatting for the \" + action + \" command is wrong...sigh\\n\" +","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"lkwlkww"},"content":"            \"In future, please do: \" + action + \" \u003cindex of task\u003e\\n\" +","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"lkwlkww"},"content":"            \"You can do it peepaw!\"","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"lkwlkww"},"content":"            );","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":130,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":131,"author":{"gitId":"lkwlkww"},"content":"      Integer index;","lastModifiedDate":"2022-08-19"},{"lineNumber":132,"author":{"gitId":"lkwlkww"},"content":"      // Throw an error if the character after the \u0027mark\u0027 or \u0027unmark\u0027 string is not an integer","lastModifiedDate":"2022-08-19"},{"lineNumber":133,"author":{"gitId":"lkwlkww"},"content":"      try {","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"lkwlkww"},"content":"        index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"lkwlkww"},"content":"      } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"lkwlkww"},"content":"        throw new DukeException(\"Index was not properly specified (has to be an integer) for your \" + action + \" command!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":139,"author":{"gitId":"lkwlkww"},"content":"      // Throw an error if there isn\u0027t a task with that index","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"lkwlkww"},"content":"      index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"lkwlkww"},"content":"      if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"lkwlkww"},"content":"        throw new DukeException(\"There isn\u0027t a task with that index !!!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":143,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":144,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":145,"author":{"gitId":"lkwlkww"},"content":"      Command command \u003d new MarkCommand(splitInput, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"lkwlkww"},"content":"      return command.performAction();","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":148,"author":{"gitId":"lkwlkww"},"content":"    } else if (","lastModifiedDate":"2022-08-17"},{"lineNumber":149,"author":{"gitId":"lkwlkww"},"content":"        action.equals(\"event\") ||","lastModifiedDate":"2022-08-17"},{"lineNumber":150,"author":{"gitId":"lkwlkww"},"content":"        action.equals(\"deadline\") ||","lastModifiedDate":"2022-08-17"},{"lineNumber":151,"author":{"gitId":"lkwlkww"},"content":"        action.equals(\"todo\")","lastModifiedDate":"2022-08-17"},{"lineNumber":152,"author":{"gitId":"lkwlkww"},"content":"        )","lastModifiedDate":"2022-08-17"},{"lineNumber":153,"author":{"gitId":"lkwlkww"},"content":"    {","lastModifiedDate":"2022-08-17"},{"lineNumber":154,"author":{"gitId":"lkwlkww"},"content":"      String[] newSplitInput \u003d parseString(action, splitInput);","lastModifiedDate":"2022-08-17"},{"lineNumber":155,"author":{"gitId":"lkwlkww"},"content":"      Command command \u003d new TaskCommand(newSplitInput, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":156,"author":{"gitId":"lkwlkww"},"content":"      return command.performAction();","lastModifiedDate":"2022-08-17"},{"lineNumber":157,"author":{"gitId":"lkwlkww"},"content":"    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"lkwlkww"},"content":"      throw new DukeException(","lastModifiedDate":"2022-08-19"},{"lineNumber":159,"author":{"gitId":"lkwlkww"},"content":"          \"Your input is not recognised :(. It has to start with a command (todo, deadline, event, mark, unmark, list, Bye)\"","lastModifiedDate":"2022-08-19"},{"lineNumber":160,"author":{"gitId":"lkwlkww"},"content":"          );","lastModifiedDate":"2022-08-19"},{"lineNumber":161,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"lkwlkww"},"content":"  public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":165,"author":{"gitId":"lkwlkww"},"content":"    // Welcome message","lastModifiedDate":"2022-08-14"},{"lineNumber":166,"author":{"gitId":"lkwlkww"},"content":"    System.out.println(\"MumBot: Hi dear! You are precious \u003c3\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":167,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":168,"author":{"gitId":"lkwlkww"},"content":"    /*","lastModifiedDate":"2022-08-14"},{"lineNumber":169,"author":{"gitId":"lkwlkww"},"content":"     * Take in user input.","lastModifiedDate":"2022-08-17"},{"lineNumber":170,"author":{"gitId":"lkwlkww"},"content":"     * All inputs are considered as Strings.","lastModifiedDate":"2022-08-14"},{"lineNumber":171,"author":{"gitId":"lkwlkww"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":172,"author":{"gitId":"lkwlkww"},"content":"    System.out.print(\"You: \");","lastModifiedDate":"2022-08-17"},{"lineNumber":173,"author":{"gitId":"lkwlkww"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-14"},{"lineNumber":174,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":175,"author":{"gitId":"lkwlkww"},"content":"    String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":176,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":177,"author":{"gitId":"lkwlkww"},"content":"    while (true) {","lastModifiedDate":"2022-08-19"},{"lineNumber":178,"author":{"gitId":"lkwlkww"},"content":"      boolean notTerminated;","lastModifiedDate":"2022-08-19"},{"lineNumber":179,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":180,"author":{"gitId":"lkwlkww"},"content":"      try {","lastModifiedDate":"2022-08-19"},{"lineNumber":181,"author":{"gitId":"lkwlkww"},"content":"        notTerminated \u003d settleInput(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":182,"author":{"gitId":"lkwlkww"},"content":"      } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":183,"author":{"gitId":"lkwlkww"},"content":"        System.out.println(e + \"\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":184,"author":{"gitId":"lkwlkww"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2022-08-17"},{"lineNumber":185,"author":{"gitId":"lkwlkww"},"content":"        input \u003d sc.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":186,"author":{"gitId":"lkwlkww"},"content":"        continue;","lastModifiedDate":"2022-08-19"},{"lineNumber":187,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":188,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":189,"author":{"gitId":"lkwlkww"},"content":"      if (notTerminated) {","lastModifiedDate":"2022-08-19"},{"lineNumber":190,"author":{"gitId":"lkwlkww"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2022-08-19"},{"lineNumber":191,"author":{"gitId":"lkwlkww"},"content":"        input \u003d sc.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":192,"author":{"gitId":"lkwlkww"},"content":"      } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":193,"author":{"gitId":"lkwlkww"},"content":"        break;","lastModifiedDate":"2022-08-19"},{"lineNumber":194,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-19"},{"lineNumber":195,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":196,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":197,"author":{"gitId":"lkwlkww"},"content":"    System.exit(0);","lastModifiedDate":"2022-08-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lkwlkww":195,"-":4}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import tasks.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"  public ByeCommand(String[] commandArgs, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  public boolean performAction() {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    System.out.println(\"MumBot: Goodbyeeee sweetheart \u003c3\");","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    return false;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":17}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import tasks.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  protected String[] commandArgs;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  public Command(String[] commandArgs, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    this.commandArgs \u003d commandArgs;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    this.tasks \u003d tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"  /*","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"   * @return Returns true if the programme should continue seeking user input.","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"   * Returns false if the programme is to be terminated.","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"   */","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"  public abstract boolean performAction();","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":23}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import tasks.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"  public ListCommand(String[] commandArgs, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"  public boolean performAction() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    System.out.println(\"Sweetie, here is the list of tasks that you have \u003c3\");","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"    for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"      System.out.println((i + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    System.out.println(\"\");","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"    return true;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":22}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import tasks.Task;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"  public MarkCommand(String[] commandArgs, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"  public boolean performAction() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    if (this.commandArgs[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"      Integer index \u003d Integer.parseInt(this.commandArgs[1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"      Task taskToUpdate \u003d this.tasks.get(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"      System.out.println(taskToUpdate.updateStatus(true) + \"\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    } else if (this.commandArgs[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"      Integer index \u003d Integer.parseInt(this.commandArgs[1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"      Task taskToUpdate \u003d this.tasks.get(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"      System.out.println(taskToUpdate.updateStatus(false) + \"\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"    } //TODO: else throw error","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"    return true;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":27}},{"path":"src/main/java/commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"import exceptions.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"  ","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  public TaskCommand(String[] commandArgs, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    super(commandArgs, tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"  public boolean performAction() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"    if (this.commandArgs[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"      tasks.add(new Todo(this.commandArgs[1]));","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"    } else if (this.commandArgs[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"      tasks.add(new Deadline(this.commandArgs[1], this.commandArgs[2]));","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"    } else if (this.commandArgs[0].equals(\"event\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"      tasks.add(new Event(this.commandArgs[1], this.commandArgs[2]));","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"  System.out.println(\"Hey sweetie, I\u0027ve added: \u0027\" + this.commandArgs[1] + \"\u0027 to your lists of tasks~\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"  return true;","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":28}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package exceptions;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"  public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"    super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"    return \"Hunbun, ERROR!!! \" + getMessage();","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"lkwlkww":13}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"  protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"  public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"    super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":16}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"  ","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"  protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"  public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"    super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"    return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":16}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"  protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"  protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"  public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"    this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"    return (\"[\" + (isDone ? \"X\" : \" \") + \"]\");","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"  /*","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"   * Updates the status of the task. If task status","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"   * is already what it\u0027s supposed to be changed to,","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"   * then no change occurs and this functions returns a reminder.","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"   *","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"   * @param changeTo The status that the task should be changed to.","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"   * If true, then isDone is changed to true. If false, then isDone is changed","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"   * to false.","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"   *","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"   * @return Returns a string that describes the change made/not made.","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"lkwlkww"},"content":"   */","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"lkwlkww"},"content":"  public String updateStatus(boolean changeTo) {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"lkwlkww"},"content":"    if (isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"lkwlkww"},"content":"      if (changeTo) {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"lkwlkww"},"content":"        return (\"Honeypie, this task has already been marked as done!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"lkwlkww"},"content":"      } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"        return (\"This task has been successfully marked as not done yet!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"      if (changeTo) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"lkwlkww"},"content":"        return (\"This task has been successfully marked as done!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"lkwlkww"},"content":"      } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"lkwlkww"},"content":"        return (\"Honeypie, this task has already been marked as not done yet!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"lkwlkww"},"content":"      }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"lkwlkww"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"lkwlkww"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"lkwlkww"},"content":"    return (getStatusIcon() + \" \" + description);","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":49}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"  public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"    super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"lkwlkww":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lkwlkww"},"content":"Hi","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"lkwlkww"},"content":"todo sweep room","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"lkwlkww"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"lkwlkww"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"lkwlkww"},"content":"unmark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"lkwlkww"},"content":"deadline eat fruits /by tonight !","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"lkwlkww"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"lkwlkww"},"content":"event breakfast w friends /at my home~","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"lkwlkww"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"lkwlkww"},"content":"mark","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"lkwlkww"},"content":"mark 200","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"mark 1 abc","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"list hello","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"deadline","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"deadline eat eggs","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"event","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"event eat eggs","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"deadline eat chicken /by","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"event eat duck /at","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"deadline sleep /by next year /by tomorrow","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"Bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"lkwlkww":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"lkwlkww"},"content":"#for dir in ../src/main/java/*/; do (","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"lkwlkww"},"content":"#  cd \"$dir\" \u0026\u0026 (","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"lkwlkww"},"content":"#    if ! javac -cp ../src/main/java -Xlint:none -d ../bin \"$dir\"/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"lkwlkww"},"content":"#    then","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"lkwlkww"},"content":"#        echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"lkwlkww"},"content":"#        exit 1","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"lkwlkww"},"content":"#    fi","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"lkwlkww"},"content":"#  )","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"lkwlkww"},"content":"#); done","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lkwlkww"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"lkwlkww"},"content":"then","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"lkwlkww"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"lkwlkww"},"content":"    exit 1","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"lkwlkww"},"content":"fi","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"lkwlkww"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lkwlkww":16,"-":38}}]

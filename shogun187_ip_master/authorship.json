[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"### duke project template","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it. :grinning:","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"\u003e If you don\u0027t win, you lose. - someone probably","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"Features:","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"- [x] Managing Tasks","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"- [ ] Managing Deadlines","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"Duke frees your mind of having to remember things you need to do. It\u0027s, ","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"- text-based","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"- easy to learn ","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"If you are a **Java programmer**, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"```ruby","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"public class Main {","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"```","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"## Link to this repo","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"Click [here](https://github.com/shogun187/ip)","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"shogun187":26,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"\tid \u0027checkstyle\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"checkstyle {","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"    // NOT \u00278.29\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"\t","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"\tString javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"shogun187":20,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"T~0~TestCase","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"E~1~meeting~2022-06-06","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"D~1~run~2022-06-05","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"shogun187":3}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":" * Deadline class to represent tasks with deadlines.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"    protected String deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    protected LocalDate time;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"     * @param deadline deadline in YYYY-MM-DD format.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"        this.time \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"    public String toWrite() {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"        return String.format(\"D~%s~%s~%s\", (isDone ? \"1\" : \"0\"), description.trim(), deadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":33}},{"path":"src/main/java/Duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shogun187":60}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":" * Main class for Duke application.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"     * @param path filepath of Duke.txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"    public Duke(String path) {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"        storage \u003d new Storage(path);","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"            storage.readFromFile(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"            ui.printfileNotFound();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"     * Returns the response corresponding to user input.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"     * @param command user input.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"     * @return response as a String.","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"        return Parser.parse(command, taskList, ui, storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":40,"-":2}},{"path":"src/main/java/Duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":" * Exception for tasks without a description.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"        return getMessage();","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":15}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":" * Event class to represent tasks with a time attached.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"    protected String timeString;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    protected LocalDate time;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"     * Constructor for an Event.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"     * @param description description of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"     * @param time time of event in YYYY-MM-DD format.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"        this.timeString \u003d time;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"    public String toWrite() {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"        return String.format(\"E~%s~%s~%s\", (isDone ? \"1\" : \"0\"), description.trim(), timeString);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":34}},{"path":"src/main/java/Duke/IllegalIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":" * Exception when index given is out of TaskList bounds.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"public class IllegalIndexException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"    public IllegalIndexException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"        return getMessage();","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":15}},{"path":"src/main/java/Duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":" * Exception when input given by user is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"        return getMessage();","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":15}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shogun187":12}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shogun187":31}},{"path":"src/main/java/Duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"     * Initialises the MainWindow.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke!\\nWhat can I do for you?\\n\", dukeImage));","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"     * Sets the Duke object.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"     * @param d Duke object.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"shogun187"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"shogun187"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"            System.exit(0);","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"shogun187"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shogun187":65}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":" * Parser class deals with making sense of the user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"     * Parses user input and carry out commands accordingly.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"     * @param input input from user.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"     * @param taskList list of tasks in Duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"     * @param ui user interface of Duke application.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"     * @param storage stores the taskList into the hard drive.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"    public static String parse(String input, TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"            //  Bye","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"                return ui.sayBye();","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"            //  List","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"                return ui.list(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"            //  Marking","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"            if ((input.length() \u003e\u003d 4) \u0026\u0026 (input.substring(0, 4).equals(\"mark\"))) {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"                //  error checking","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"                if (input.length() \u003d\u003d 4 || input.substring(5).equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"                    throw new IllegalIndexException(\"OOPS!!! The index of a mark cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"                String remainder \u003d input.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"                int index \u003d Integer.valueOf(remainder) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"                taskList.mark(index);","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"                storage.updateStorage(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"                return ui.markResponse(taskList, index);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"            //  Unmarking","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"            if ((input.length() \u003e\u003d 6) \u0026\u0026 (input.substring(0, 6).equals(\"unmark\"))) {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"                //  error checking","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"                if (input.length() \u003d\u003d 6 || input.substring(7).equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"                    throw new IllegalIndexException(\"OOPS!!! The index of an unmark cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"                String remainder \u003d input.substring(7);","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"                int index \u003d Integer.valueOf(remainder) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"                taskList.unmark(index);","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"                storage.updateStorage(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"                return ui.unmarkResponse(taskList, index);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"shogun187"},"content":"            //  Add Todo Task","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"            if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"                //  error checking","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"                if (input.length() \u003d\u003d 4 || input.substring(5).equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"                    throw new EmptyDescriptionException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"                ToDo todo \u003d new ToDo(input.substring(5));","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"                taskList.addTask(todo);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"                storage.updateStorage(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"                return ui.addResponse(todo, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"            //  Add Deadline Task","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"            if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"shogun187"},"content":"                //  error checking","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"shogun187"},"content":"                if (input.length() \u003d\u003d 8 || input.substring(9).equals(\"\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"shogun187"},"content":"                    throw new EmptyDescriptionException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"shogun187"},"content":"                String remainder \u003d input.substring(9);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"shogun187"},"content":"                String[] arr \u003d remainder.split(\"/by\");","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"shogun187"},"content":"                String description \u003d arr[0].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"shogun187"},"content":"                String deadline \u003d arr[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"shogun187"},"content":"                Deadline deadlineTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"shogun187"},"content":"                taskList.addTask(deadlineTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"shogun187"},"content":"                storage.updateStorage(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"shogun187"},"content":"                return ui.addResponse(deadlineTask, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"shogun187"},"content":"            //  Add Event Task","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"shogun187"},"content":"            if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"shogun187"},"content":"                // error checking","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"shogun187"},"content":"                if (input.length() \u003d\u003d 5 || input.substring(6).equals(\"0\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"shogun187"},"content":"                    throw new EmptyDescriptionException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"shogun187"},"content":"                String remainder \u003d input.substring(6);","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"shogun187"},"content":"                String[] arr \u003d remainder.split(\"/at\");","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"shogun187"},"content":"                String description \u003d arr[0].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"shogun187"},"content":"                String time \u003d arr[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"shogun187"},"content":"                Event event \u003d new Event(description, time);","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"shogun187"},"content":"                taskList.addTask(event);","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"shogun187"},"content":"                storage.updateStorage(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"shogun187"},"content":"                return ui.addResponse(event, taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"shogun187"},"content":"            //  Delete Tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"shogun187"},"content":"            if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"shogun187"},"content":"                String remainder \u003d input.substring(7);","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"shogun187"},"content":"                int index \u003d Integer.valueOf(remainder) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"shogun187"},"content":"                String response \u003d ui.deleteResponse(taskList, index);","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"shogun187"},"content":"                taskList.deleteTask(index);","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"shogun187"},"content":"                storage.updateStorage(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"shogun187"},"content":"                return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"shogun187"},"content":"            //  Find Tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"shogun187"},"content":"            if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"shogun187"},"content":"                String remainder \u003d input.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"shogun187"},"content":"                return ui.find(taskList, remainder);","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"shogun187"},"content":"            //  if loop reaches here, raise error","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"shogun187"},"content":"            throw new InvalidTaskException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"shogun187"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"shogun187"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"shogun187"},"content":"        } catch (IllegalIndexException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"shogun187"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"shogun187"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"shogun187"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"shogun187":115}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":" * Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"    private String path;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"     * @param path filepath of duke.txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"     * Reads the duke.txt file and uploads tasks to TaskList in Duke application.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"     * @param receivingList TaskList to receive tasks from duke.txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"     * @throws FileNotFoundException if duke.txt file does not exist.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"    public void readFromFile(TaskList receivingList) throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"            String[] line \u003d task.split(\"~\");","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"            String label \u003d line[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"            boolean isDone \u003d line[1].equals(\"1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"            String description \u003d line[2];","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"            Task newTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"            switch (line[0]) {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"            case \"T\":","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"                newTask \u003d new ToDo(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"                    newTask.setDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"                receivingList.addTaskWithoutOutput(newTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"            case \"D\":","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"shogun187"},"content":"                newTask \u003d new Deadline(description, line[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"shogun187"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"                    newTask.setDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"                receivingList.addTaskWithoutOutput(newTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"            case \"E\":","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"                newTask \u003d new Event(description, line[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"                    newTask.setDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"                receivingList.addTaskWithoutOutput(newTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"shogun187"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"shogun187"},"content":"                continue;","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"shogun187"},"content":"     * Updates the duke.txt file with TaskList from Duke application.","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"shogun187"},"content":"     * @param list TaskList to be uploaded to duke.txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"shogun187"},"content":"    public void updateStorage(TaskList list) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"shogun187"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"shogun187"},"content":"            FileWriter writer \u003d new FileWriter(path);","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"shogun187"},"content":"            for (int x \u003d 0; x \u003c list.size(); x++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"shogun187"},"content":"                writer.write(list.get(x).toWrite() + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"shogun187"},"content":"            writer.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"shogun187"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"shogun187"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"shogun187":85}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":" * Task class to represent different tasks in Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"        return this.getStatusIcon() + \" \" + description;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"    public abstract String toWrite();","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":38}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":" * List of tasks for Duke application.","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"     * Returns the size of the taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"     * @return size of taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"        return this.list.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"        return this.list.get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"     * Adds task to taskList without any output.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"     * @param task task to be added to taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"    public void addTaskWithoutOutput(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"        list.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"     * Adds task to taskList with output from UI.","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"     * @param task task to be added to taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"        list.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"shogun187"},"content":"     * Deletes task from taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"     * @throws IllegalIndexException if index is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"    public void deleteTask(int index) throws IllegalIndexException {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"            throw new IllegalIndexException(\"Index invalid!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"            list.remove(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"shogun187"},"content":"     * Marks task in taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"shogun187"},"content":"     * @param index index of task to be marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"shogun187"},"content":"     * @throws IllegalIndexException if index is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"shogun187"},"content":"    public void mark(int index) throws IllegalIndexException {","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"shogun187"},"content":"        //  error checking","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"shogun187"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"shogun187"},"content":"            throw new IllegalIndexException(\"Index invalid!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"shogun187"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"shogun187"},"content":"            list.get(index).setDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"shogun187"},"content":"     * Unmarks task in taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"shogun187"},"content":"     * @param index index of task to be unmarked.","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"shogun187"},"content":"     * @throws IllegalIndexException if index is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"shogun187"},"content":"    public void unmark(int index) throws IllegalIndexException {","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"shogun187"},"content":"        //  error checking","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"shogun187"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"shogun187"},"content":"            throw new IllegalIndexException(\"Index invalid!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"shogun187"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"shogun187"},"content":"            list.get(index).setNotDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"shogun187":92}},{"path":"src/main/java/Duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":" * ToDo class to represent tasks to be done as soon as possible.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"     * @param description description of ToDo task.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"    public String toWrite() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"        return String.format(\"T~%s~%s\", (isDone ? \"1\" : \"0\"), description.trim());","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"shogun187":26}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":" * User interface for Duke application.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"     * Constructor for the user interface.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"shogun187"},"content":"     * Returns boolean indicating whether there is further input from the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"shogun187"},"content":"     * @return true if there is further input, else false.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"shogun187"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"shogun187"},"content":"        return sc.hasNextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"shogun187"},"content":"     * Greets user with opening statements.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"shogun187"},"content":"     * @return opening statements.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"shogun187"},"content":"    public String greeting() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"shogun187"},"content":"        return \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"shogun187"},"content":"     * Says bye to user with closing statement.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"shogun187"},"content":"     * @return closing statements.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"shogun187"},"content":"    public String sayBye() {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"shogun187"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"shogun187"},"content":"     * Tells user that file is not found.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"shogun187"},"content":"     * @return error message.","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"shogun187"},"content":"    public String printfileNotFound() {","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"shogun187"},"content":"        return \"File not Found!\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"shogun187"},"content":"     * Outputs list of tasks in Duke application.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"shogun187"},"content":"     * @param taskList taskList from Duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"shogun187"},"content":"     * @return list of tasks in taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"shogun187"},"content":"    public String list(TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"shogun187"},"content":"        String response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"shogun187"},"content":"        for (int x \u003d 0; x \u003c taskList.size(); x++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"shogun187"},"content":"            response +\u003d String.format(\"%s.%s\\n\", x + 1, taskList.get(x).toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"shogun187"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"shogun187"},"content":"     * Outputs response if user adds task to taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"shogun187"},"content":"     * @param addedTask task added to taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"shogun187"},"content":"     * @param taskList taskList from Duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"shogun187"},"content":"     * @return response to added task.","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"shogun187"},"content":"    public String addResponse(Task addedTask, TaskList taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"shogun187"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"shogun187"},"content":"        response +\u003d addedTask + \"\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"shogun187"},"content":"        response +\u003d String.format(\"Now you have %s task(s) in the list\\n\", taskList.size());","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"shogun187"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"shogun187"},"content":"     * Outputs response if user deletes task from taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"shogun187"},"content":"     * @param taskList taskList from Duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"shogun187"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"shogun187"},"content":"     * @return response to deleted task.","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"shogun187"},"content":"    public String deleteResponse(TaskList taskList, int index) {","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"shogun187"},"content":"        String response \u003d \"Noted, I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"shogun187"},"content":"        response +\u003d taskList.get(index).toString() + \"\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"shogun187"},"content":"        response +\u003d String.format(\"Now you have %s task(s) in the list\\n\", taskList.size() - 1);","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"shogun187"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"shogun187"},"content":"     * Outputs response if user marks task on taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"shogun187"},"content":"     * @param taskList taskList from Duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"shogun187"},"content":"     * @param index index of task to be marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"shogun187"},"content":"     * @return response to marked task.","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"shogun187"},"content":"    public String markResponse(TaskList taskList, int index) {","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"shogun187"},"content":"        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"shogun187"},"content":"        response +\u003d String.format(\"%s.%s\\n\", index + 1, taskList.get(index).toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"shogun187"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"shogun187"},"content":"     * Outputs response if user unmarks task on taskList.","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"shogun187"},"content":"     * @param taskList taskList from Duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"shogun187"},"content":"     * @param index index of task to be unmarked.","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"shogun187"},"content":"     * @return response to unmarked task.","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"shogun187"},"content":"    public String unmarkResponse(TaskList taskList, int index) {","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"shogun187"},"content":"        String response \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"shogun187"},"content":"        response +\u003d String.format(\"%s.%s\\n\", index + 1, taskList.get(index).toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"shogun187"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"shogun187"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"shogun187"},"content":"     * Finds tasks in list with matching description.","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"shogun187"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"shogun187"},"content":"     * @param taskList taskList from duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"shogun187"},"content":"     * @param word word to be matched.","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"shogun187"},"content":"     * @return tasks with matching description.","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"shogun187"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"shogun187"},"content":"    public String find(TaskList taskList, String word) {","lastModifiedDate":"2022-08-31"},{"lineNumber":134,"author":{"gitId":"shogun187"},"content":"        String response \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-08-31"},{"lineNumber":135,"author":{"gitId":"shogun187"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":136,"author":{"gitId":"shogun187"},"content":"            if (taskList.get(i).toString().contains(word)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":137,"author":{"gitId":"shogun187"},"content":"                response +\u003d String.format(\"%s.%s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":138,"author":{"gitId":"shogun187"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"shogun187"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"shogun187"},"content":"        return response;","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"shogun187":142}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shogun187":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"shogun187"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"shogun187"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"shogun187"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"shogun187"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"shogun187":19}},{"path":"src/test/java/Duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"import duke.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"    public void deadlineString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"        Deadline d \u003d new Deadline(\"finish homework\", \"2022-06-23\");","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"        assertEquals(\"[D][ ] finish homework (by: Jun 23 2022)\", d.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"shogun187":15}},{"path":"src/test/java/Duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"import duke.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"shogun187"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"shogun187"},"content":"public class EventTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"shogun187"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"shogun187"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"shogun187"},"content":"    public void eventString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"shogun187"},"content":"        Event e \u003d new Event(\"meeting\", \"2022-06-22\");","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"shogun187"},"content":"        assertEquals(\"[E][ ] meeting (at: Jun 22 2022)\", e.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"shogun187"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"shogun187"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"shogun187":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shogun187"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"shogun187"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"shogun187"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"shogun187"},"content":"mark 2","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"shogun187":4}}]

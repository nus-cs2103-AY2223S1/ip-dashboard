[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"checkstyle {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    mainClassName \u003d \"blob.Launcher\"","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    archiveBaseName \u003d \"blob\"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"donljh":22,"-":39}},{"path":"src/main/java/blob/Blob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import blob.commands.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import blob.commands.TaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import blob.exception.BlobException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import blob.exception.ErrorLoadingTaskException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import blob.parser.Parser;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import blob.storage.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import blob.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import blob.ui.TextUi;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":" * The Blob class represents the Blob application, a chatbot to help users remember tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"public class Blob {","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    private final TextUi ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    Blob(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        TaskList taskList1;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        this.ui \u003d new TextUi();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"            taskList1 \u003d storage.loadTaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        } catch (ErrorLoadingTaskException exception) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"            ui.speakToUser(exception.getBlobMessages());","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            taskList1 \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        this.taskList \u003d taskList1;","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     * Ends the Blob interaction.","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    public void end() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        ui.sayGoodbyeToUser();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    public String[] getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"            Command command \u003d parser.parseUserInput(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"            CommandResult result;","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"            if (command.isByeCommand()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"                end();","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"            if (command.isTaskCommand()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"                TaskCommand taskCommand \u003d (TaskCommand) command;","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"                taskCommand.setTaskList(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"                result \u003d taskCommand.execute();","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"                storage.saveTaskList(taskList);","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"                result \u003d command.execute();","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"            return result.getResultMessages();","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        } catch (BlobException exception) {","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"            return exception.getBlobMessages();","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":69}},{"path":"src/main/java/blob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"donljh":12}},{"path":"src/main/java/blob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.ui.MainWindow;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":" * The Main class wraps around the Blob application and provides user with a GUI to interact","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":" * with the application.","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    private final Blob blob \u003d new Blob(\"data/tasks.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBlob(blob);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"donljh":32}},{"path":"src/main/java/blob/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * The ByeCommand class represents the exiting command of the application.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"        super(\"bye\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        return new CommandResult(Messages.MESSAGE_GOODBYE_1, Messages.MESSAGE_GOODBYE_2);","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":21}},{"path":"src/main/java/blob/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The Command class represents an executable command that can be invoked by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    /** The word used to invoke the command */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    public final String COMMAND_WORD;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    protected Command(String commandWord) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"        this.COMMAND_WORD \u003d commandWord;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     * @return A CommandResult object containing the application\u0027s response to the invoked command.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     * Returns true if command is the \u0027bye\u0027 command.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * @return True if command is the \u0027bye\u0027 command","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * Returns true if task is a task command.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"     * @return True if task is a task command","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    public boolean isTaskCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        return this instanceof TaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":39}},{"path":"src/main/java/blob/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The CommandResult Class represents the result that derives from executing","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" * a command in the application","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"public class CommandResult {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    /** The resulting messages that are derived from executing a previous command */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    private final String[] resultMessages;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    public CommandResult(String ...messages) {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"        this.resultMessages \u003d messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * Returns the command result messages.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     * @return The command result messages","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    public String[] getResultMessages() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        return resultMessages;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"donljh":24}},{"path":"src/main/java/blob/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The enum contains all the valid command words that can be used to invoke a command","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    TODO,","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    DEADLINE,","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    EVENT,","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    LIST,","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    DELETE,","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    MARK,","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    UNMARK,","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    FIND,","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    BYE;","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":16}},{"path":"src/main/java/blob/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" * The DeadlineCommand class represents the command to create a deadline task.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class DeadlineCommand extends TaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    /** The priority of the deadline task to be created */","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    private String taskPriority;","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    /** The description of the deadline task to be created */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    /** The string representation of the date of the deadline task to be created */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    private String by;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to add a deadline to the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * @param taskDescription The description of the deadline task to be created.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     * @param by The string representation of the date of the deadline task to be created.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    public DeadlineCommand(String taskPriority, String taskDescription, String by) {","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        super(\"deadline\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        this.taskPriority \u003d taskPriority;","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"            Deadline task \u003d new Deadline(taskDescription, by, taskPriority);","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_TASK_ADDED,","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"                    String.format(\"\\n\\t\\t%s \\n\", task),","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"                    String.format(Messages.MESSAGE_TASK_LIST_SIZE, taskList.getNumberOfTasks()));","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        } catch (InvalidDateFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"            return new CommandResult(exception.getBlobMessages());","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        } catch (InvalidPriorityException exception) {","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"            return new CommandResult(exception.getBlobMessages());","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":51}},{"path":"src/main/java/blob/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * The DeleteCommand class represents the command to delete a task.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class DeleteCommand extends TaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /** The index of the task in the task list to be deleted */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    private int index;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to delete a task from the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task in the task list to be deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        super(\"delete\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"            taskList.deleteTask(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_TASK_DELETED,","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"                    String.format(\"\\n\\t\\t%s \\n\", task));","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_ERROR_TASK_NOT_FOUND);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":37}},{"path":"src/main/java/blob/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.tasks.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" * The EventCommand class represents the command to create an event task.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class EventCommand extends TaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    /** The priority of the event task to be created */","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    private String taskPriority;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    /** The description of the event task to be created */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    /** The string representation of the date of the event task to be created */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    private String at;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to add an event to the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     * @param taskDescription The description of the event task to be created.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * @param at The string representation of the date of the event task to be created.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public EventCommand(String taskPriority, String taskDescription, String at) {","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        super(\"event\");","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        this.taskPriority \u003d taskPriority;","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"            Event task \u003d new Event(taskDescription, at, taskPriority);","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_TASK_ADDED,","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"                    String.format(\"\\n\\t\\t%s \\n\", task),","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"                    String.format(Messages.MESSAGE_TASK_LIST_SIZE, taskList.getNumberOfTasks()));","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        } catch (InvalidDateFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"            return new CommandResult(exception.getBlobMessages());","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        } catch (InvalidPriorityException exception) {","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"            return new CommandResult(exception.getBlobMessages());","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":50}},{"path":"src/main/java/blob/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" * The DeadlineCommand class represents the command to find tasks based on a keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class FindCommand extends TaskCommand {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    /** The keyword to find tasks for */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    private String keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to find tasks that have descriptions","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * matching the input keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     * @param keyword The input keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        super(\"find\");","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        String[] taskList \u003d this.taskList.findTasks(keyword);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        if (taskList.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_NO_TASKS_FOUND);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"            ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"            messages.add(String.format(Messages.MESSAGE_TASKS_FOUND, taskList.length));","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            messages.addAll(List.of(taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"            return new CommandResult(messages.toArray(new String[0]));","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"donljh":41}},{"path":"src/main/java/blob/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The InvalidCommand class represents an invalid command that has been input by the user","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    private final String[] resultMessages;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"     * Returns an InvalidCommand that when executed, returns a CommandResult containing the input","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"     * messages.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"     * @param messages The input messages.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    public InvalidCommand(String ...messages) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"        super(null);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        this.resultMessages \u003d messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"        return new CommandResult(resultMessages);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"donljh":25}},{"path":"src/main/java/blob/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" * The ListCommand class represents a command to list all the tasks that are currently active.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class ListCommand extends TaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to list the tasks in the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"        super(\"list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        messages.add(String.format(Messages.MESSAGE_TASK_LIST_SIZE, taskList.getNumberOfTasks()));","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        messages.addAll(List.of(taskList.listTasks()));","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        return new CommandResult(messages.toArray(new String[0]));","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":29}},{"path":"src/main/java/blob/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * The MarkCommand class represents a command to mark a task to be done.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class MarkCommand extends TaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /** The index of the task in the task list to be marked as done */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    private int index;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to mark a task in the task list as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task in the task list to be marked as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        super(\"mark\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_TASK_MARKED,","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"                    String.format(\"\\n\\t\\t%s \\n\", task));","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_ERROR_TASK_NOT_FOUND);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":37}},{"path":"src/main/java/blob/commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * The TaskCommand class represents a command that interacts with a task list","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * when executed","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    /** The task list that the command will interact with */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    public TaskCommand(String commandWord) {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        super(commandWord);","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     * Sets the task list for the command to interact with","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     * @param taskList The task list to set.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"donljh":25}},{"path":"src/main/java/blob/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import blob.tasks.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" * The TodoCommand class represents the command to create a todo task.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"public class TodoCommand extends TaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    /** The description of the todo task to be created */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    private String taskDescription;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    /** The priority of the todo task to be created */","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    private String taskPriority;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to add a todo to the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     * @param taskDescription The description of the todo task to be created.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public TodoCommand(String taskPriority, String taskDescription) {","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        super(\"todo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        this.taskPriority \u003d taskPriority;","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"            ToDo task \u003d new ToDo(taskDescription, taskPriority);","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_TASK_ADDED,","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"                    String.format(\"\\n\\t\\t%s \\n\", task),","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"                    String.format(Messages.MESSAGE_TASK_LIST_SIZE, taskList.getNumberOfTasks()));","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        } catch (InvalidPriorityException exception) {","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"            return new CommandResult(exception.getBlobMessages());","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":43}},{"path":"src/main/java/blob/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * The MarkCommand class represents a command to mark a task to be undone.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class UnmarkCommand extends TaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /** The index of the task in the task list to be marked as undone */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    private int index;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * Returns a command that when executed will attempt to mark a task in the task list as undone.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task in the task list to be marked as undone.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        super(\"unmark\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"            task.markAsUndone();","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_TASK_UNMARKED,","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"                    String.format(\"\\n\\t\\t%s \\n\", task));","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"            return new CommandResult(Messages.MESSAGE_ERROR_TASK_NOT_FOUND);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":37}},{"path":"src/main/java/blob/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.common;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * Class containing the reusable messages to print to user","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"public class Messages {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_WELCOME_1 \u003d \"Hello... me Blob...\";","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_WELCOME_2 \u003d \"How can Blob help...?\";","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_GOODBYE_1 \u003d \"Thanks for talking to Blob...\";","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_GOODBYE_2 \u003d \"Blob see you soon...\";","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_TASK_ADDED \u003d \"Blob will remember task...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_TASK_LIST_SIZE \u003d \"Blob now remembers %d tasks...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_INVALID_DATETIME \u003d \"Blob does not understand input datetime...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_INPUT_DATETIME \u003d \"USAGE: Dates have to be in the following formats: \\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"            + \"\\t\u003cyyyy-MM-dd\u003e, \u003cdd-MM-yyyy\u003e, \u003cd MMM yyyy\u003e, \u003cMMM d yyyy\u003e \\n \"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"            + \"\\tOptionally include time as \u003cHH:mm\u003e \";","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_MISSING_TASK_DESCRIPTION \u003d \"Blob needs to know details of task...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_TASK_COMMAND \u003d \"USAGE: todo/event/deadline \u003cpriority\u003e \u003cdescription\u003e (...)\";","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_INVALID_DEADLINE \u003d \"Blob needs to know deadline of your task...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_DEADLINE_COMMAND \u003d \"USAGE: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_INVALID_EVENT \u003d \"Blob needs to know time of your task...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_EVENT_COMMAND \u003d \"USAGE: event \u003cdescription\u003e /at \u003ctime\u003e\";","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_TASK_MARKED \u003d \"Blob congratulates on task well done...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_TASK_UNMARKED \u003d \"Blob will mark as undone...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_MARK_COMMAND \u003d \"USAGE: mark/unmark \u003ctask index\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_TASK_DELETED \u003d \"Ok... Blob forget task...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_DELETE_COMMAND \u003d \"USAGE: delete \u003ctask index\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_MISSING_TASK_INDEX \u003d \"Blob need to know which task index...\";","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_TASK_NOT_FOUND \u003d \"Blob cannot find that task..., maybe task no exist...?\";","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_LOADING_TASK \u003d \"Blob couldn\u0027t load your tasks...\";","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_UNKNOWN_COMMAND \u003d \"Sorry... Blob no understand your command...\";","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_NO_TASKS_FOUND \u003d \"Blob found no tasks...\";","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_TASKS_FOUND \u003d \"Blob found %d tasks...\";","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_MISSING_FIND_KEYWORD \u003d \"Blob needs to know what to find...\";","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_FIND_COMMAND \u003d \"USAGE: find \u003ckeyword\u003e\";","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_INVALID_PRIO \u003d \"Blob does not understand input priority...\";","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_USAGE_INPUT_PRIO \u003d \"USAGE: Priorities have to be in the following formats: \\n\"","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        + \"\\t //h (high), //m (medium), //l (low)\";","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    public static final String MESSAGE_ERROR_MISSING_PRIO \u003d \"Blob needs to know priority of your task...\";","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":41}},{"path":"src/main/java/blob/exception/BlobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The BlobException class represents a type of exception that occurs as a result of interaction","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" * with the Blob application.","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"public abstract class BlobException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"     * Returns the responses to be printed to the user due to the encountered exception.","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"     * @return The responses to be printed to the user due to the encountered exception","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public abstract String[] getBlobMessages();","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":15}},{"path":"src/main/java/blob/exception/ErrorLoadingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.exception;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * The ErrorLoadingTaskException class represents an exception that occurs when the Blob","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * application fails to load user\u0027s saved tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class ErrorLoadingTaskException extends BlobException {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        return new String[] { Messages.MESSAGE_ERROR_LOADING_TASK };","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"donljh":17}},{"path":"src/main/java/blob/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * The InvalidDateFormatException class represents an exception that occurs when an input date or","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * datetime does not meet the required formats.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class InvalidDateFormatException extends BlobException {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        return new String[] { Messages.MESSAGE_ERROR_INVALID_DATETIME,","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"            Messages.MESSAGE_USAGE_INPUT_DATETIME };","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":18}},{"path":"src/main/java/blob/exception/InvalidPriorityException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.exception;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * The InvalidPriorityException class represents an exception that occurs when the user inputs an","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * inappropriate priority for a task.","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class InvalidPriorityException extends BlobException {","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        return new String[] { Messages.MESSAGE_ERROR_INVALID_PRIO,","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"            Messages.MESSAGE_USAGE_INPUT_PRIO };","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"donljh":18}},{"path":"src/main/java/blob/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * The UnknownCommandException class represents an exception that occurs when the input user","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * command does not match any of the application\u0027s accepted commands.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class UnknownCommandException extends BlobException {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        return new String[] {Messages.MESSAGE_ERROR_UNKNOWN_COMMAND};","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":17}},{"path":"src/main/java/blob/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * The DateTimeParser deals with parsing dates and datetimes of different formats","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    /** The list of accepted date formats that the application will parse as input */","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    private final String[] dateFormats \u003d {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"        \"dd-MM-yyyy\",","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        \"yyyy-MM-dd\",","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        \"d MMM yyyy\",","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        \"MMM d yyyy\",","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    /** The list of accepted datetime formats that the application will parse as input */","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    private final String[] dateTimeFormats \u003d {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        \"d MMM yyyy HH:mm\",","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        \"MMM d yyyy HH:mm\",","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    };","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    /** The formatter that will be used to convert parsed date formats into the output format */","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    private final DateTimeFormatter dateFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    /** The formatter that will be used to convert parsed datetime formats into the output format */","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    private final DateTimeFormatter dateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     * Constructs a DateTimeParser that parses strings of different date and datetime formats","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     * into a string of a proper date or datetime format","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    public DateTimeParser() {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        DateTimeFormatterBuilder dateFormatterBuilder \u003d new DateTimeFormatterBuilder().parseCaseInsensitive();","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        for (String dateFormat : dateFormats) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"            dateFormatterBuilder.appendPattern(\"[\" + dateFormat + \"]\");","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        DateTimeFormatterBuilder dateTimeFormatterBuilder \u003d new DateTimeFormatterBuilder().parseCaseInsensitive();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        for (String dateTimeFormat : dateTimeFormats) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"            dateTimeFormatterBuilder.appendPattern(\"[\" + dateTimeFormat + \"]\");","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        this.dateFormatter \u003d dateFormatterBuilder.toFormatter(Locale.ENGLISH);","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"        this.dateTimeFormatter \u003d dateTimeFormatterBuilder.toFormatter(Locale.ENGLISH);","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"     * Returns a string in the appropriate date (\"d MMM yyyy\") or datetime (\"d MMM yyyy H:mm a\") formats.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"     * @param inputDateTime The input datetime to parse.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"     * @return A string in the appropriate date or datetime formats","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"    public String parse(String inputDateTime) throws DateTimeParseException {","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(inputDateTime, dateFormatter);","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"            return parsedDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"            // Try to parse as datetime instead","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(inputDateTime, this.dateTimeFormatter);","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"            return parsedDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"donljh":71}},{"path":"src/main/java/blob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.commands.ByeCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.commands.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import blob.commands.CommandType;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.commands.DeadlineCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import blob.commands.DeleteCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import blob.commands.EventCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import blob.commands.FindCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import blob.commands.InvalidCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import blob.commands.ListCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import blob.commands.MarkCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import blob.commands.TodoCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import blob.commands.UnmarkCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import blob.exception.UnknownCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":" * The Parser class deals with making sense of user commands.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     * Returns a Command after parsing the user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     * @param userInput The user input to parse.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"     * @return the Command object corresponding to the parsed input","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    public Command parseUserInput(String userInput) throws UnknownCommandException {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        String[] deconstructedInput \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        CommandType commandType;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"            commandType \u003d CommandType.valueOf(deconstructedInput[0].toUpperCase());","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        switch (commandType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"            return parseTodo(deconstructedInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"            return parseDeadline(deconstructedInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"            return parseEvent(deconstructedInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        case LIST:","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        case DELETE:","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"            return parseDelete(deconstructedInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"        case MARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"            return parseMark(deconstructedInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"            return parseUnmark(deconstructedInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        case FIND:","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"            return parseFind(deconstructedInput);","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        case BYE:","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"     * Returns a Command based on parsing user input in the context of a TodoCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"     * @param deconstructedInput The deconstructed user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"     * @return A Command based on parsing user input in the context of a TodoCommand","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    private Command parseTodo(String[] deconstructedInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"        if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_TASK_DESCRIPTION,","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_TASK_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"        String[] deconstructedDetails \u003d deconstructedInput[1].trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        if (deconstructedDetails.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_PRIO,","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"                Messages.MESSAGE_USAGE_TASK_COMMAND);","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"        String taskPriority \u003d deconstructedDetails[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"        String taskDescription \u003d deconstructedDetails[1];","lastModifiedDate":"2022-09-07"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"        return new TodoCommand(taskPriority, taskDescription);","lastModifiedDate":"2022-09-07"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"     * Returns a Command based on parsing user input in the context of a DeadlineCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"     * @param deconstructedInput The deconstructed user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"     * @return A Command based on parsing user input in the context of a DeadlineCommand","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"    private Command parseDeadline(String[] deconstructedInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"        if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_TASK_DESCRIPTION,","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_TASK_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"        String[] deconstructedDetails \u003d deconstructedInput[1].trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"        if (deconstructedDetails.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_PRIO,","lastModifiedDate":"2022-09-07"},{"lineNumber":112,"author":{"gitId":"donljh"},"content":"                Messages.MESSAGE_USAGE_TASK_COMMAND);","lastModifiedDate":"2022-09-07"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"        String taskPriority \u003d deconstructedDetails[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"        String[] taskDetails \u003d deconstructedDetails[1].split(\"\\\\s+(/by)\\\\s+\", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"        if (taskDetails.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_INVALID_DEADLINE,","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_DEADLINE_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"        String taskDescription \u003d taskDetails[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"        String taskBy \u003d taskDetails[1];","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"        return new DeadlineCommand(taskPriority, taskDescription, taskBy);","lastModifiedDate":"2022-09-07"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"donljh"},"content":"     * Returns a Command based on parsing user input in the context of an EventCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"donljh"},"content":"     * @param deconstructedInput The deconstructed user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"donljh"},"content":"     * @return A Command based on parsing user input in the context of an EventCommand","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"donljh"},"content":"    private Command parseEvent(String[] deconstructedInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"donljh"},"content":"        if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_TASK_DESCRIPTION,","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_TASK_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":139,"author":{"gitId":"donljh"},"content":"        String[] deconstructedDetails \u003d deconstructedInput[1].trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":140,"author":{"gitId":"donljh"},"content":"        if (deconstructedDetails.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_PRIO,","lastModifiedDate":"2022-09-07"},{"lineNumber":142,"author":{"gitId":"donljh"},"content":"                Messages.MESSAGE_USAGE_TASK_COMMAND);","lastModifiedDate":"2022-09-07"},{"lineNumber":143,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":144,"author":{"gitId":"donljh"},"content":"        String taskPriority \u003d deconstructedDetails[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":145,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":146,"author":{"gitId":"donljh"},"content":"        String[] taskDetails \u003d deconstructedDetails[1].split(\"\\\\s+(/at)\\\\s+\", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":147,"author":{"gitId":"donljh"},"content":"        if (taskDetails.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":148,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_INVALID_EVENT,","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_EVENT_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"donljh"},"content":"        String taskDescription \u003d taskDetails[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":152,"author":{"gitId":"donljh"},"content":"        String taskAt \u003d taskDetails[1];","lastModifiedDate":"2022-09-07"},{"lineNumber":153,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"donljh"},"content":"        return new EventCommand(taskPriority, taskDescription, taskAt);","lastModifiedDate":"2022-09-07"},{"lineNumber":155,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"donljh"},"content":"     * Returns a Command based on parsing user input in the context of a MarkCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"donljh"},"content":"     * @param deconstructedInput The deconstructed user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"donljh"},"content":"     * @return A Command based on parsing user input in the context of a MarkCommand","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"donljh"},"content":"    private Command parseMark(String[] deconstructedInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"donljh"},"content":"        if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_TASK_INDEX,","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_MARK_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"donljh"},"content":"            return new MarkCommand(Integer.parseInt(deconstructedInput[1]) - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"donljh"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_TASK_NOT_FOUND);","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":174,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":175,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":176,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"donljh"},"content":"     * Returns a Command based on parsing user input in the context of an UnmarkCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"donljh"},"content":"     * @param deconstructedInput The deconstructed user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"donljh"},"content":"     * @return A Command based on parsing user input in the context of an UnmarkCommand","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"donljh"},"content":"    private Command parseUnmark(String[] deconstructedInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"donljh"},"content":"        if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_TASK_INDEX,","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_MARK_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"donljh"},"content":"            return new UnmarkCommand(Integer.parseInt(deconstructedInput[1]) - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"donljh"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":191,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_TASK_NOT_FOUND);","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":193,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"donljh"},"content":"     * Returns a Command based on parsing user input in the context of a DeleteCommand.","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"donljh"},"content":"     * @param deconstructedInput The deconstructed user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"donljh"},"content":"     * @return A Command based on parsing user input in the context of a DeleteCommand","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":201,"author":{"gitId":"donljh"},"content":"    private Command parseDelete(String[] deconstructedInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":202,"author":{"gitId":"donljh"},"content":"        if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":203,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_TASK_INDEX,","lastModifiedDate":"2022-08-26"},{"lineNumber":204,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_DELETE_COMMAND);","lastModifiedDate":"2022-08-26"},{"lineNumber":205,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":207,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"donljh"},"content":"            return new DeleteCommand(Integer.parseInt(deconstructedInput[1]) - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"donljh"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-26"},{"lineNumber":210,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_TASK_NOT_FOUND);","lastModifiedDate":"2022-08-26"},{"lineNumber":211,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":212,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":213,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":214,"author":{"gitId":"donljh"},"content":"    private Command parseFind(String[] deconstructedInput) {","lastModifiedDate":"2022-08-27"},{"lineNumber":215,"author":{"gitId":"donljh"},"content":"        if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":216,"author":{"gitId":"donljh"},"content":"            return new InvalidCommand(Messages.MESSAGE_ERROR_MISSING_FIND_KEYWORD,","lastModifiedDate":"2022-08-27"},{"lineNumber":217,"author":{"gitId":"donljh"},"content":"                    Messages.MESSAGE_USAGE_FIND_COMMAND);","lastModifiedDate":"2022-08-27"},{"lineNumber":218,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":219,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":220,"author":{"gitId":"donljh"},"content":"        return new FindCommand(deconstructedInput[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":221,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":222,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":223,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":223}},{"path":"src/main/java/blob/parser/PriorityParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.parser;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.tasks.Priority;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * The PriorityParser deals with parsing priorities of task","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class PriorityParser {","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"     * Parses the given priority and returns a Priority","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"     * @param inputPriority The given priority.","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * @return A Priority based on the parsed input","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public Priority parse(String inputPriority) throws InvalidPriorityException {","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        String cleanedInput \u003d inputPriority.trim().toUpperCase();","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        switch(cleanedInput) {","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        case \"//H\":","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"            return Priority.HIGH;","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        case \"//M\":","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"            return Priority.MED;","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        case \"//L\":","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"            return Priority.LOW;","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        default:","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"            throw new InvalidPriorityException();","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"donljh":35}},{"path":"src/main/java/blob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import blob.exception.ErrorLoadingTaskException;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import blob.tasks.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"import blob.tasks.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"import blob.tasks.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"import blob.tasks.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"import blob.tasks.ToDo;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":" * The Storage class deals with loading and saving tasks from a text file.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    private final Path filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"     * Returns a TaskList based on parsing task data in the specified file path.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     * @return A TaskList based on parsing task data in the specified file path","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     * @throws ErrorLoadingTaskException","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    public TaskList loadTaskList() throws ErrorLoadingTaskException {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"            File taskFile \u003d filePath.toFile();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"            if (!taskFile.createNewFile()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"                Scanner sc \u003d new Scanner(new FileReader(taskFile));","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"                    String[] deconstructedDetails \u003d sc.nextLine().trim().split(\"\\\\s+\\\\|\\\\s+\");","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"                    String priority \u003d deconstructedDetails[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"                    String taskType \u003d deconstructedDetails[1];","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"                    String done \u003d deconstructedDetails[2];","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"                    String description \u003d deconstructedDetails[3];","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"                    Task task \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"                    if (Objects.equals(taskType, \"T\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"                        task \u003d new ToDo(description, \"//\" + priority);","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"                    } else if (Objects.equals(taskType, \"D\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"                        task \u003d new Deadline(description, deconstructedDetails[4], \"//\" + priority);","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"                    } else if (Objects.equals(taskType, \"E\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"                        task \u003d new Event(description, deconstructedDetails[4], \"//\" + priority);","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"                    if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"                        assert task !\u003d null;","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"                        task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"            throw new ErrorLoadingTaskException();","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"            // Improper datetime, do nothing (don\u0027t add to task list)","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"        } catch (InvalidPriorityException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"            // Improper priority, do nothing (don\u0027t add to task list)","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"     * Saves the task information of the given task list into a separate file for storage.","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"     * @param taskList The task list that contains the tasks to be stored.","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"    public void saveTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"            FileWriter taskFileWriter \u003d new FileWriter(filePath.toFile());","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"            for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"                taskFileWriter.write(taskList.getTask(i).toFileString());","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"                taskFileWriter.write(System.lineSeparator());","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"            taskFileWriter.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"            // Do nothing","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"donljh":98}},{"path":"src/main/java/blob/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import blob.parser.DateTimeParser;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" * The Deadline class encapsulates a type of task to be done.","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * A Deadline task is a task that needs to be done before a specific time/date.","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    private String by;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * Constructs a Deadline task with the given description, by date and priority.","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     * @param description The given task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     * @param by The string representation of the given deadline of the task.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     * @param priority The string representing priority to assign to the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     * @throws InvalidDateFormatException","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public Deadline(String description, String by, String priority) throws InvalidDateFormatException,","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"            InvalidPriorityException {","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        super(description, TaskType.DEADLINE, priority);","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"            this.by \u003d new DateTimeParser().parse(by);","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"     * Returns the formatted Event task details to be stored in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"     * @return Formatted Event task details to be stored in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        return super.toFileString() + \" | \" + this.by;","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":53}},{"path":"src/main/java/blob/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import blob.parser.DateTimeParser;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" * The Event class encapsulates a type of task to be done.","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * A Deadline task is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    private String at;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * Constructs an Event task with the given description, at date and priority.","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     * @param description The given task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     * @param at The string representation of the given date or datetime of the task.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     * @throws InvalidDateFormatException","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    public Event(String description, String at, String priority) throws InvalidDateFormatException,","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"            InvalidPriorityException {","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        super(description, TaskType.EVENT, priority);","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"            this.at \u003d new DateTimeParser().parse(at);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), at);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"     * Returns the formatted Event task details to be stored in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"     * @return Formatted Event task details to be stored in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        return super.toFileString() + \" | \" + this.at;","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":52}},{"path":"src/main/java/blob/tasks/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The Priority enum contains the priorities that can be assigned to tasks.","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"public enum Priority {","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    HIGH(\"H\"),","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    MED(\"M\"),","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    LOW(\"L\");","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    private final String abbreviation;","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    Priority(String abbreviation) {","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        this.abbreviation \u003d abbreviation;","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public String getAbbreviation() {","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        return this.abbreviation;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"donljh":20}},{"path":"src/main/java/blob/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import blob.parser.PriorityParser;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" * A task has a string description describing the task to be done, and a boolean indicator to represent","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" * the status of completion of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    protected String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    protected TaskType type;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    protected Priority priority;","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     * Returns a Task given a description, TaskType and priority","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     * @param description The given task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     * @param type The given TaskType.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     * @param priority The given priority.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public Task(String description, TaskType type, String priority) throws InvalidPriorityException {","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        this.priority \u003d new PriorityParser().parse(priority);","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * Returns an icon representing the state of completion of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"     * @return A checkmark icon (✓) if the task is done, and \" \" otherwise","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        return (isDone ? \"\\u2713\" : \" \");","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"        return String.format(\"\u003c%s\u003e[%s][%s] %s\", this.priority.toString(), this.type.getAbbreviation(),","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"                this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"     * Returns the formatted task details for storing in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"     * @return Formatted task details for storing in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"        return String.format(\"%s | %s | %d | %s\", this.priority.getAbbreviation(), this.type.getAbbreviation(),","lastModifiedDate":"2022-09-07"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"                this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":74}},{"path":"src/main/java/blob/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" * The TaskList class represents the task list that keep tracks of the user\u0027s tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    /** The main data structure used to store the user\u0027s tasks */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"     * Marks a task from the task list as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"    public void markTask(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"     * Marks a task from the task list as undone.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"     * @return The number of tasks in the task list","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"     * Returns an array of strings containing every task in output format.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"     * @return An array of strings containing every task in output format","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"    public String[] listTasks() {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"        String[] tasks \u003d new String[taskList.size()];","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"            tasks[i] \u003d String.format(\"%d. %s\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"        return tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"     * Returns a task from the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"     * @return A task from the task list","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"     * Returns an array of strings containing tasks that match the input keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"     * @param keyword The input keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"     * @return An array of strings containing tasks that match the input keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"    public String[] findTasks(String keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"            List\u003cString\u003e deconstructedDescription \u003d Arrays.asList(task.description.split(\"\\\\s+\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"            if (deconstructedDescription.contains(keyword)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"                tasks.add(String.format(\"%d. %s\", i + 1, taskList.get(i).toString()));","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"        return tasks.toArray(new String[0]);","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"     * Returns an array of strings containing every task in storage format.","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"     * @return An array of strings containing every task in storage format.","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"    public String[] listTasksInStorageFormat() {","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"        String[] tasks \u003d new String[taskList.size()];","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"            tasks[i] \u003d taskList.get(i).toFileString();","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"        return tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"donljh":122}},{"path":"src/main/java/blob/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The TaskType enum represents the different types of tasks that are supported by the application.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    TODO(\"T\"),","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    EVENT(\"E\"),","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    DEADLINE(\"D\");","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    private final String abbreviation;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    TaskType(String abbreviation) {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        this.abbreviation \u003d abbreviation;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    public String getAbbreviation() {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        return this.abbreviation;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":21}},{"path":"src/main/java/blob/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidPriorityException;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * The ToDo class encapsulates a type of task to be done.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" * A ToDo task is a task without any date/time attached to it.","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    public ToDo(String description, String priority) throws InvalidPriorityException {","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"        super(description, TaskType.TODO, priority);","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        return super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * Returns the formatted ToDo task details to be stored in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"     * @return Formatted ToDo task details to be stored in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        return super.toFileString();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":33}},{"path":"src/main/java/blob/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":" * The DialogBox class represents the container in which messages are displayed in the GUI.","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     * Constructs a dialog box using the given display image to represent user/application","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"     * messages as given.","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"     * @param img The given display image.","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     * @param text The given list of messages.","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    public DialogBox(Image img, String ...text) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        dialog.setText(Arrays.stream(text).reduce(\"\", (res, line) -\u003e res + line + \"\\n\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"    public static DialogBox getUserDialog(Image img, String text) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"        return new DialogBox(img, text);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"    public static DialogBox getBlobDialog(Image img, String ...text) {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"        var db \u003d new DialogBox(img, text);","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"donljh":67}},{"path":"src/main/java/blob/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"import blob.Blob;","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    private Blob blob;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    private Image blobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/blob.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    public void setBlob(Blob blob) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        this.blob \u003d blob;","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"        String[] responses \u003d blob.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"            DialogBox.getUserDialog(userImage, input),","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"            DialogBox.getBlobDialog(blobImage, responses)","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"donljh":51}},{"path":"src/main/java/blob/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import blob.common.Messages;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" * Text UI of the Blob task manager application","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"public class TextUi {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    /** Divider to separate message instances by the Blob text UI */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    private static final String MESSAGE_DIVIDER \u003d \"\u003d\".repeat(100);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    /** Header to signify the start of a message from the Blob text UI to the user */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    private static final String MESSAGE_HEADER \u003d \"\\u001B[33m\" + \"Blob says: \" + \"\\u001B[0m\";","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    /** Prompt to alert user for input */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    private static final String USER_PROMPT \u003d \"\u003e\u003e \";","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    private final Scanner in;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    public TextUi() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"        this(System.in, System.out);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    private TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"     * Prints the user prompt to prompt user for input","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    public void promptUserInput() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"        out.print(USER_PROMPT);","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"     * Prints the greeting message to the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    public void greetUser() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"        speakToUser(Messages.MESSAGE_WELCOME_1, Messages.MESSAGE_WELCOME_2);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"     * Prints the goodbye message to the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"    public void sayGoodbyeToUser() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"        speakToUser(Messages.MESSAGE_GOODBYE_1, Messages.MESSAGE_GOODBYE_2);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"     * Prints a sequence of strings to the user, encapsulated in a message instance.","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"     * @param content the sequence of strings to be printed","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    public void speakToUser(String ...content) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        System.out.println(\"\\n\" + MESSAGE_DIVIDER);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"        for (int i \u003d 0; i \u003c content.length; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"            System.out.println(\"\\t\" + content[i]);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"        System.out.println(MESSAGE_DIVIDER + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"donljh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"blob.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"486.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"486.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"114.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"582.0\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"donljh":19}},{"path":"src/test/java/blob/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public void newEvent_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"            Task task \u003d new Deadline(\"test task\", \"02/Oct/2000\");","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"            assertArrayEquals(new String[] {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"                \"Blob does not understand input datetime...\",","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"                \"USAGE: Dates have to be in the following formats: \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"                    + \"\\t\u003cyyyy-MM-dd\u003e, \u003cdd-MM-yyyy\u003e, \u003cd MMM yyyy\u003e, \u003cMMM d yyyy\u003e \\n \"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"                    + \"\\tOptionally include time as \u003cHH:mm\u003e \" },","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"                    e.getBlobMessages());","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"            Task task \u003d new Event(\"test task\", \"02 Oct 2000\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            assertEquals(\"[D][ ] test task (by: 2 Oct 2000)\", task.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            assertEquals(\"[D][✓] test task (by: 2 Oct 2000)\", task.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"donljh":41}},{"path":"src/test/java/blob/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import blob.exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"public class EventTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    public void newEvent_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"            Task task \u003d new Event(\"test task\", \"02/Oct/2000\");","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"            assertArrayEquals(new String[] {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"                \"Blob does not understand input datetime...\",","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"                \"USAGE: Dates have to be in the following formats: \\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"                    + \"\\t\u003cyyyy-MM-dd\u003e, \u003cdd-MM-yyyy\u003e, \u003cd MMM yyyy\u003e, \u003cMMM d yyyy\u003e \\n \"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"                    + \"\\tOptionally include time as \u003cHH:mm\u003e \" },","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"                e.getBlobMessages());","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"            Task task \u003d new Event(\"test task\", \"02 Oct 2000\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"            assertEquals(\"[E][ ] test task (at: 2 Oct 2000)\", task.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"            assertEquals(\"[E][✓] test task (at: 2 Oct 2000)\", task.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"        } catch (InvalidDateFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"            fail();","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"donljh":41}},{"path":"src/test/java/blob/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package blob.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"        Task task \u003d new ToDo(\"test task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"        assertEquals(task.toString(), \"[T][ ] test task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        assertEquals(task.toString(), \"[T][✓] test task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    public void testToFileString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"        ToDo task \u003d new ToDo(\"test task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        assertEquals(task.toFileString(), \"T | 0 | test task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        assertEquals(task.toFileString(), \"T | 1 | test task\");","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"donljh":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"blob","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"todo","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"todo ToDo task1","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"event","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"event Event task2","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"event Event task2 /at Sunday 2pm-10pm","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"deadline","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"deadline Deadline task3","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"deadline Deadline task3.1 /by Tomorrow","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"unmark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"mark 3","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"unmark 3","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"mark 4","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"unmark 4","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"donljh":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"PAUSE","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"donljh":3,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"donljh":2,"-":36}}]

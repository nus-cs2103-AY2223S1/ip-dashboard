[{"path":"src/main/java/Blob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import task.Event;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"import task.Task;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import task.ToDo;","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"public class Blob {","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    // Divider to separate message instances by the chat-bot","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"    private static final String MESSAGE_DIVIDER \u003d \"\u003d\".repeat(100);","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    // Header to signify start of a message by the chat-bot","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    private static final String MESSAGE_HEADER \u003d \"\\u001B[33m\" + \"Blob says: \" + \"\\u001B[0m\";","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    // File path for text file which stores the data of all tasks","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    private static final Path SAVED_TASKS_FILE_PATH \u003d Paths.get(\"data\",\"tasks.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"     * Prints a greeting message.","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    private void greet() {","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"        speak(\"Hello... me Blob...\", \"How can Blob help...?\");","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     * Prints a parting message.","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    private void sayGoodbye() {","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"        this.speak(\"Thanks for talking to Blob...\", \"Blob see you soon...\");","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"     * Enumerates the list of added tasks.","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    private void listTasks() {","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        StringBuilder tasksStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"        tasksStringBuilder.append(\"\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"            tasksStringBuilder.append(String.format(\"\\t\\t%d. %s \\n\", i + 1, taskList.get(i).toString()));","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"        speak(String.format(\"Blob remembers %d task(s)...\", taskList.size()),","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"                taskList.size() \u003d\u003d 0 ? \"Give Blob task to remember...?\" : tasksStringBuilder.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"     * Adds a ToDo task to the list of tasks.","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    private void addTodo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"        ToDo task \u003d new ToDo(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"donljh"},"content":"        speak(\"Blob will remember task...\", String.format(\"\\n\\t\\t%s \\n\", task),","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"donljh"},"content":"                String.format(\"Blob now remembers %d task(s)...\", taskList.size()));","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"donljh"},"content":"     * Adds a Deadline task to the list of tasks","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"donljh"},"content":"    private void addDeadline(String details) throws InvalidDeadlineException, InvalidDateFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"donljh"},"content":"        String[] deconstructedDetails \u003d details.split(\"\\\\s+(/by)\\\\s+\", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"donljh"},"content":"        if (deconstructedDetails.length \u003c 2) {","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"donljh"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":75,"author":{"gitId":"donljh"},"content":"        Deadline task \u003d new Deadline(deconstructedDetails[0], deconstructedDetails[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":76,"author":{"gitId":"donljh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":77,"author":{"gitId":"donljh"},"content":"        speak(\"Blob will remember task...\", String.format(\"\\n\\t\\t%s \\n\", task),","lastModifiedDate":"2022-08-15"},{"lineNumber":78,"author":{"gitId":"donljh"},"content":"                String.format(\"Blob now remembers %d task(s)...\", taskList.size()));","lastModifiedDate":"2022-08-15"},{"lineNumber":79,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":80,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":81,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":82,"author":{"gitId":"donljh"},"content":"     * Adds an Event task to the list of tasks","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"donljh"},"content":"    private void addEvent(String details) throws InvalidEventException, InvalidDateFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"donljh"},"content":"        String[] deconstructedDetails \u003d details.split(\"\\\\s+(/at)\\\\s+\", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"donljh"},"content":"        if (deconstructedDetails.length \u003c 2) {","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"donljh"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"donljh"},"content":"        Event task \u003d new Event(deconstructedDetails[0], deconstructedDetails[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"donljh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-15"},{"lineNumber":91,"author":{"gitId":"donljh"},"content":"        speak(\"Blob will remember task...\", String.format(\"\\n\\t\\t%s \\n\", task),","lastModifiedDate":"2022-08-15"},{"lineNumber":92,"author":{"gitId":"donljh"},"content":"        String.format(\"Blob now remembers %d task(s)...\", taskList.size()));","lastModifiedDate":"2022-08-15"},{"lineNumber":93,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":94,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":95,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":96,"author":{"gitId":"donljh"},"content":"     * Marks task at the index to be done.","lastModifiedDate":"2022-08-15"},{"lineNumber":97,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task to be marked done","lastModifiedDate":"2022-08-15"},{"lineNumber":99,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"donljh"},"content":"    private void markTaskAtIndexDone(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2022-08-17"},{"lineNumber":101,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"donljh"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"donljh"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-15"},{"lineNumber":104,"author":{"gitId":"donljh"},"content":"            speak(\"Blob congratulates on task well done...\", String.format(\"\\n\\t\\t%s \\n\", task));","lastModifiedDate":"2022-08-15"},{"lineNumber":105,"author":{"gitId":"donljh"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-15"},{"lineNumber":106,"author":{"gitId":"donljh"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":108,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":109,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":110,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":111,"author":{"gitId":"donljh"},"content":"     * Marks task at the index to be undone.","lastModifiedDate":"2022-08-15"},{"lineNumber":112,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":113,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task to be marked undone","lastModifiedDate":"2022-08-15"},{"lineNumber":114,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":115,"author":{"gitId":"donljh"},"content":"    private void markTaskAtIndexUndone(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":117,"author":{"gitId":"donljh"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":118,"author":{"gitId":"donljh"},"content":"            task.markAsUndone();","lastModifiedDate":"2022-08-15"},{"lineNumber":119,"author":{"gitId":"donljh"},"content":"            speak(\"Blob will mark as undone...\", String.format(\"\\n\\t\\t%s \\n\", task));","lastModifiedDate":"2022-08-15"},{"lineNumber":120,"author":{"gitId":"donljh"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-15"},{"lineNumber":121,"author":{"gitId":"donljh"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":123,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":124,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":125,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"donljh"},"content":"     * Delete task at the index.","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"donljh"},"content":"     * @param index The index of the task to be deleted","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"donljh"},"content":"     * @throws InvalidTaskIndexException","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"donljh"},"content":"    private void deleteTaskAtIndex(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":133,"author":{"gitId":"donljh"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":134,"author":{"gitId":"donljh"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":135,"author":{"gitId":"donljh"},"content":"            speak(\"Ok... Blob forget task...\", String.format(\"\\n\\t\\t%s \\n\", task));","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"donljh"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":137,"author":{"gitId":"donljh"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":142,"author":{"gitId":"donljh"},"content":"     * Prints a sequence of strings, each in an indented newline encapsulated in a message instance.","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":144,"author":{"gitId":"donljh"},"content":"     * @param content The sequence of strings to be printed","lastModifiedDate":"2022-08-15"},{"lineNumber":145,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":146,"author":{"gitId":"donljh"},"content":"    private void speak(String ...content) {","lastModifiedDate":"2022-08-15"},{"lineNumber":147,"author":{"gitId":"donljh"},"content":"        System.out.println(\"\\n\" + MESSAGE_DIVIDER);","lastModifiedDate":"2022-08-15"},{"lineNumber":148,"author":{"gitId":"donljh"},"content":"        System.out.println(MESSAGE_HEADER);","lastModifiedDate":"2022-08-15"},{"lineNumber":149,"author":{"gitId":"donljh"},"content":"        for (int i \u003d 0; i \u003c content.length; i++) {","lastModifiedDate":"2022-08-15"},{"lineNumber":150,"author":{"gitId":"donljh"},"content":"            System.out.println(\"\\t\" + content[i]);","lastModifiedDate":"2022-08-15"},{"lineNumber":151,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":152,"author":{"gitId":"donljh"},"content":"        System.out.println(MESSAGE_DIVIDER + \"\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":153,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":154,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"donljh"},"content":"     * Loads task based on data in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"donljh"},"content":"    private void loadTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"donljh"},"content":"            Files.createDirectories(SAVED_TASKS_FILE_PATH.getParent());","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"donljh"},"content":"            File taskFile \u003d SAVED_TASKS_FILE_PATH.toFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"donljh"},"content":"            if (!taskFile.createNewFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"donljh"},"content":"                Scanner sc \u003d new Scanner(new FileReader(taskFile));","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"donljh"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"donljh"},"content":"                    String[] deconstructedDetails \u003d sc.nextLine().trim().split(\"\\\\s+\\\\|\\\\s+\");","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"donljh"},"content":"                    String taskType \u003d deconstructedDetails[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"donljh"},"content":"                    String done \u003d deconstructedDetails[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"donljh"},"content":"                    String description \u003d deconstructedDetails[2];","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"donljh"},"content":"                    Task task \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"donljh"},"content":"                    if (Objects.equals(taskType, \"T\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"donljh"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"donljh"},"content":"                    } else if (Objects.equals(taskType, \"D\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"donljh"},"content":"                        task \u003d new Deadline(description, deconstructedDetails[3]);","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"donljh"},"content":"                    } else if (Objects.equals(taskType, \"E\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"donljh"},"content":"                        task \u003d new Event(description, deconstructedDetails[3]);","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":179,"author":{"gitId":"donljh"},"content":"                    if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"donljh"},"content":"                        task.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":183,"author":{"gitId":"donljh"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"donljh"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":185,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":186,"author":{"gitId":"donljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":187,"author":{"gitId":"donljh"},"content":"            System.out.println(\"ERROR!: \" + e);","lastModifiedDate":"2022-08-24"},{"lineNumber":188,"author":{"gitId":"donljh"},"content":"            System.exit(1);","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":191,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":192,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":193,"author":{"gitId":"donljh"},"content":"     * Saves task to text file based on task list","lastModifiedDate":"2022-08-24"},{"lineNumber":194,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":195,"author":{"gitId":"donljh"},"content":"    private void saveTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":196,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":197,"author":{"gitId":"donljh"},"content":"            FileWriter taskFileWriter \u003d new FileWriter(SAVED_TASKS_FILE_PATH.toFile());","lastModifiedDate":"2022-08-24"},{"lineNumber":198,"author":{"gitId":"donljh"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":199,"author":{"gitId":"donljh"},"content":"                taskFileWriter.write(taskList.get(i).toFileString());","lastModifiedDate":"2022-08-24"},{"lineNumber":200,"author":{"gitId":"donljh"},"content":"                taskFileWriter.write(System.lineSeparator());","lastModifiedDate":"2022-08-24"},{"lineNumber":201,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":202,"author":{"gitId":"donljh"},"content":"            taskFileWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":203,"author":{"gitId":"donljh"},"content":"        } catch(IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":204,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":205,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":206,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":207,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":208,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":209,"author":{"gitId":"donljh"},"content":"     * Start the interaction with an instance of Blob","lastModifiedDate":"2022-08-15"},{"lineNumber":210,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":211,"author":{"gitId":"donljh"},"content":"    public void start() {","lastModifiedDate":"2022-08-15"},{"lineNumber":212,"author":{"gitId":"donljh"},"content":"        this.loadTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":213,"author":{"gitId":"donljh"},"content":"        this.greet();","lastModifiedDate":"2022-08-15"},{"lineNumber":214,"author":{"gitId":"donljh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-15"},{"lineNumber":215,"author":{"gitId":"donljh"},"content":"        while (true) {","lastModifiedDate":"2022-08-17"},{"lineNumber":216,"author":{"gitId":"donljh"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":217,"author":{"gitId":"donljh"},"content":"                System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2022-08-15"},{"lineNumber":218,"author":{"gitId":"donljh"},"content":"                String input \u003d sc.nextLine().trim();","lastModifiedDate":"2022-08-17"},{"lineNumber":219,"author":{"gitId":"donljh"},"content":"                String[] deconstructedInput \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":220,"author":{"gitId":"donljh"},"content":"                String command \u003d deconstructedInput[0];","lastModifiedDate":"2022-08-15"},{"lineNumber":221,"author":{"gitId":"donljh"},"content":"                switch (command) {","lastModifiedDate":"2022-08-15"},{"lineNumber":222,"author":{"gitId":"donljh"},"content":"                case \"bye\":","lastModifiedDate":"2022-08-15"},{"lineNumber":223,"author":{"gitId":"donljh"},"content":"                    end();","lastModifiedDate":"2022-08-17"},{"lineNumber":224,"author":{"gitId":"donljh"},"content":"                case \"list\":","lastModifiedDate":"2022-08-15"},{"lineNumber":225,"author":{"gitId":"donljh"},"content":"                    listTasks();","lastModifiedDate":"2022-08-15"},{"lineNumber":226,"author":{"gitId":"donljh"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":227,"author":{"gitId":"donljh"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-15"},{"lineNumber":228,"author":{"gitId":"donljh"},"content":"                    try {","lastModifiedDate":"2022-08-15"},{"lineNumber":229,"author":{"gitId":"donljh"},"content":"                        int index \u003d Integer.parseInt(deconstructedInput[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":230,"author":{"gitId":"donljh"},"content":"                        markTaskAtIndexDone(index);","lastModifiedDate":"2022-08-15"},{"lineNumber":231,"author":{"gitId":"donljh"},"content":"                    } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-15"},{"lineNumber":232,"author":{"gitId":"donljh"},"content":"                        throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-17"},{"lineNumber":233,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-15"},{"lineNumber":234,"author":{"gitId":"donljh"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":235,"author":{"gitId":"donljh"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-15"},{"lineNumber":236,"author":{"gitId":"donljh"},"content":"                    try {","lastModifiedDate":"2022-08-15"},{"lineNumber":237,"author":{"gitId":"donljh"},"content":"                        int index \u003d Integer.parseInt(deconstructedInput[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":238,"author":{"gitId":"donljh"},"content":"                        markTaskAtIndexUndone(index);","lastModifiedDate":"2022-08-15"},{"lineNumber":239,"author":{"gitId":"donljh"},"content":"                    } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-15"},{"lineNumber":240,"author":{"gitId":"donljh"},"content":"                        throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-17"},{"lineNumber":241,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-15"},{"lineNumber":242,"author":{"gitId":"donljh"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":243,"author":{"gitId":"donljh"},"content":"                case \"todo\":","lastModifiedDate":"2022-08-15"},{"lineNumber":244,"author":{"gitId":"donljh"},"content":"                    if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-15"},{"lineNumber":245,"author":{"gitId":"donljh"},"content":"                        throw new MissingTaskDescriptionException();","lastModifiedDate":"2022-08-17"},{"lineNumber":246,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-15"},{"lineNumber":247,"author":{"gitId":"donljh"},"content":"                    addTodo(deconstructedInput[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":248,"author":{"gitId":"donljh"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":249,"author":{"gitId":"donljh"},"content":"                case \"deadline\":","lastModifiedDate":"2022-08-15"},{"lineNumber":250,"author":{"gitId":"donljh"},"content":"                    if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-15"},{"lineNumber":251,"author":{"gitId":"donljh"},"content":"                        throw new MissingTaskDescriptionException();","lastModifiedDate":"2022-08-17"},{"lineNumber":252,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-15"},{"lineNumber":253,"author":{"gitId":"donljh"},"content":"                    addDeadline(deconstructedInput[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":254,"author":{"gitId":"donljh"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":255,"author":{"gitId":"donljh"},"content":"                case \"event\":","lastModifiedDate":"2022-08-15"},{"lineNumber":256,"author":{"gitId":"donljh"},"content":"                    if (deconstructedInput.length \u003c 2) {","lastModifiedDate":"2022-08-15"},{"lineNumber":257,"author":{"gitId":"donljh"},"content":"                        throw new MissingTaskDescriptionException();","lastModifiedDate":"2022-08-17"},{"lineNumber":258,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-15"},{"lineNumber":259,"author":{"gitId":"donljh"},"content":"                    addEvent(deconstructedInput[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":260,"author":{"gitId":"donljh"},"content":"                    break;","lastModifiedDate":"2022-08-15"},{"lineNumber":261,"author":{"gitId":"donljh"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-17"},{"lineNumber":262,"author":{"gitId":"donljh"},"content":"                    try {","lastModifiedDate":"2022-08-17"},{"lineNumber":263,"author":{"gitId":"donljh"},"content":"                        int index \u003d Integer.parseInt(deconstructedInput[1]);","lastModifiedDate":"2022-08-17"},{"lineNumber":264,"author":{"gitId":"donljh"},"content":"                        deleteTaskAtIndex(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":265,"author":{"gitId":"donljh"},"content":"                    } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":266,"author":{"gitId":"donljh"},"content":"                        throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-17"},{"lineNumber":267,"author":{"gitId":"donljh"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":268,"author":{"gitId":"donljh"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":269,"author":{"gitId":"donljh"},"content":"                default:","lastModifiedDate":"2022-08-15"},{"lineNumber":270,"author":{"gitId":"donljh"},"content":"                    throw new UnknownCommandException();","lastModifiedDate":"2022-08-17"},{"lineNumber":271,"author":{"gitId":"donljh"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":272,"author":{"gitId":"donljh"},"content":"            } catch (BlobException exception) {","lastModifiedDate":"2022-08-17"},{"lineNumber":273,"author":{"gitId":"donljh"},"content":"                speak(exception.getBlobMessages());","lastModifiedDate":"2022-08-17"},{"lineNumber":274,"author":{"gitId":"donljh"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":275,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":276,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":277,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":278,"author":{"gitId":"donljh"},"content":"    public void end() {","lastModifiedDate":"2022-08-17"},{"lineNumber":279,"author":{"gitId":"donljh"},"content":"        saveTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":280,"author":{"gitId":"donljh"},"content":"        sayGoodbye();","lastModifiedDate":"2022-08-17"},{"lineNumber":281,"author":{"gitId":"donljh"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-17"},{"lineNumber":282,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":283,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":283}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"public class Main {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"        Blob blob \u003d new Blob();","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"        blob.start();","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":6}},{"path":"src/main/java/exception/BlobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"public abstract class BlobException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"    public abstract String[] getBlobMessages();","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":5}},{"path":"src/main/java/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package exception;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"public class InvalidDateFormatException extends BlobException {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"        return new String[] {\"Blob does not understand input datetime...\",","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"            \"USAGE: Dates have to be in the format yyyy-mm-dd\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"donljh":8}},{"path":"src/main/java/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"public class InvalidDeadlineException extends BlobException {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"        return new String[] {\"Blob needs to know deadline of your task...\",","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"                \"USAGE: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\" };","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":8}},{"path":"src/main/java/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"public class InvalidEventException extends BlobException {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"        return new String[] {\"Blob needs to know timeframe of your task...\",","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"                \"USAGE: event \u003cdescription\u003e /by \u003ctimeframe\u003e\" };","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":8}},{"path":"src/main/java/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"public class InvalidTaskIndexException extends BlobException {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"        return new String[] {\"Blob cannot find that task..., maybe task no exist...?\"};","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":7}},{"path":"src/main/java/exception/MissingTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"public class MissingTaskDescriptionException extends BlobException {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"        return new String[] {\"Blob needs to know details of task...\",","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"                \"USAGE: todo/event/deadline \u003cdescription\u003e (...)\" };","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":8}},{"path":"src/main/java/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"public class UnknownCommandException extends BlobException {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"    public String[] getBlobMessages() {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"        return new String[] { \"Sorry... Blob no understand your command...\" };","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":7}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package task;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" * The Deadline class encapsulates a type of task to be done.","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * A Deadline task is a task that needs to be done before a specific time/date.","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    public Deadline(String description, String by) throws InvalidDateFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        } catch (DateTimeParseException exception){","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        return String.format(\"%s (by: %s)\", super.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     * Returns the formatted Event task details to be stored in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     * @return Formatted Event task details to be stored in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        return super.toFileString() + \" | \" + this.by ;","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":45}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package task;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import exception.InvalidDateFormatException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":" * The Event class encapsulates a type of task to be done.","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":" * A Deadline task is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"    private LocalDate at;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    public Event(String description, String at) throws InvalidDateFormatException {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"        } catch (DateTimeParseException exception){","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        return String.format(\"%s (at: %s)\", super.toString(),","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"                this.at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     * Returns the formatted Event task details to be stored in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"     * @return Formatted Event task details to be stored in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"        return super.toFileString() + \" | \" + this.at ;","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":45}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package task;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" * A task has a string description describing the task to be done, and a boolean indicator to represent","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" * the status of completion of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"    protected String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    protected TaskType type;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"     * Returns an icon representing the state of completion of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"     * @return A checkmark icon (✓) if the task is done, and \" \" otherwise","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"        return (isDone ? \"\\u2713\" : \" \");","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"donljh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"donljh"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"donljh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"donljh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"donljh"},"content":"        return String.format(\"[%s][%s] %s\", this.type.getAbbreviation(),","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"donljh"},"content":"                this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"donljh"},"content":"     * Returns the formatted task details for storing in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"donljh"},"content":"     * @return Formatted task details for storing in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"donljh"},"content":"        return String.format(\"%s | %d | %s\", this.type.getAbbreviation(),","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"donljh"},"content":"                this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":62}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package task;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"    TODO (\"todo\", \"T\"),","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"    EVENT (\"event\", \"E\"),","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    DEADLINE (\"deadline\", \"D\");","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    private final String name;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"    private final String abbreviation;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"    TaskType(String s, String abbreviation) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"        this.name \u003d s;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"        this.abbreviation \u003d abbreviation;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    public String getAbbreviation() {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        return this.abbreviation;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"donljh":22}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"package task;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"/**","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":" * The ToDo class encapsulates a type of task to be done.","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":" * A ToDo task is a task without any date/time attached to it.","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":" */","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"        return super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"     * Returns the formatted ToDo task details to be stored in text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"     * @return Formatted ToDo task details to be stored in text file","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"donljh"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"donljh"},"content":"        return super.toFileString();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"donljh"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"donljh":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"donljh"},"content":"blob","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"donljh"},"content":"todo","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"donljh"},"content":"todo ToDo task1","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"donljh"},"content":"event","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"donljh"},"content":"event Event task2","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"donljh"},"content":"event Event task2 /at Sunday 2pm-10pm","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"donljh"},"content":"deadline","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"donljh"},"content":"deadline Deadline task3","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"donljh"},"content":"deadline Deadline task3.1 /by Tomorrow","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"donljh"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"donljh"},"content":"unmark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"donljh"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"donljh"},"content":"mark 3","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"unmark 3","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"donljh"},"content":"mark 4","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"donljh"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"donljh"},"content":"unmark 4","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"donljh"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"donljh":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"donljh"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"donljh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"PAUSE","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"donljh":3,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"donljh"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"donljh"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"donljh":2,"-":36}}]

[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"ToDo|qd|true","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"kaij77":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":" * The Deadline class extends the Task class as it is a more specific type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"    private String by;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    private LocalDate date;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"        super(description);","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    private String printDate() {","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"        return String.format(\"%s %d %d\",","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"                this.date.getMonth().toString().substring(0, 3),","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"                this.date.getDayOfMonth(),","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"                this.date.getYear());","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"        return \"D\";","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"    public String stringifyTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"        return String.format(\"%s | %s | %s\", \"D\", super.stringifyTask(), this.by);","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.printDate());","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":39}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import java.util.List;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"            + \"What can I do for you?\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"    private static final List\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"        ","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"            try {","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"                    scanner.close();","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"                    break;","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"                if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"                    printTasks();","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"                    continue;","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"                String[] split \u003d userInput.split(\" \");","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"                if (split.length \u003d\u003d 2 \u0026\u0026 isNumeric(split[1]) \u0026\u0026 split[0].equals(\"mark\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"                    markTaskAsDone(getTask(Integer.parseInt(split[1]) - 1));","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"                    continue;","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"                if (split.length \u003d\u003d 2 \u0026\u0026 isNumeric(split[1]) \u0026\u0026 split[0].equals(\"unmark\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"                    markTaskAsUndone(getTask(Integer.parseInt(split[1]) - 1));","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"                    continue;","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"                if (split.length \u003d\u003d 2 \u0026\u0026 isNumeric(split[1]) \u0026\u0026 split[0].equals(\"delete\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"                    deleteTask(getTask(Integer.parseInt(split[1]) - 1));","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"                    continue;","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"                if (split[0].equals(\"todo\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"                    addToDo(userInput.substring(4).trim());","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"                    continue;","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"                if (split[0].equals(\"deadline\") \u0026\u0026 userInput.contains(\"/by\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"                    int index \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"kaij77"},"content":"                    addDeadline(userInput.substring(8, index).trim(), userInput.substring(index + 3).trim());","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"kaij77"},"content":"                    continue;","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"kaij77"},"content":"                if (split[0].equals(\"event\") \u0026\u0026 userInput.contains(\"/at\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"kaij77"},"content":"                    int index \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"kaij77"},"content":"                    addEvent(userInput.substring(5, index).trim(), userInput.substring(index + 3).trim());","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"kaij77"},"content":"                    continue;","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"kaij77"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"kaij77"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"kaij77"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"kaij77"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":79,"author":{"gitId":"kaij77"},"content":"    private static boolean isNumeric(String input) {","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"kaij77"},"content":"        for (char c : input.toCharArray()) {","lastModifiedDate":"2022-09-15"},{"lineNumber":81,"author":{"gitId":"kaij77"},"content":"            if (c \u003c 48 || c \u003e 57) {","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"kaij77"},"content":"                return false;","lastModifiedDate":"2022-09-15"},{"lineNumber":83,"author":{"gitId":"kaij77"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"        return true;","lastModifiedDate":"2022-09-15"},{"lineNumber":86,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":88,"author":{"gitId":"kaij77"},"content":"    private static Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"        if (index \u003c 0 || index \u003e\u003d TASKS.size()) {","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"kaij77"},"content":"            throw new DukeException(\"OOPS!!! The task number is out of bounds.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":91,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"kaij77"},"content":"        return TASKS.get(index);","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"kaij77"},"content":"    private static void deleteTask(Task task) {","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"        TASKS.remove(task);","lastModifiedDate":"2022-09-15"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"kaij77"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-09-15"},{"lineNumber":99,"author":{"gitId":"kaij77"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", TASKS.size()));","lastModifiedDate":"2022-09-15"},{"lineNumber":100,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":101,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"kaij77"},"content":"    private static void markTaskAsDone(Task task) {","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"kaij77"},"content":"        task.mark();","lastModifiedDate":"2022-09-15"},{"lineNumber":104,"author":{"gitId":"kaij77"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-15"},{"lineNumber":105,"author":{"gitId":"kaij77"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-09-15"},{"lineNumber":106,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"kaij77"},"content":"    private static void markTaskAsUndone(Task task) {","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"kaij77"},"content":"        task.unmark();","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"kaij77"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-15"},{"lineNumber":111,"author":{"gitId":"kaij77"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2022-09-15"},{"lineNumber":112,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":113,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":114,"author":{"gitId":"kaij77"},"content":"    private static void addToTasks(Task task) {","lastModifiedDate":"2022-09-15"},{"lineNumber":115,"author":{"gitId":"kaij77"},"content":"        TASKS.add(task);","lastModifiedDate":"2022-09-15"},{"lineNumber":116,"author":{"gitId":"kaij77"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-15"},{"lineNumber":117,"author":{"gitId":"kaij77"},"content":"        System.out.println(String.format(\"%s\", task.toString()));","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"kaij77"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", TASKS.size()));","lastModifiedDate":"2022-09-15"},{"lineNumber":119,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":120,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":121,"author":{"gitId":"kaij77"},"content":"    private static void addToDo(String description) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"kaij77"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-15"},{"lineNumber":123,"author":{"gitId":"kaij77"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":125,"author":{"gitId":"kaij77"},"content":"        addToTasks(new ToDo(description));","lastModifiedDate":"2022-09-15"},{"lineNumber":126,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":127,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":128,"author":{"gitId":"kaij77"},"content":"    private static void addDeadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":129,"author":{"gitId":"kaij77"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-15"},{"lineNumber":130,"author":{"gitId":"kaij77"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":131,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":132,"author":{"gitId":"kaij77"},"content":"        if (by.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-15"},{"lineNumber":133,"author":{"gitId":"kaij77"},"content":"            throw new DukeException(\"OOPS!!! The date of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":134,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":135,"author":{"gitId":"kaij77"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":136,"author":{"gitId":"kaij77"},"content":"            LocalDate.parse(by);","lastModifiedDate":"2022-09-15"},{"lineNumber":137,"author":{"gitId":"kaij77"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":138,"author":{"gitId":"kaij77"},"content":"            throw new DukeException(\"OOPS!!! Please input date in YYYY-MM-DD format.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":139,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":140,"author":{"gitId":"kaij77"},"content":"        addToTasks(new Deadline(description, by));","lastModifiedDate":"2022-09-15"},{"lineNumber":141,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":142,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":143,"author":{"gitId":"kaij77"},"content":"    private static void addEvent(String description, String at) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":144,"author":{"gitId":"kaij77"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-15"},{"lineNumber":145,"author":{"gitId":"kaij77"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":146,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":147,"author":{"gitId":"kaij77"},"content":"        if (at.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-15"},{"lineNumber":148,"author":{"gitId":"kaij77"},"content":"            throw new DukeException(\"OOPS!!! The date of an event cannot be empty.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":149,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":150,"author":{"gitId":"kaij77"},"content":"        addToTasks(new Event(description, at));","lastModifiedDate":"2022-09-15"},{"lineNumber":151,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":152,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":153,"author":{"gitId":"kaij77"},"content":"    private static void printTasks() {","lastModifiedDate":"2022-09-15"},{"lineNumber":154,"author":{"gitId":"kaij77"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-15"},{"lineNumber":155,"author":{"gitId":"kaij77"},"content":"        for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2022-09-15"},{"lineNumber":156,"author":{"gitId":"kaij77"},"content":"            System.out.println(String.format(\"%d. %s\", 1 + i, TASKS.get(i).toString()));","lastModifiedDate":"2022-09-15"},{"lineNumber":157,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kaij77":151,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":" * A DukeException is thrown if there is any error related to Duke the chatbot.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"     * Public constructor for a DukeException.","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"     * @param message the message to be printed when a DukeException is thrown and caught.","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":13}},{"path":"src/main/java/DukeInvalidDeletionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":" * A DukeInvalidDeletionException is thrown if the user tries to delete a task that doesn\u0027t exist, or if the user","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":" * tries to perform a deletion on an empty task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"public class DukeInvalidDeletionException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"     * Public constructor for a DukeInvalidDeletionException.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"     * @param message the message to be printed when a DukeInvalidDeletionException is thrown and caught.","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    public DukeInvalidDeletionException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":14}},{"path":"src/main/java/DukeInvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":" * A DukeInvalidDescriptionException is thrown if the user tries to add a task without giving it either a name or","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":" * description, or if no due date or time is given for Events and Deadlines.","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"public class DukeInvalidDescriptionException extends DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"     * Public constructor for a DukeEmptyDescriptionException.","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"     * @param message the message to be printed when a DukeInvalidDescriptionException is thrown and caught.","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    public DukeInvalidDescriptionException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"kaij77":15}},{"path":"src/main/java/DukeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":" * A DukeInvalidInputException is thrown if the user gives an unknown input/command.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"public class DukeInvalidInputException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"     * Public constructor for a DukeInvalidInputException which will print the standardized message when thrown and","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"     * caught.","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    public DukeInvalidInputException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means D:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":13}},{"path":"src/main/java/DukeMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":" * A DukeMarkException is thrown if the user tries to mark an already marked task, or if they try to un-mark a task","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":" * that is already un-marked.","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"public class DukeMarkException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"     * Public constructor for a DukeMarkException.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"     * @param message the message to be printed when a DukeMarkException is thrown and caught.","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    public DukeMarkException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":" * The Deadline class extends the Task class as it is a more specific type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"    private String at;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"        super(description);","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"        return \"E\";","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    public String stringifyTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"        return String.format(\"%s | %s | %s\", \"E\", super.stringifyTask(), this.at);","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":26}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"public class Parser {","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"kaij77":2}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"public class Storage {","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"kaij77":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"    private String description;","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"    public Task(String description) {","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    public String stringifyTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"        return String.format(\"%d | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"        return this.isDone;","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":36}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"public class TaskList {","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"kaij77":2}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"public enum TaskType {","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"    T,","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"    D,","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"    E","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"kaij77":6}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":" * The ToDo class extends the Task class as it is a more specific type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"        super(description);","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"        return \"T\";","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    public String stringifyTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"        return String.format(\"%s | %s\", \"T\", super.stringifyTask());","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":24}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"public class Ui {","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"kaij77":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"todo read","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"deadline return /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"event meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"deadline do home worl /by I have no idea :\u003d-p","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":23}},{"path":"text-ui-test/runtest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"@ECHO OFF","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"REM delete output from previous run","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"javac  -cp ..C:\\Users\\ykaij\\Desktop\\documents\\NUS\\Y2S1\\CS2103T\\IP\\src\\main\\java -Xlint:none -d C:\\Users\\ykaij\\Desktop\\documents\\NUS\\Y2S1\\CS2103T\\IP\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    exit /b 1","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":")","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"java -classpath ..C:\\Users\\ykaij\\Desktop\\documents\\NUS\\Y2S1\\CS2103T\\IP\\src\\main Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"REM compare the output to the expected output","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"kaij77":21}}]

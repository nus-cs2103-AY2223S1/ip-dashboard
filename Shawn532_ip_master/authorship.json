[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    public String dl;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    public LocalDate exactTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public Deadline(String name, String dl) {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        super(name);","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.dl \u003d dl;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"            this.exactTime \u003d LocalDate.parse(dl);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"            System.out.println(\"Wrong input format!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"        return \"[D]\" + super.toString() + \"(\" + exactTime.getMonth() + \" \"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"                + exactTime.getDayOfMonth() + \" \" + exactTime.getYear() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Shawn532":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"     * Initializes the Duke chatbot.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"     * @param filePath Specifies the path to save the content.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"     * start the program","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    public void run() {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        ui.greetings();","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"            String command \u003d input.split(\" \")[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"            switch (command) {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"                case \"bye\":","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"                    ui.printBye();","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"                    return;","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"                case \"list\":","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"                    System.out.println(ui.listAllItems(tasks.getTasks()));","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"                    int num1 \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"                    tasks.mark(num1, ui);","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"                    storage.update(ui.listAllItems(tasks.getTasks()));","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"                    int num2 \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"                    tasks.unmark(num2, ui);","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"                    storage.update(ui.listAllItems(tasks.getTasks()));","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"                    int num3 \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"                    tasks.delete(num3, ui);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"                    storage.update(ui.listAllItems(tasks.getTasks()));","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"                case \"find\":","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"                    String target \u003d input.split(\" \")[1];","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"                    tasks.find(target, ui);","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"                default:","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"                    try {","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"                        tasks.addATask(input);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"                        storage.update(ui.listAllItems(tasks.getTasks()));","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"                        ui.printMessage(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"                    }","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"Shawn532"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Shawn532"},"content":"        new Duke(\"src/main/java/duke.txt\").run();","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Shawn532":66,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"Shawn532":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    public String eventTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    public LocalDate exactTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public Event(String name, String eventTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        super(name);","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"            this.exactTime \u003d LocalDate.parse(eventTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"            System.out.println(\"Wrong input format!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"        return \"[E]\" + super.toString() + \"(\" + exactTime.getMonth() + \" \"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"                + exactTime.getDayOfMonth() + \" \" + exactTime.getYear() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Shawn532":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"    public static String parse(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"        return \"!\";","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":7}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    private String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"     * A constructor to specify the path","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"     * @param filePath the path to save the file and load the file from","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"     * Updates the file","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"     * @param str The strings to be written in the file","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    public void update(String str) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"            //System.out.println(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"            fw.write(str);","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"            fw.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"        }  // Catch block to handle the exception","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"        catch (IOException ex) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"            System.out.print(\"Invalid Path\");","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":33}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"    public String name;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"    public boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    public Task() {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    public void unMark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"            return \"[] \" + this.name;","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Shawn532":38}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"     * The constructor of the class","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"     * Marks a task as done","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"     * @param num Specifies which task to mark","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"     * @param ui  An object to print output","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    public void mark(int num, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"        tasks.get(num - 1).mark();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(tasks.get(num - 1).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"     * Unmarks a task","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"     * @param num Specifies which task to unmark","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"     * @param ui  An object to print output","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"    public void unmark(int num, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"        tasks.get(num - 1).unMark();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(tasks.get(num - 1).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"     * Deletes a task","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"     * @param num Specifies which item to delete","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"     * @param ui  An object to print output","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"    public void delete(int num, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"        Task removedTask \u003d tasks.get(num - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"        tasks.remove(num - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(\"Noted. I\u0027ve removed this task:\" + \"\\n\" + removedTask.toString()","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"     * Adds a task","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"     * @param item The String that needs to be parsed and add to the list","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException Throws an exception","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"    public void addATask(String item) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"        String[] arr \u003d item.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"        String type \u003d arr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"        switch (type) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"Shawn532"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Shawn532"},"content":"                if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"Shawn532"},"content":"                    throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"Shawn532"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Shawn532"},"content":"                String todoName \u003d arr[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Shawn532"},"content":"                Task newTodo \u003d new Todo(todoName);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Shawn532"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Shawn532"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Shawn532"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Shawn532"},"content":"                String[] deadlineArr \u003d arr[1].split(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Shawn532"},"content":"                String deadlineName \u003d deadlineArr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Shawn532"},"content":"                String dl \u003d deadlineArr[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Shawn532"},"content":"                Task newDeadline \u003d new Deadline(deadlineName, dl);","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Shawn532"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Shawn532"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Shawn532"},"content":"            case \"event\":","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Shawn532"},"content":"                String[] eventArr \u003d arr[1].split(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Shawn532"},"content":"                String eventName \u003d eventArr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Shawn532"},"content":"                String eventTime \u003d eventArr[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"Shawn532"},"content":"                Task newEvent \u003d new Event(eventName, eventTime);","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Shawn532"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"Shawn532"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"Shawn532"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Shawn532"},"content":"                DukeException e \u003d new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"Shawn532"},"content":"                throw e;","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Shawn532"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Shawn532"},"content":"        int numOfTasks \u003d tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Shawn532"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\" + \"\\n\" + tasks.get(numOfTasks - 1).toString() +","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"Shawn532"},"content":"                \"\\n\" + \"Now you have \" + numOfTasks + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Shawn532"},"content":"        Ui.printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"Shawn532"},"content":"    public void find(String str, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"Shawn532"},"content":"        //ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"Shawn532"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"Shawn532"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"Shawn532"},"content":"            if (task.name.contains(str)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"Shawn532"},"content":"                result +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(result);","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"Shawn532"},"content":"     * Gets the size of the tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"Shawn532"},"content":"     * @return the size of the task","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"Shawn532"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"Shawn532"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"Shawn532"},"content":"     * Gets a specific task","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"Shawn532"},"content":"     * @param n The index of task wanted","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"Shawn532"},"content":"     * @return The task wanted","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"Shawn532"},"content":"    public Task get(int n) {","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"Shawn532"},"content":"        return tasks.get(n);","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"Shawn532"},"content":"     * Removes a specific task","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"Shawn532"},"content":"     * @param n The index of task to be removed","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"Shawn532"},"content":"    public void remove(int n) {","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"Shawn532"},"content":"        tasks.remove(n);","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"Shawn532"},"content":"     * Gets an arraylist of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"Shawn532"},"content":"     * @return an arraylist of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"Shawn532"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"Shawn532"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":143}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"        super(name);","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Shawn532":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    private static final String HORIZONTAL_BAR \u003d \"-\".repeat(100);","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    public static void printLine() {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        System.out.println(HORIZONTAL_BAR);","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    public void greetings() {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        String message \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"        printMessage(message);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"    public void printBye() {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"        String message \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"        printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"        printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"    public String listAllItems(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"        //printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"        result +\u003d \"-\".repeat(100);","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"            result +\u003d \"\\n\" + number + \". \" + tasks.get(i).toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"            //System.out.println(number + \". \" + tasks.get(i).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"        result +\u003d \"\\n\" + \"-\".repeat(100);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"        return result;","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"todo watch basketball tutorials","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"deadline lose weight /by the end of this semester","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"event play basketball with Keanu /at Wednesday 6:00 - 7:30","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"very happy","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"todo play computer games","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Shawn532":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Shawn532":1,"-":37}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"Shawn532":20,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"![](Ui.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"### list","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"Lists all the tasks.","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"Format:  `list`","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"### Adding a Todo task","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"Adds a Todo task to the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"- `todo Read book`","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"### Adding a Deadline","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"-`deadline play basketball /by 2022-09-20`","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"### Adding an Event","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"Format: `event DESCRIPTION /at DATE`","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"-`event read books /at 2022-09-20`","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"### Mark a task","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"Marks a task as done.","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"Format:  `mark TASK_NUMBER`","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"-`mark 1`","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"### Unmark a task","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"Marks a task as not done.","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"Format:  `unmark TASK_NUMBER`","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"-`unmark 1`","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"### Delete a task","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"Deletes a task according to the number","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"Format:  `delete TASK_NUMBER`","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"Shawn532"},"content":"-`delete 1` Deletes the first task.","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"Shawn532"},"content":"### Find a task","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"Shawn532"},"content":"Finds a task according to the keyword","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"Shawn532"},"content":"Format:  `find KEYWORD`","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":71,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":72,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":73,"author":{"gitId":"Shawn532"},"content":"-`find play` Find the tasks containing keyword play","lastModifiedDate":"2022-09-17"},{"lineNumber":74,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":75,"author":{"gitId":"Shawn532"},"content":"### Reminder","lastModifiedDate":"2022-09-17"},{"lineNumber":76,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":77,"author":{"gitId":"Shawn532"},"content":"Lists the tasks and all the todos within a week","lastModifiedDate":"2022-09-17"},{"lineNumber":78,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":79,"author":{"gitId":"Shawn532"},"content":"Format:  `reminder`","lastModifiedDate":"2022-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":81,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":83,"author":{"gitId":"Shawn532"},"content":"-`reminder` Find the tasks and todos within a week","lastModifiedDate":"2022-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":86,"author":{"gitId":"Shawn532"},"content":"### Close the app","lastModifiedDate":"2022-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":88,"author":{"gitId":"Shawn532"},"content":"Closes the duke chatbox.","lastModifiedDate":"2022-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":90,"author":{"gitId":"Shawn532"},"content":"Format:  `bye`","lastModifiedDate":"2022-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":92,"author":{"gitId":"Shawn532"},"content":"Examples:","lastModifiedDate":"2022-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"Shawn532"},"content":"-`bye` ","lastModifiedDate":"2022-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Shawn532":76,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Parser;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"public class Duke {","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"     * Initializes the Duke chatbot.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"     * @param filePath Specifies the path to save the content.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"            return command.execute(tasks, storage, ui);","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"     * Starts the program","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"    public void run() {","lastModifiedDate":"2022-09-05"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"        ui.greetings();","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"        assert this.storage !\u003d null \u0026\u0026 this.tasks !\u003d null \u0026\u0026 this.ui !\u003d null : \"The Duke object is not initialized!\";","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-05"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"            try {","lastModifiedDate":"2022-09-05"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"                ui.printMessage(command.execute(tasks, storage, ui));","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"                isExit \u003d command.isExit;","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"Shawn532"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":67,"author":{"gitId":"Shawn532"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"Shawn532"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Shawn532":69,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"        super(message);","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"Shawn532":7}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"public class AddDeadlineCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    private String deadlineTask;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    private String deadline;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public AddDeadlineCommand(String deadlineTask, String deadline) {","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        this.deadlineTask \u003d deadlineTask;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineTask, deadline);","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"        taskList.getTasks().add(newDeadline);","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        storage.update((taskList.getTasks()));","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newDeadline.toString()","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"                + \"\\nNow you have \" + taskList.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":25}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    private String eventTask;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    private String eventTime;","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    public AddEventCommand(String eventTask, String eventTime) {","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"        this.eventTask \u003d eventTask;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"        Event newEvent \u003d new Event(eventTask, eventTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        taskList.getTasks().add(newEvent);","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"        storage.update((taskList.getTasks()));","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newEvent.toString()","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"                + \"\\nNow you have \" + taskList.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":26}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"public class AddTodoCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    private String todoTask;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public AddTodoCommand(String todoTask) {","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        this.todoTask \u003d todoTask;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        Todo newTodo \u003d new Todo(todoTask);","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        taskList.getTasks().add(newTodo);","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"        storage.update((taskList.getTasks()));","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newTodo","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"                + \"\\nNow you have \" + taskList.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":25}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    public boolean isExit;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public Command() {}","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public abstract String execute(TaskList taskList, Storage storage, Ui ui);","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":14}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    private int indexToDelete;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    public DeleteCommand(int inputNumber) {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.indexToDelete \u003d inputNumber - 1;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        Task deleteClass \u003d taskList.getTasks().get(indexToDelete);","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        taskList.getTasks().remove(indexToDelete);","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        storage.update(taskList.getTasks());","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"        return \"Haha! I\u0027ve deleted this command as done:\\n\" + deleteClass.toString();","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":22}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        return \"bye bye! Have a good day!\";","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":14}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    private String messageToFind;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public FindCommand(String inputMessage) {","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        this.messageToFind \u003d inputMessage;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"            if (task.name.contains(messageToFind)) {","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"                result +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"        return result;","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        return ui.listAllItems(taskList.getTasks());","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":13}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    private int indexToMark;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    public MarkCommand(int inputNumber) {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.indexToMark \u003d inputNumber - 1;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        taskList.get(this.indexToMark).mark();","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        storage.update((taskList.getTasks()));","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        return \"Good job! I\u0027ve marked this task as done:\\n\" + taskList.get(indexToMark).toString();","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":21}},{"path":"src/main/java/duke/command/ReminderCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        StringBuilder returnString \u003d new StringBuilder();","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        returnString.append(\"These tasks are to be done within a week \\n\");","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"            if (taskList.get(i).needToRemind()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"                returnString.append(taskList.get(i) + \"\\n\");","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        return returnString.toString();","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"Shawn532":20}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"public class UnMarkCommand extends Command{","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    private int indexToUnMark;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    public UnMarkCommand(int inputNumber) {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.indexToUnMark \u003d inputNumber - 1;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        taskList.get(this.indexToUnMark).unMark();","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        storage.update((taskList.getTasks()));","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        return \"Sure! I\u0027ve unmarked this task as undone:\\n\" + taskList.get(this.indexToUnMark).toString();","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":21}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.gui;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"/**","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":" */","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"    private void flip() {","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-05"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-05"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"        db.flip();","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"        return db;","lastModifiedDate":"2022-09-05"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":61}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.gui;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"/**","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":" */","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"public class Launcher {","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.gui;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    private Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"            stage.show();","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Shawn532":32}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.gui;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.oop.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"/**","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":" */","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shindo.png\"));","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/akira.png\"));","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"    @FXML","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-05"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"        );","lastModifiedDate":"2022-09-05"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"            Platform.exit();","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":59}},{"path":"src/main/java/duke/oop/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.oop;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"        assert (input !\u003d null) : \"the input is null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"        String inputCommand \u003d inputArray[0];","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        switch (inputCommand) {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"        case \"find\":","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"            String toFind \u003d input.replace(\"find\", \"\").trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"            validateFind(toFind);","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"            String textToFind \u003d input.split(\" \")[1];","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"            return new FindCommand(textToFind);","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        case \"list\":","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"            int taskNum \u003d Integer.parseInt(input.replace(\"mark\", \"\").trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"            validateMark(taskNum);","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"            int numToMark \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"            return new MarkCommand(numToMark);","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"            int taskNum3 \u003d Integer.parseInt(input.replace(\"unmark\", \"\").trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"            validateMark(taskNum3);","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"            int numToUnmark \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"            return new UnMarkCommand(numToUnmark);","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"            int taskNum2 \u003d Integer.parseInt(input.replace(\"delete\", \"\").trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"            validateDelete(taskNum2);","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"            int numToDelete \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"            return new DeleteCommand(numToDelete);","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"            String todo \u003d input.replace(\"todo\", \"\").trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"            validateTodo(todo);","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"            String todoName \u003d inputArray[1].trim();","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"            return new AddTodoCommand(todoName);","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"        case \"event\":","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"            String event \u003d input.replace(\"event\", \"\").trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"            validateDeadline(event);","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"            String[] eventArr \u003d input.replace(\"event\", \"\").split(\" /at \");","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"            String eventName \u003d eventArr[0];","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"            String eventTime \u003d eventArr[1];","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"            return new AddEventCommand(eventName, eventTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"            String deadline \u003d input.replace(\"deadline\", \"\").trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"            validateDeadline(deadline);","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"            String[] deadlineArr \u003d input.replace(\"deadline\", \"\").split(\" /by \");","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"            String deadlineName \u003d deadlineArr[0];","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"            String deadlineTime \u003d deadlineArr[1];","lastModifiedDate":"2022-09-05"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"            return new AddDeadlineCommand(deadlineName, deadlineTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"        case \"reminder\":","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"            return new ReminderCommand();","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"        default:","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"Shindo, I am confused...\");","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"Shawn532"},"content":"     * Checks whether the description is empty.","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"Shawn532"},"content":"     * @param todo description of todo","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"Shawn532"},"content":"    public static void validateTodo(String todo) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"Shawn532"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":71,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-17"},{"lineNumber":72,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":73,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":74,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":75,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":76,"author":{"gitId":"Shawn532"},"content":"     * Checks whether the description is empty.","lastModifiedDate":"2022-09-17"},{"lineNumber":77,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":78,"author":{"gitId":"Shawn532"},"content":"     * @param event description of event","lastModifiedDate":"2022-09-17"},{"lineNumber":79,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2022-09-17"},{"lineNumber":80,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":81,"author":{"gitId":"Shawn532"},"content":"    public static void validateEvent(String event) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":82,"author":{"gitId":"Shawn532"},"content":"        if (event.isEmpty()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":83,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-09-17"},{"lineNumber":84,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":85,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":86,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":87,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":88,"author":{"gitId":"Shawn532"},"content":"     * Checks whether the deadline is empty.","lastModifiedDate":"2022-09-17"},{"lineNumber":89,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":90,"author":{"gitId":"Shawn532"},"content":"     * @param deadline description of deadline","lastModifiedDate":"2022-09-17"},{"lineNumber":91,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2022-09-17"},{"lineNumber":92,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":93,"author":{"gitId":"Shawn532"},"content":"    public static void validateDeadline(String deadline) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":94,"author":{"gitId":"Shawn532"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":95,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-17"},{"lineNumber":96,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":97,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":98,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":99,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":100,"author":{"gitId":"Shawn532"},"content":"    public static void validateFind(String toFind) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":101,"author":{"gitId":"Shawn532"},"content":"        if (toFind.isEmpty()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":102,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"OOPS!!! The task to find cannot be empty.\");","lastModifiedDate":"2022-09-17"},{"lineNumber":103,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":104,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":105,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":106,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":107,"author":{"gitId":"Shawn532"},"content":"     * Checks whether the index of task to be marked as done is in legal range.","lastModifiedDate":"2022-09-17"},{"lineNumber":108,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":109,"author":{"gitId":"Shawn532"},"content":"     * @param taskNum index of task to be marked as done","lastModifiedDate":"2022-09-17"},{"lineNumber":110,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException If index is \u003c 1.","lastModifiedDate":"2022-09-17"},{"lineNumber":111,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":112,"author":{"gitId":"Shawn532"},"content":"    public static void validateMark(int taskNum) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":113,"author":{"gitId":"Shawn532"},"content":"        if (taskNum \u003c 1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":114,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"OOPS!!! The index of the task is not in the list.\");","lastModifiedDate":"2022-09-17"},{"lineNumber":115,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":116,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":117,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":118,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":119,"author":{"gitId":"Shawn532"},"content":"     * Checks whether the index of task to be deleted is in legal range.","lastModifiedDate":"2022-09-17"},{"lineNumber":120,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":121,"author":{"gitId":"Shawn532"},"content":"     * @param taskNum index of task to be deleted","lastModifiedDate":"2022-09-17"},{"lineNumber":122,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException If index is \u003c 1.","lastModifiedDate":"2022-09-17"},{"lineNumber":123,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":124,"author":{"gitId":"Shawn532"},"content":"    public static void validateDelete(int taskNum) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":125,"author":{"gitId":"Shawn532"},"content":"        if (taskNum \u003c 1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":126,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"OOPS!!! The index of the task to delete is not in the list.\");","lastModifiedDate":"2022-09-17"},{"lineNumber":127,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":128,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":129,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":129}},{"path":"src/main/java/duke/oop/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.oop;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"import java.io.File;","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    private String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"     * A constructor to specify the path","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"     * @param filePath the path to save the file and load the file from","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException  If there is an error during file parsing.","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"                return tasks;","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"                String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"                switch (splitInput[0]) {","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"                case \"T\":","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"                    Todo todo \u003d new Todo(splitInput[2]);","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"                    if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"                        todo.mark();","lastModifiedDate":"2022-09-17"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"                    }","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"                    tasks.add(todo);","lastModifiedDate":"2022-09-17"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"                case \"D\":","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"                    Deadline deadline \u003d new Deadline(splitInput[2], splitInput[3]);","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"                    if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"                        deadline.mark();","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"                    }","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"Shawn532"},"content":"                case \"E\":","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"Shawn532"},"content":"                    Event event \u003d new Event(splitInput[2], splitInput[3]);","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"Shawn532"},"content":"                    if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"Shawn532"},"content":"                        event.mark();","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"Shawn532"},"content":"                    }","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"Shawn532"},"content":"                    tasks.add(event);","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"Shawn532"},"content":"                    break;","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"Shawn532"},"content":"                default:","lastModifiedDate":"2022-09-17"},{"lineNumber":71,"author":{"gitId":"Shawn532"},"content":"                    throw new DukeException(\"Task is of unknown type :(\");","lastModifiedDate":"2022-09-17"},{"lineNumber":72,"author":{"gitId":"Shawn532"},"content":"                }","lastModifiedDate":"2022-09-17"},{"lineNumber":73,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":74,"author":{"gitId":"Shawn532"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":75,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"An IOException occurred!! :(\");","lastModifiedDate":"2022-09-17"},{"lineNumber":76,"author":{"gitId":"Shawn532"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":77,"author":{"gitId":"Shawn532"},"content":"            throw new DukeException(\"An error occurred during file parsing, unexpected done value encountered.\");","lastModifiedDate":"2022-09-17"},{"lineNumber":78,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":79,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":80,"author":{"gitId":"Shawn532"},"content":"        return tasks;","lastModifiedDate":"2022-09-17"},{"lineNumber":81,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":82,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":83,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Shawn532"},"content":"     * Updates the file","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"Shawn532"},"content":"     * @param tasks The tasks to be written in the file","lastModifiedDate":"2022-09-17"},{"lineNumber":86,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"Shawn532"},"content":"    public void update(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-17"},{"lineNumber":88,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Shawn532"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Shawn532"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-09-17"},{"lineNumber":91,"author":{"gitId":"Shawn532"},"content":"                fw.write(task.getOutput()+ \"\\n\");","lastModifiedDate":"2022-09-17"},{"lineNumber":92,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":93,"author":{"gitId":"Shawn532"},"content":"            fw.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"Shawn532"},"content":"        // Catch block to handle the exception","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"Shawn532"},"content":"        catch (IOException ex) {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"Shawn532"},"content":"            System.out.print(\"Invalid Path\");","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":100}},{"path":"src/main/java/duke/oop/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.oop;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"     * The constructor of the class","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    public TaskList (ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"     * Marks a task as done","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"     * @param num Specifies which task to mark","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"     * @param ui  An object to print output","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"    public void mark(int num, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"        tasks.get(num - 1).mark();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(tasks.get(num - 1).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"     * Unmarks a task","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"     * @param num Specifies which task to unmark","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"     * @param ui  An object to print output","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"    public void unmark(int num, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"        tasks.get(num - 1).unMark();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(tasks.get(num - 1).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"     * Deletes a task","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"     * @param num Specifies which item to delete","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"     * @param ui  An object to print output","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"    public void delete(int num, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"        Task removedTask \u003d tasks.get(num - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"        tasks.remove(num - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(\"Noted. I\u0027ve removed this task:\" + \"\\n\" + removedTask.toString()","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"Shawn532"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Shawn532"},"content":"     * Adds a task","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Shawn532"},"content":"     * @param item The String that needs to be parsed and add to the list","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Shawn532"},"content":"     * @throws DukeException Throws an exception","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Shawn532"},"content":"    public String addATask(String item) throws DukeException {","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"Shawn532"},"content":"        String[] arr \u003d item.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Shawn532"},"content":"        String type \u003d arr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Shawn532"},"content":"        switch (type) {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Shawn532"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Shawn532"},"content":"                if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Shawn532"},"content":"                    throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Shawn532"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Shawn532"},"content":"                String todoName \u003d arr[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Shawn532"},"content":"                Task newTodo \u003d new Todo(todoName);","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Shawn532"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Shawn532"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Shawn532"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Shawn532"},"content":"                String[] deadlineArr \u003d arr[1].split(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"Shawn532"},"content":"                String deadlineName \u003d deadlineArr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Shawn532"},"content":"                String dl \u003d deadlineArr[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"Shawn532"},"content":"                Task newDeadline \u003d new Deadline(deadlineName, dl);","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"Shawn532"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Shawn532"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"Shawn532"},"content":"            case \"event\":","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"Shawn532"},"content":"                String[] eventArr \u003d arr[1].split(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Shawn532"},"content":"                String eventName \u003d eventArr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Shawn532"},"content":"                String eventTime \u003d eventArr[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Shawn532"},"content":"                Task newEvent \u003d new Event(eventName, eventTime);","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Shawn532"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"Shawn532"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Shawn532"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"Shawn532"},"content":"                DukeException e \u003d new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"Shawn532"},"content":"                throw e;","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"Shawn532"},"content":"        int numOfTasks \u003d tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"Shawn532"},"content":"        String a \u003d \"\\\"Got it. I\u0027ve added this task:\\\" + \\\"\\\\n\\\" + tasks.get(numOfTasks - 1).toString() +\\n\" +","lastModifiedDate":"2022-09-05"},{"lineNumber":99,"author":{"gitId":"Shawn532"},"content":"                \"                \\\"\\\\n\\\" + \\\"Now you have \\\" + numOfTasks + \\\" tasks in the list.\\\"\";","lastModifiedDate":"2022-09-05"},{"lineNumber":100,"author":{"gitId":"Shawn532"},"content":"        return \"hahaha\";","lastModifiedDate":"2022-09-05"},{"lineNumber":101,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"Shawn532"},"content":"    public void find(String str, Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"Shawn532"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"Shawn532"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"Shawn532"},"content":"            if (task.name.contains(str)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"Shawn532"},"content":"                result +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"Shawn532"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"Shawn532"},"content":"        ui.printMessage(result);","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"Shawn532"},"content":"     * Gets the size of the tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"Shawn532"},"content":"     * @return the size of the task","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"Shawn532"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"Shawn532"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"Shawn532"},"content":"     * Gets a specific task","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"Shawn532"},"content":"     * @param n The index of task wanted","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"Shawn532"},"content":"     * @return The task wanted","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"Shawn532"},"content":"    public Task get(int n) {","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"Shawn532"},"content":"        return tasks.get(n);","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"Shawn532"},"content":"     * Removes a specific task","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"Shawn532"},"content":"     * @param n The index of task to be removed","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"Shawn532"},"content":"    public void remove(int n) {","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"Shawn532"},"content":"        tasks.remove(n);","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"Shawn532"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"Shawn532"},"content":"     * Gets an arraylist of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"Shawn532"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"Shawn532"},"content":"     * @return an arraylist of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"Shawn532"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"Shawn532"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"Shawn532"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":149}},{"path":"src/main/java/duke/oop/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.oop;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    private static final String HORIZONTAL_BAR \u003d \"-\".repeat(100);","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    public static void printLine() {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        System.out.println(HORIZONTAL_BAR);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    public void greetings() {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"        String message \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"        printMessage(message);","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"    public void printBye() {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"        String message \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"        printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"        printLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"    public String addTwoLines(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"        return HORIZONTAL_BAR + \"\\n\" + message + \"\\n\" + HORIZONTAL_BAR;","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"    public String listAllItems(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"        if(tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"            return \"There is no task right now!\";","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"Shawn532"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Shawn532"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"Shawn532"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Shawn532"},"content":"            result +\u003d number + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Shawn532"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"Shawn532"},"content":"        result +\u003d size + \". \" + tasks.get(size - 1).toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"Shawn532"},"content":"        return result;","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Shawn532":56}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.task;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import java.time.Period;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public String dl;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    public LocalDate exactTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    public Deadline(String name, String dl) {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"        super(name);","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        this.dl \u003d dl;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"            this.exactTime \u003d LocalDate.parse(dl);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"            System.out.println(\"Wrong input format!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    public boolean needToRemind() {","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"            return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"        } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"            LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"            Period period \u003d Period.between(now, exactTime);","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"            return (period.getYears() \u003d\u003d 0 \u0026\u0026 period.getMonths() \u003d\u003d 0 \u0026\u0026 period.getDays() \u003c\u003d 7);","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"    public String getOutput() {","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, name, dl);","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"        return \"[D]\" + super.toString() + \" (\" + exactTime.getMonth() + \" \"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"                + exactTime.getDayOfMonth() + \" \" + exactTime.getYear() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Shawn532":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.task;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"import java.time.Period;","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    public String eventTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public LocalDate exactTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    public Event(String name, String eventTime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"        super(name);","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"            this.exactTime \u003d LocalDate.parse(eventTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"            System.out.println(\"Wrong input format!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"    public boolean needToRemind() {","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"            return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"        } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"            LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"            Period period \u003d Period.between(now, exactTime);","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"            return (period.getYears() \u003d\u003d 0 \u0026\u0026 period.getMonths() \u003d\u003d 0 \u0026\u0026 period.getDays() \u003c\u003d 7);","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"    public String getOutput() {","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"        return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, name, eventTime);","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"        return \"[E]\" + super.toString() + \" (\" + exactTime.getMonth() + \" \"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"                + exactTime.getDayOfMonth() + \" \" + exactTime.getYear() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Shawn532":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.task;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"    public String name;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"    public boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    public Task() {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    public void unMark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Shawn532"},"content":"    public boolean needToRemind() {","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"Shawn532"},"content":"        return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"Shawn532"},"content":"    public String getOutput() {","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"Shawn532"},"content":"        return String.format(\"O | %d | %s \", isDone ? 1 : 0, name );","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Shawn532"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Shawn532"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"Shawn532"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Shawn532"},"content":"            return \"[] \" + this.name;","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"Shawn532"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Shawn532":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"package duke.task;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"        super(name);","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public boolean needToRemind() {","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        return !isDone;","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"    public String getOutput() {","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, name);","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"Shawn532"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Shawn532"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"Shawn532"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Shawn532":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"Shawn532":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"public class DukeTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"Shawn532":15}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"public class TodoTest {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"    public void addTodoTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"Shawn532"},"content":"        Todo newTodo \u003d new Todo(\"swim\");","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"Shawn532"},"content":"        assertEquals(newTodo.toString(), \"[T][] swim\");","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"Shawn532"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"Shawn532"},"content":"    @Test","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"Shawn532"},"content":"    public void markTodoTest() {","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"        Todo newTodo \u003d new Todo(\"play basketball\");","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"Shawn532"},"content":"        newTodo.mark();","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"Shawn532"},"content":"        assertEquals(\"[T][X] play basketball\", newTodo.toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"Shawn532"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"Shawn532"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"Shawn532":20}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"T | 0 | haha","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"T | 1 | heihei","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"T | 1 | ss","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"T | 1 | sdds","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"T | 1 | haha","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"E | 0 | read books | 2022-09-20","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"D | 0 | play basketball | 2022-09-20","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"D | 0 |  play basketball | 2022-09-20","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"D | 0 |  play basketball | 2022-09-20","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"Shawn532":9}},{"path":"tasks1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"D | 1 | do homework | 2022-12-30","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"E | 0 | project meeting | 2022-10-30","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"D | 0 | return book | 2022-09-20","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"T | 0 | haha","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"Shawn532":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shawn532"},"content":"todo watch basketball tutorials","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"Shawn532"},"content":"deadline lose weight /by the end of this semester","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"Shawn532"},"content":"event play basketball with Keanu /at Wednesday 6:00 - 7:30","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Shawn532"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"Shawn532"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"Shawn532"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Shawn532"},"content":"very happy","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Shawn532"},"content":"todo play computer games","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Shawn532"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Shawn532":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Shawn532"},"content":"if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Shawn532":1,"-":37}}]

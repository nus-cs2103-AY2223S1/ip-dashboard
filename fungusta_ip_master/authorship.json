[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"checkstyle {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fungusta":21,"-":40}},{"path":"src/main/java/duke/Client.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":" * Represents a client of the user.","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public class Client {","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"    private final String name;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"    private final int phoneNumber;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    private final String address;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     * Constructor for client class.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * @param name name of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * @param phoneNumber phone number of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * @param address address of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    public Client(String name, int phoneNumber, String address) {","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    public boolean samePhoneNumber(int phoneNumber) {","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"        return this.phoneNumber \u003d\u003d phoneNumber;","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @return String representation of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        return \"Name: \" + name + \"\\n\" +","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"                \"Phone Number: \" + phoneNumber + \"\\n\" +","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"                \"Address: \" + address;","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of client in save file format.","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     * @return String representation of client in save file format.","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        return name + \" \" + phoneNumber + \" \" + address;","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"fungusta":48}},{"path":"src/main/java/duke/ClientList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":" * Represents the client list of the user.","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"public class ClientList {","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    private final ArrayList\u003cClient\u003e clientList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    public void add(Client newClient) {","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"        clientList.add(newClient);","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    public int size() {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"        return clientList.size();","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     * Deletes client from client list and returns deleted client.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @param phoneNumber phone number of client to be deleted.","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @return deleted client.","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if no client has the phone number.","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public Client delete(int phoneNumber) throws DukeException {","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        for(Client client: clientList) {","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"            if(client.samePhoneNumber(phoneNumber)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"                clientList.remove(client);","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"                return client;","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        throw new DukeException(\"Client with this phone number does not exist\");","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"     * @return String representation of client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        for(Client client: clientList) {","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"            output.append(client.toString()).append(\"\\n\");","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        return output.toString();","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of client list for save file.","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     * @return String representation of client list for save file.","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"        for(Client client: clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"            output.append(client.toSaveString()).append(\"\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"        return output.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"fungusta":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * The Duke program implements a chatbot that","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * helps the user to keep track of various things.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":" * The program can take in tasks and add it to a","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":" * task list, list it out, delete tasks,","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":" * mark/unmark tasks and save the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":" * @author fungusta","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":" * @version 0.1","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":" * @since 2022-08-23","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"public class Duke {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    private final ClientList clientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * Constructor for class Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    public Duke() {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        this.clientList \u003d new ClientList();","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"        this.storage \u003d new Storage(\"data\", \"data/Tasks.txt\", \"data/Clients.txt\");","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        storage.startUpPullStorage(taskList, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     * Returns String output processed by Duke","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"     * @param input user input","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"     * @return String output from execution of commands","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"            return c.execute(taskList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"fungusta":48,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":" * Represents the errors encountered by the Duke application","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":" * during the running of the program.","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     * @param s error message.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        super(s);","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":17}},{"path":"src/main/java/duke/Instructions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":" * Represents the applications instructions that it recognises.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public enum Instructions {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"    bye, deadline, delete, event, list, mark, todo, unmark, find, client","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":" * Represents the parser that processes user input from UI.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     * Returns specific command to execute from processing user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     * @param input user input.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * @return specific command to execute.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if user input is of wrong format or unknown instruction.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    public static Command parseInput(String input) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        if (!input.contains(\" \")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"            return parseSingleWord(input);","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        String[] split \u003d input.split(\" \", 2); //Splits input into instruction word and information on task","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        String instruction \u003d split[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"        String info \u003d split[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        return parseMultipleWords(instruction, info);","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    private static Command parseSingleWord(String input) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        Instructions instructionInput \u003d convertToInstruction(input);","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"        switch (instructionInput) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        case bye:","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            return ExitCommand.of();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        case list:","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"List out clients or tasks?\");","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        case mark:","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        case unmark:","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(String.format(\"Choose which index to %s.\", input));","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(String.format(\"The description of a %s cannot be empty.\", input));","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"        case delete:","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Choose which index to delete.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"        case find:","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Input a keyword to find.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        case client:","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Input clients name, phone number and address\");","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Please input a correct command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    private static Command parseMultipleWords(String instruction, String info) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"        Instructions instructionInput \u003d convertToInstruction(instruction);","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        switch (instructionInput) {","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"        case list:","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"            return parseList(info);","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"        case delete:","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"            return parseDelete(info);","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        case mark:","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"            return parseMark(info,true);","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"        case unmark:","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"            return parseMark(info, false);","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"            return parseToDo(info);","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"            return parseDeadLine(info);","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"            return parseEvent(info);","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"        case find:","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"            return parseFind(info);","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"        case client:","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"            return parseClient(info);","lastModifiedDate":"2022-09-07"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Seems like that command is not in my programming :(\");","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"    private static Instructions convertToInstruction(String instruction) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"            return Instructions.valueOf(instruction);","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Sorry I do not understand what that means :(\");","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"    private static Command parseDelete(String info) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"            if (info.contains(\"client \")) {","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"fungusta"},"content":"                String index \u003d info.split(\"client \")[1];","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"fungusta"},"content":"                return new DeleteClientCommand(Integer.parseInt(index));","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"fungusta"},"content":"            return new DeleteTaskCommand(Integer.parseInt(info) - 1);","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"fungusta"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Deleting requires an integer as index\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":98,"author":{"gitId":"fungusta"},"content":"    private static Command parseMark(String indexString, boolean isMark) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"fungusta"},"content":"        int index;","lastModifiedDate":"2022-09-06"},{"lineNumber":100,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"fungusta"},"content":"            index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2022-09-06"},{"lineNumber":102,"author":{"gitId":"fungusta"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Marking/Unmarking requires an integer as index\");","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"fungusta"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-06"},{"lineNumber":107,"author":{"gitId":"fungusta"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2022-09-06"},{"lineNumber":108,"author":{"gitId":"fungusta"},"content":"        } else {","lastModifiedDate":"2022-09-06"},{"lineNumber":109,"author":{"gitId":"fungusta"},"content":"            return new UnMarkCommand(index);","lastModifiedDate":"2022-09-06"},{"lineNumber":110,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":111,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":112,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":113,"author":{"gitId":"fungusta"},"content":"    private static Command parseToDo(String info) {","lastModifiedDate":"2022-09-06"},{"lineNumber":114,"author":{"gitId":"fungusta"},"content":"        return new AddTaskCommand(info);","lastModifiedDate":"2022-09-07"},{"lineNumber":115,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":117,"author":{"gitId":"fungusta"},"content":"    private static Command parseDeadLine(String info) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":118,"author":{"gitId":"fungusta"},"content":"        if (info.contains(\" /by \")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"fungusta"},"content":"            String[] taskAndDeadline \u003d info.split(\" /by \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"fungusta"},"content":"            String deadlineTask \u003d taskAndDeadline[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"fungusta"},"content":"            String deadlineTiming \u003d taskAndDeadline[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"fungusta"},"content":"            return new AddTaskCommand(deadlineTask, Instructions.deadline, deadlineTiming);","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"fungusta"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Deadline does not have proper format.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":127,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":128,"author":{"gitId":"fungusta"},"content":"    private static Command parseEvent(String info) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":129,"author":{"gitId":"fungusta"},"content":"        if (info.contains(\" /at \")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"fungusta"},"content":"            String[] taskAndTiming \u003d info.split(\" /at \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"fungusta"},"content":"            String eventTask \u003d taskAndTiming[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":132,"author":{"gitId":"fungusta"},"content":"            String eventTiming \u003d taskAndTiming[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":133,"author":{"gitId":"fungusta"},"content":"            return new AddTaskCommand(eventTask, Instructions.event, eventTiming);","lastModifiedDate":"2022-09-07"},{"lineNumber":134,"author":{"gitId":"fungusta"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Event does not have proper format.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":139,"author":{"gitId":"fungusta"},"content":"    private static Command parseFind(String info) {","lastModifiedDate":"2022-09-06"},{"lineNumber":140,"author":{"gitId":"fungusta"},"content":"        return new FindCommand(info);","lastModifiedDate":"2022-09-06"},{"lineNumber":141,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"fungusta"},"content":"    private static Command parseClient(String info) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":144,"author":{"gitId":"fungusta"},"content":"        String[] nameNumberAddress \u003d info.split(\" \", 3);","lastModifiedDate":"2022-09-07"},{"lineNumber":145,"author":{"gitId":"fungusta"},"content":"        if (nameNumberAddress.length !\u003d 3) { //Guard clause","lastModifiedDate":"2022-09-10"},{"lineNumber":146,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"client needs to have a name, phone number and address\");","lastModifiedDate":"2022-09-10"},{"lineNumber":147,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":148,"author":{"gitId":"fungusta"},"content":"        String name \u003d nameNumberAddress[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":149,"author":{"gitId":"fungusta"},"content":"        int number \u003d Integer.parseInt(nameNumberAddress[1]);","lastModifiedDate":"2022-09-07"},{"lineNumber":150,"author":{"gitId":"fungusta"},"content":"        String address \u003d nameNumberAddress[2];","lastModifiedDate":"2022-09-07"},{"lineNumber":151,"author":{"gitId":"fungusta"},"content":"        return new AddClientCommand(name, number, address);","lastModifiedDate":"2022-09-07"},{"lineNumber":152,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":153,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":154,"author":{"gitId":"fungusta"},"content":"    private static Command parseList(String info) {","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"fungusta"},"content":"        return info.equals(\"task\") ? ListTaskCommand.of() : ListClientCommand.of();","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"fungusta"},"content":"     * Interprets information from saved file and returns the command to add the task on the line.","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"fungusta"},"content":"     * @param input saved file line of tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":162,"author":{"gitId":"fungusta"},"content":"     * @return specific command to execute.","lastModifiedDate":"2022-08-28"},{"lineNumber":163,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException If the file format is incorrect.","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"fungusta"},"content":"    public static Command parseSavedTaskList(String input) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":166,"author":{"gitId":"fungusta"},"content":"        //Saved input is in the format: Instruction integer(indicating mark) task etc.","lastModifiedDate":"2022-09-10"},{"lineNumber":167,"author":{"gitId":"fungusta"},"content":"        String[] inputSplit \u003d input.split(\" \", 3);","lastModifiedDate":"2022-09-09"},{"lineNumber":168,"author":{"gitId":"fungusta"},"content":"        String instruction \u003d inputSplit[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"fungusta"},"content":"        boolean done \u003d inputSplit[1].equals(\"1\");","lastModifiedDate":"2022-09-09"},{"lineNumber":170,"author":{"gitId":"fungusta"},"content":"        String task \u003d inputSplit[2];","lastModifiedDate":"2022-09-09"},{"lineNumber":171,"author":{"gitId":"fungusta"},"content":"        switch (Instructions.valueOf(instruction)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"fungusta"},"content":"            return new AddSavedTaskCommand(task, done);","lastModifiedDate":"2022-09-09"},{"lineNumber":174,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"fungusta"},"content":"            String[] taskAndBy \u003d task.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"fungusta"},"content":"            String deadlineTask \u003d taskAndBy[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":177,"author":{"gitId":"fungusta"},"content":"            String deadlineTiming \u003d taskAndBy[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":178,"author":{"gitId":"fungusta"},"content":"            return new AddSavedTaskCommand(deadlineTask, Instructions.deadline, deadlineTiming, done);","lastModifiedDate":"2022-09-09"},{"lineNumber":179,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"fungusta"},"content":"            String[] taskAndAt \u003d task.split(\" \", 2);","lastModifiedDate":"2022-08-31"},{"lineNumber":181,"author":{"gitId":"fungusta"},"content":"            String eventTask \u003d taskAndAt[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":182,"author":{"gitId":"fungusta"},"content":"            String eventTiming \u003d taskAndAt[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":183,"author":{"gitId":"fungusta"},"content":"            return new AddSavedTaskCommand(eventTask, Instructions.event, eventTiming, done);","lastModifiedDate":"2022-09-09"},{"lineNumber":184,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-08-28"},{"lineNumber":185,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"task list saved file input format incorrect\");","lastModifiedDate":"2022-09-10"},{"lineNumber":186,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":187,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":189,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":190,"author":{"gitId":"fungusta"},"content":"     * Interprets information from saved file and returns the command to add the client on the line","lastModifiedDate":"2022-09-10"},{"lineNumber":191,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":192,"author":{"gitId":"fungusta"},"content":"     * @param input saved file line of clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":193,"author":{"gitId":"fungusta"},"content":"     * @return AddSavedClientCommand","lastModifiedDate":"2022-09-10"},{"lineNumber":194,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if client list saved file is in wrong format","lastModifiedDate":"2022-09-10"},{"lineNumber":195,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":196,"author":{"gitId":"fungusta"},"content":"    public static Command parseSavedClientList(String input) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"fungusta"},"content":"        String[] inputSplit \u003d input.split(\" \", 3);","lastModifiedDate":"2022-09-09"},{"lineNumber":198,"author":{"gitId":"fungusta"},"content":"        String name \u003d inputSplit[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"fungusta"},"content":"        int phoneNumber;","lastModifiedDate":"2022-09-10"},{"lineNumber":200,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":201,"author":{"gitId":"fungusta"},"content":"            phoneNumber \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":202,"author":{"gitId":"fungusta"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":203,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Client List saved file is in wrong format.\");","lastModifiedDate":"2022-09-10"},{"lineNumber":204,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":205,"author":{"gitId":"fungusta"},"content":"        String address \u003d inputSplit[2];","lastModifiedDate":"2022-09-09"},{"lineNumber":206,"author":{"gitId":"fungusta"},"content":"        return new AddSavedClientCommand(name, phoneNumber, address);","lastModifiedDate":"2022-09-09"},{"lineNumber":207,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":208,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"fungusta":208}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":" * Represents the file used to store list of tasks","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    private final String folderPath;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    private final String taskFilePath;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    private final String clientFilePath;","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @param folderPath   The filepath to the data folder.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * @param taskFilePath The filepath to the text file containing the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public Storage(String folderPath, String taskFilePath, String clientFilePath) {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        this.taskFilePath \u003d taskFilePath;","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"        this.clientFilePath \u003d clientFilePath;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * Saves tasks in task list file.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"    public void saveTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"            FileWriter fw \u003d new FileWriter(taskFilePath);","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"            fw.write(taskList.toSaveString());","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"            fw.close();","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    public void saveClientList(ClientList clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"            FileWriter fw \u003d new FileWriter(clientFilePath);","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"            fw.write(clientList.toSaveString());","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"     * Takes tasks from task list file, creates folder","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"     * and file if it does not exist.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"     * Inputs the tasks into application\u0027s task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"    public void startUpPullStorage(TaskList taskList, ClientList clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"        createFolder();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"        createFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        pullSavedInformation(taskList, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"    private void createFolder() {","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"        new File(folderPath).mkdir();","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"    private void createFile() {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"            new File(taskFilePath).createNewFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"            new File(clientFilePath).createNewFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"     * Pulls from task and client list file and inputs","lastModifiedDate":"2022-09-10"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"     * the tasks and clients into application\u0027s task and client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"fungusta"},"content":"    private void pullSavedInformation(TaskList taskList, ClientList clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"fungusta"},"content":"        pullSavedTasks(taskList, clientList);","lastModifiedDate":"2022-09-10"},{"lineNumber":91,"author":{"gitId":"fungusta"},"content":"        pullSavedClients(taskList, clientList);","lastModifiedDate":"2022-09-10"},{"lineNumber":92,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":93,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"fungusta"},"content":"    private void pullSavedTasks(TaskList taskList, ClientList clientList) {","lastModifiedDate":"2022-09-10"},{"lineNumber":95,"author":{"gitId":"fungusta"},"content":"        File savedTasks \u003d new File(taskFilePath);","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"fungusta"},"content":"            Scanner scanner \u003d new Scanner(savedTasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"fungusta"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"fungusta"},"content":"                String nextInput \u003d scanner.nextLine();","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"fungusta"},"content":"                Command c \u003d Parser.parseSavedTaskList(nextInput);","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"fungusta"},"content":"                c.execute(taskList, this, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"fungusta"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":104,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-10"},{"lineNumber":105,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":106,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":107,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":108,"author":{"gitId":"fungusta"},"content":"    private void pullSavedClients(TaskList taskList, ClientList clientList) {","lastModifiedDate":"2022-09-10"},{"lineNumber":109,"author":{"gitId":"fungusta"},"content":"        File savedClients \u003d new File(clientFilePath);","lastModifiedDate":"2022-09-10"},{"lineNumber":110,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":111,"author":{"gitId":"fungusta"},"content":"            Scanner scanner \u003d new Scanner(savedClients);","lastModifiedDate":"2022-09-10"},{"lineNumber":112,"author":{"gitId":"fungusta"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"fungusta"},"content":"                String nextInput \u003d scanner.nextLine();","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"fungusta"},"content":"                Command c \u003d Parser.parseSavedClientList(nextInput);","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"fungusta"},"content":"                c.execute(taskList, this, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"fungusta"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":122,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"fungusta":122}},{"path":"src/main/java/duke/command/AddClientCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.*;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"    private final Client client;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     * Constructor for Add Client Command.","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     * @param name name of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * @param phoneNumber phone number of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * @param address address of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    public AddClientCommand(String name, int phoneNumber, String address) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        int length \u003d String.valueOf(phoneNumber).length();","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        if (length !\u003d 8) {","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Client phone number should be 8 numbers\");","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        this.client \u003d new Client(name, phoneNumber, address);","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * Adds client to client list and saves it in save file.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @param clientList list of clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @return String representation of how client list changed.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        clientList.add(client);","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        new SaveClientListCommand().execute(taskList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showNewClient(client, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"fungusta":39}},{"path":"src/main/java/duke/command/AddSavedClientCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.*;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public class AddSavedClientCommand extends Command {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"    private final Client client;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    public AddSavedClientCommand(String name, int phoneNumber, String address) {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"        this.client \u003d new Client(name, phoneNumber, address);","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Adds client to client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @param clientList list of clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     * @return nothing.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) {","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        clientList.add(client);","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"        return null;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"fungusta":27}},{"path":"src/main/java/duke/command/AddSavedTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":" * Represents a command to transfer saved file content into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"public class AddSavedTaskCommand extends Command {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    private static final Instructions TODO_INSTRUCTION \u003d Instructions.todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    private static final String TODO_TIMING \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final String task;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final Instructions type;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    private final String timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    private final boolean done;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * Constructor for AddSavedTaskCommand class,","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * to add todo tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @param done whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public AddSavedTaskCommand(String task, boolean done) {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        this.type \u003d TODO_INSTRUCTION;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d TODO_TIMING;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     * Another Constructor for AddSavedTaskCommand class,","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     * to add deadline or event tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"     * @param instruction specific instruction.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"     * @param timing timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"     * @param done whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"    public AddSavedTaskCommand(String task, Instructions instruction, String timing, boolean done) {","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        this.type \u003d instruction;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"     * Adds task to task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"     * @param clientList list of clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"     * @return nothing.","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if format of save file is wrong.","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"        Task savedTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"        switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"            savedTask \u003d new ToDos(task, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"            savedTask \u003d new Deadlines(task, timing, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"            savedTask \u003d new Events(task, timing, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Format of saved file is wrong\");","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"        taskList.add(savedTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"        return null;","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":79}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.*;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":" * Represents a command adding a new task into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    private static final boolean NOT_DONE \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    private static final String TODO_TIMING \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final String task;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final Instructions type;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    private final String timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * Constructor for AddUserCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    public AddTaskCommand(String task) {","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"        this.type \u003d Instructions.todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d TODO_TIMING;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * Constructor for AddUserCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @param instruction specific instruction.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     * @param timing timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    public AddTaskCommand(String task, Instructions instruction, String timing) {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        this.type \u003d instruction;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"     * Adds new task into task list and saves it in save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"     * @return String representation of how task list changed.","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if timing is of the wrong format.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"        Task newTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"        switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"            newTask \u003d new ToDos(task, NOT_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"            newTask \u003d new Deadlines(task, timing, NOT_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"            newTask \u003d new Events(task, timing, NOT_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Unknown Error\");","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"        new SaveTaskListCommand().execute(taskList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showAdd(taskList, newTask);","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":68}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to be executed by program.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * Runs command that will do various changes based on the command.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param clientList list of clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @return String response of Duke regarding user input.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if error occurs during execution of command.","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    public abstract String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":23}},{"path":"src/main/java/duke/command/CommandOutputs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.Client;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" * Represents UI of application","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"public class CommandOutputs {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Returns String of a welcome message for the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    public static String showWelcome() {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        return \"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"                \"Peter\u0027s personal chatbot\";","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * Returns String of a goodbye message for the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    public static String showGoodbye() {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        return \"Bye Bye See You Next Time!\";","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * Returns String of list of the tasks in Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @return return String of list of the tasks in Duke.","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException thrown if list is empty.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    public static String showTaskList(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"You do not have any tasks in the list\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"        assert taskList.size() \u003e 0;","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"        return \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"                taskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"     * Returns String of deleted task and updated number of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"     * @param deletedTask deleted task","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"    public static String showDelete(TaskList taskList, Task deletedTask) {","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"        String output \u003d \"I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"                deletedTask.toString() + \"\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        return taskList.size() \u003d\u003d 1 ? output + \"Now you have 1 task in the list\"","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"                : output + String.format(\"Now you have %d tasks in the list\", taskList.size());","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"     * Returns String of added task and updated number of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"     * @param newTask new task added.","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"    public static String showAdd(TaskList taskList, Task newTask) {","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"        String output \u003d \"I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"                newTask.toString() + \"\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        return taskList.size() \u003d\u003d 1 ? output + \"Now you have 1 task in the list\"","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"                : output + String.format(\"Now you have %d tasks in the list\", taskList.size());","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"     * Returns String of marked task.","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"     * @param index index of marked task in list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"    public static String showMark(TaskList taskList, int index) {","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"        return \"Weeeee! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"                taskList.get(index).toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"     * Returns String of unmarked task.","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"     * @param index index of unmarked task in list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"    public static String showUnmark(TaskList taskList, int index) {","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"fungusta"},"content":"        return \"Aw Mans... I\u0027ve unmarked this task:\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"fungusta"},"content":"                taskList.get(index).toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"fungusta"},"content":"     * Returns String of list of tasks that contains the inputted keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks that contains the inputted keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if no tasks contains the keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"fungusta"},"content":"    public static String showKeywordList(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"fungusta"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"You do not have any tasks in the list that contains the keyword\");","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"fungusta"},"content":"        assert taskList.size() \u003e 0;","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"fungusta"},"content":"        return \"Here are matching tasks in your list:\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"fungusta"},"content":"                taskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":107,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":108,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":109,"author":{"gitId":"fungusta"},"content":"     * Returns String of added client and updated number of clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":110,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":111,"author":{"gitId":"fungusta"},"content":"     * @param client added client.","lastModifiedDate":"2022-09-10"},{"lineNumber":112,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list added to.","lastModifiedDate":"2022-09-10"},{"lineNumber":113,"author":{"gitId":"fungusta"},"content":"     * @return String of added client and updated number of clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":114,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":115,"author":{"gitId":"fungusta"},"content":"    public static String showNewClient(Client client, ClientList clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"fungusta"},"content":"        String output \u003d \"Nice! Added this client:\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"fungusta"},"content":"                client.toString() + \"\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"fungusta"},"content":"        return clientList.size() \u003d\u003d 1 ? output + \"Now you have 1 client\"","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"fungusta"},"content":"                : output + String.format(\"Now you have %d clients\", clientList.size());","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":121,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":123,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":124,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":125,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":126,"author":{"gitId":"fungusta"},"content":"     * @return String representation of client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":127,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if there are no clients in the list.","lastModifiedDate":"2022-09-10"},{"lineNumber":128,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":129,"author":{"gitId":"fungusta"},"content":"    public static String showClientList(ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"fungusta"},"content":"        if (clientList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-07"},{"lineNumber":131,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"You have no clients right now rip\");","lastModifiedDate":"2022-09-07"},{"lineNumber":132,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":133,"author":{"gitId":"fungusta"},"content":"        return \"Clients:\\n\" +","lastModifiedDate":"2022-09-07"},{"lineNumber":134,"author":{"gitId":"fungusta"},"content":"                clientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":135,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":136,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":137,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":138,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":139,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of deleted client.","lastModifiedDate":"2022-09-10"},{"lineNumber":140,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":141,"author":{"gitId":"fungusta"},"content":"     * @param client deleted client.","lastModifiedDate":"2022-09-10"},{"lineNumber":142,"author":{"gitId":"fungusta"},"content":"     * @return String representation of deleted client.","lastModifiedDate":"2022-09-10"},{"lineNumber":143,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":144,"author":{"gitId":"fungusta"},"content":"    public static String showDeletedClient(Client client) {","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"fungusta"},"content":"        return \"Deleted Client:\\n\" +","lastModifiedDate":"2022-09-07"},{"lineNumber":146,"author":{"gitId":"fungusta"},"content":"                client;","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":148,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"fungusta":148}},{"path":"src/main/java/duke/command/DeleteClientCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.*;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public class DeleteClientCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"    int phoneNumber;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"     * Constructor for Delete Client Command.","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     * @param phoneNumber phone number of client.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public DeleteClientCommand(int phoneNumber) {","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     * Deletes client from client list and returns String representation of deleted client.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * @return String representation of deleted client.","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if no client has this phone number.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        Client deletedClient \u003d clientList.delete(phoneNumber);","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"        new SaveClientListCommand().execute(taskList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showDeletedClient(deletedClient);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"fungusta":34}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" * Represents a command to delete a task from task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final int index;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param index index of task to delete in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * Deletes task from task list and saves changes made to task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param storage  files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @return String representation of deleted task.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if index does is out of bounds in the task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        Task deletedTask;","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"            deletedTask \u003d taskList.get(index);","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(String.format(\"Index %s does not exist on the list.\", index + 1));","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"        taskList.delete(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"        new SaveTaskListCommand().execute(taskList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showDelete(taskList, deletedTask);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":45}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * Represents a command to exit program.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    private static final ExitCommand EXIT_COMMAND \u003d new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * Returns the exit command.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * @return exit command.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    public static ExitCommand of() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        return EXIT_COMMAND;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * Closes program.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * @param storage  files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @return String representation of goodbye.","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        System.exit(0); //placeholder method to end the application","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showGoodbye();","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command that finds a task by searching for a keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * Constructor for FindCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param keyword word user wants to find in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * Finds all tasks in task list that contains keyword and runs a list keyword command.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param storage  files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @return String of tasks that contain the keyword.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if keyword list is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        TaskList keywordList \u003d taskList.findKeyWord(keyword);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        return new ListKeywordCommand().execute(keywordList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":37}},{"path":"src/main/java/duke/command/ListClientCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"public class ListClientCommand extends Command {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    private static final ListClientCommand LIST_CLIENT_COMMAND \u003d new ListClientCommand();","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     * Returns the list command.","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * @return list command.","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    public static ListClientCommand of() {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        return LIST_CLIENT_COMMAND;","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * Returns string representation of client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @return String representation of client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if no clients.","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showClientList(clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"fungusta":34}},{"path":"src/main/java/duke/command/ListKeywordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command that lists out tasks that contains keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class ListKeywordCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * Communicates with user interface to print list of tasks containing the keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * @param keywordList list of tasks containing the keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @return String representation of keyword list.","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if keyword list is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList keywordList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showKeywordList(keywordList);","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":26}},{"path":"src/main/java/duke/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to list the contents of task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private static final ListTaskCommand LIST_COMMAND \u003d new ListTaskCommand();","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Returns the list command.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @return list command.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    public static ListTaskCommand of() {","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        return LIST_COMMAND;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * Tells user interface to print task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param storage  files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @return String representation of task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if no tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        return CommandOutputs.showTaskList(taskList);","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":36}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to mark a task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for MarkCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param index index of task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * Marks task in task list and saves it.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param storage  files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @return String representation of task being marked.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if task is already marked or index does not exist.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"            if (taskList.get(index).isDone()) { //Guard Clause","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Task is already marked\");","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"            taskList.get(index).markTask();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"            new SaveTaskListCommand().execute(taskList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"            return CommandOutputs.showMark(taskList, index);","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(String.format(\"Index %d does not exist on the list.\", index + 1)); //plus 1 for indexing","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":46}},{"path":"src/main/java/duke/command/SaveClientListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"public class SaveClientListCommand extends Command {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"     * Saves tasks in task list to save file.","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     * @param storage  files storing task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * @return nothing.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        storage.saveClientList(clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        return null;","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"fungusta":21}},{"path":"src/main/java/duke/command/SaveTaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * Represents a command to save task list in save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"public class SaveTaskListCommand extends Command {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     * Saves tasks in task list to save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * @param storage  files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @return nothing.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        return null;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":24}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.ClientList;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to unmark a task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * Constructor for UnMarkCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param index index of task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    public UnMarkCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * Unmarks task in task list and saves it.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @param clientList client list.","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @return nothing.","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if task is already unmarked or index does not exist.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    public String execute(TaskList taskList, Storage storage, ClientList clientList) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"            if (!taskList.get(index).isDone()) { //Guard Clause","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Task is already unmarked\");","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"            taskList.get(index).unmarkTask();","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"            new SaveTaskListCommand().execute(taskList, storage, clientList);","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"            return CommandOutputs.showUnmark(taskList, index);","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(String.format(\"Index %d does not exist on the list.\", index + 1)); //plus 1 for indexing","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":48}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.main;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"fungusta":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.main;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"fungusta":34}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for Deadlines class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param deadline deadline task is due by in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if deadline is not in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    public Deadlines(String task, String deadline, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"        super(task, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        this.deadline \u003d convertDateTime(deadline);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", deadline.format(format));","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the deadline task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the deadline task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        return \"deadline \" + super.toSaveString() + \" \" + deadline.format(format);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"     * Returns date and timing reformat as a LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     * @param dateTime date and timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"     * @return LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if dateTime is not in format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    private LocalDateTime convertDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        return Task.getLocalDateTime(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":61}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents an event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class Events extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final LocalDateTime timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for Events class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param timing timing event occurs in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if timing is not in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    public Events(String task, String timing, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"        super(task, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d convertDateTime(timing);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", timing.format(format));","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the event task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     * @return String representation of event task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        return \"event \" + super.toSaveString() + \" \" + timing.format(format);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"     * Returns date and timing reformat as a LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     * @param dateTime date and timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"     * @return LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if dateTime is not in format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    public LocalDateTime convertDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        return Task.getLocalDateTime(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":61}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":" * Represents a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    private final String task;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * Constructor for Task class.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     *               true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     *               false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public Task(String task, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"    public void markTask() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"        return isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        return task.contains(keyword);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        if (isDone()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"            return \"[X] \" + task;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"        return \"[ ] \" + task;","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"        int d \u003d isDone() ? 1 : 0;","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        return String.format(\"%d %s\", d, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"     * Returns date and timing reformat as a LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"     * @param dateTime date and timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"     * @return LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if dateTime is not in format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"    public static LocalDateTime getLocalDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"            String[] split \u003d dateTime.split(\" \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"            DateTimeFormatter formatDate \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"            DateTimeFormatter formatTime \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"            LocalDate date \u003d LocalDate.parse(split[0], formatDate);","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"            LocalTime time \u003d LocalTime.parse(split[1], formatTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"            return LocalDateTime.of(date, time);","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Date and time needs to be in the format dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":89}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":" * Represents a list of taskList in the application.","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"public class TaskList {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    public int size() {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        return taskList.size();","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    public Task get(int i) {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        return taskList.get(i);","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"        taskList.add(task);","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * Returns a list of all taskList that contains the keyword","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     * @param keyword word that user wants to find","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     * @return arraylist of taskList that contains keyword.","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    public TaskList findKeyWord(String keyword) {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"        TaskList findList \u003d new TaskList();","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"                findList.add(task);","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        return findList;","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of task list in saved file format.","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"     * @return String representation of task list in saved file format.","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"        for(Task task : taskList) {","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"            output.append(task.toSaveString()).append(\"\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"        return output.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"     * Returns String representation of task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"     * @return String representation of task list.","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"            output.append(i + 1).append(\".\");","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"            output.append(taskList.get(i).toString());","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"            output.append(\"\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"        return output.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"fungusta":76}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":" * Represents a todo task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"     * Constructor for ToDos class.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    public ToDos(String task, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        super(task, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of todo task.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @return String representation of todo.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of todo task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @return String representation of todo task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        return \"todo \" + super.toSaveString();","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":39}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"fungusta":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.command.CommandOutputs;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/DaUser.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/DaDuke.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(CommandOutputs.showWelcome(), dukeImage));","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"fungusta":56}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" nodeOrientation\u003d\"RIGHT_TO_LEFT\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"fungusta":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" style\u003d\"-fx-background-color: grey; -fx-background-radius: 25;\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" style\u003d\"-fx-background-color: orange; -fx-background-radius: 25;\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"            \u003cFont name\u003d\"Jokerman\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" maxHeight\u003d\"100000\" prefWidth\u003d\"395.0\" style\u003d\"-fx-background-color: lightblue; -fx-background-radius: 25;\"/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"fungusta":23}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import duke.command.ListTaskCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check parse input for bye and list\")","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    public void checkParseInputByeAndList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        Command c1 \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        Command c2 \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"            c1 \u003d Parser.parseInput(\"bye\");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"            c2 \u003d Parser.parseInput(\"list\");","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        assertEquals(ExitCommand.of(), c1);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        assertEquals(ListTaskCommand.of(), c2);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":29}},{"path":"src/test/java/duke/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class DeadlinesTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check String Output of Deadline Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public void checkStringOutputOfDeadlineObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"            output \u003d new Deadlines(\"read book\", \"10/10/2000 1000\", false).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"[D][ ] read book (by: Oct 10 2000 1000)\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Save String Output of Deadline Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public void checkSaveStringOutputOfDeadlineObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"            output \u003d new Deadlines(\"read book\", \"10/10/2000 1000\", false).toSaveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"deadline 0 read book 10/10/2000 1000\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":35}},{"path":"src/test/java/duke/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class EventsTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check String Output of Event Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public void checkStringOutputOfEventObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"            output \u003d new Events(\"read book\", \"10/10/2000 1000\", false).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"[E][ ] read book (at: Oct 10 2000 1000)\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Save String Output of Event Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public void checkSaveStringOutputOfEventObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"            output \u003d new Events(\"read book\", \"10/10/2000 1000\", false).toSaveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"event 0 read book 10/10/2000 1000\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":35}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import java.time.Month;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Get Local Date Time\")","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    public void checkGetLocalDateTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        LocalDateTime output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"            output \u003d Task.getLocalDateTime(\"27/10/2000 1000\");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"            assertEquals(LocalDateTime.of(2000, Month.OCTOBER, 27, 10, 0), output);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":27}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check String Output of Todo Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    public void checkStringOutputOfToDoObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"        String output \u003d new ToDos(\"read book\", false).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"[T][ ] read book\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Save String Output of Todo Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    public void checkSaveStringOutputOfToDoObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        String output \u003d new ToDos(\"read book\", false).toSaveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"todo 0 read book\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"mark 2","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"todo stuff","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"mark 3","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"unmark 3","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"delete 3","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"bye","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":12}}]

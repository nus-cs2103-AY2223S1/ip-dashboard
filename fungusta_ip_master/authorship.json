[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"checkstyle {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fungusta":6,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":" * The Duke program implements a chatbot that","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":" * helps the user to keep track of various things.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * The program can take in tasks and add it to a","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" * task list, list it out, delete tasks,","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":" * mark/unmark tasks and save the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":" * @author fungusta","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":" * @version 0.1","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":" * @since 2022-08-23","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    private boolean isBye; //Indicates if bye was input by user","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * Constructor for class Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param folderPath The filepath to the data folder.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param filePath The filepath to the Duke.txt file contained in the data folder.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    public Duke(String folderPath, String filePath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        this.storage \u003d new Storage(folderPath, filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        this.isBye \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"     * Runs the Duke program.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"     * Communicates to the components in the Duke program to process","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"     * user inputs and produce outputs explaining the results","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"    public void run() {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        ui.showDividerLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        storage.startUpPullStorage(ui, taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        while (!isBye \u0026\u0026 ui.hasInput()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"                String input \u003d ui.takeInput();","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"                ui.showDividerLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"                Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"                isBye \u003d c.isBye();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"            } finally {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"                ui.showDividerLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"        new Duke(\"./data\", \"./data/Duke.txt\").run();","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"fungusta":63,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":" * Represents the errors encountered by the Duke application","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":" * during the running of the program.","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     * @param s error message.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public DukeException(String s) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        super(s);","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":17}},{"path":"src/main/java/duke/Instructions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":" * Represents the applications instructions that it recognises.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public enum Instructions {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"    bye, deadline, delete, event, list, mark, todo, unmark, find","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.command.AddSavedInputCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.command.AddUserCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":" * Represents the parser that processes user input from UI.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * Returns specific command to execute from processing user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * @param input user input from UI.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @return specific command to execute.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if user input is of wrong format or unknown instruction","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    public static Command parseInput(String input) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        if (!input.contains(\" \")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"            switch (Instructions.valueOf(input)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"            case bye:","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"                return ExitCommand.of();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"            case list:","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"                return ListCommand.of();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"            case mark:","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"            case unmark:","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(String.format(\"Choose which index to %s.\", input));","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"            case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"            case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"            case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(String.format(\"The description of a %s cannot be empty.\", input));","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"            case delete:","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Choose which index to delete.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"            case find:","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Input a keyword to find.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            default:","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Sorry I do not understand what that means :(\");","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        String instruction \u003d split[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"        String info \u003d split[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"        switch (Instructions.valueOf(instruction)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"        case delete:","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"                return new DeleteCommand(Integer.parseInt(info) - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Deleting requires an integer as index\");","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(String.format(\"Index %s does not exist on the list.\", info));","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        case mark:","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"                return new MarkCommand(Integer.parseInt(info) - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Marking requires an integer as index\");","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"        case unmark:","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"                return new UnMarkCommand(Integer.parseInt(info) - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Unmarking requires an integer as index\");","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"            return new AddUserCommand(info);","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"            if (info.contains(\" /by \")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"                String[] taskAndDeadline \u003d info.split(\" /by \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"                String task1 \u003d taskAndDeadline[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"                String timing1 \u003d taskAndDeadline[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"                return new AddUserCommand(task1, Instructions.deadline, timing1);","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Deadline does not have proper format.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"            if (info.contains(\" /at \")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"                String[] taskAndTiming \u003d info.split(\" /at \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"                String task2 \u003d taskAndTiming[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"                String timing2 \u003d taskAndTiming[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"                return new AddUserCommand(task2, Instructions.event, timing2);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Event does not have proper format.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"fungusta"},"content":"        case find:","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"fungusta"},"content":"            return new FindCommand(info);","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Unknown Error\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"fungusta"},"content":"     * Interprets information from saved file and returns the command to add the task on the line.","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"fungusta"},"content":"     * @param input saved file line of contents.","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"fungusta"},"content":"     * @return specific command to execute.","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException If the file format is incorrect.","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"fungusta"},"content":"    public static Command parseSavedInput(String input) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"fungusta"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"fungusta"},"content":"        String instruction \u003d inputSplit[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"fungusta"},"content":"        String information \u003d inputSplit[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"fungusta"},"content":"        String[] temp \u003d information.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"fungusta"},"content":"        boolean done \u003d temp[0].equals(\"1\");","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"fungusta"},"content":"        String task \u003d temp[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"fungusta"},"content":"        switch (Instructions.valueOf(instruction)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"fungusta"},"content":"            return new AddSavedInputCommand(task, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"fungusta"},"content":"            String[] taskAndBy \u003d task.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"fungusta"},"content":"            String task1 \u003d taskAndBy[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"fungusta"},"content":"            String deadline \u003d taskAndBy[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"fungusta"},"content":"            return new AddSavedInputCommand(task1, Instructions.deadline, deadline, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"fungusta"},"content":"            String[] taskAndAt \u003d temp[1].split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"fungusta"},"content":"            String task2 \u003d taskAndAt[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"fungusta"},"content":"            String timing \u003d taskAndAt[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"fungusta"},"content":"            return new AddSavedInputCommand(task2, Instructions.event, timing, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Saved file input format incorrect\");","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"fungusta":130}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" * Represents the file used to store list of tasks","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final String folderPath;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @param folderPath The filepath to the data folder.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     * @param filePath The filepath to the text file containing the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    public Storage(String folderPath, String filePath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * Saves tasks in task list file.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    public void saveTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"                fw.write(taskList.get(i).toSaveString() + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"     * Takes tasks from task list file, creates folder","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"     * and file if it does not exist.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"     * Inputs the tasks into application\u0027s task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of application.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    public void startUpPullStorage(Ui ui, TaskList taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"        createFolder();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        createFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"        pullSavedTaskList(ui, taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    private void createFolder() {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        new File(folderPath).mkdir();","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"    private void createFile() {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"            new File(filePath).createNewFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"     * Pulls from task list file and inputs","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"     * the tasks into application\u0027s task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of application.","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"    private void pullSavedTaskList(Ui ui, TaskList taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"        File save \u003d new File(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"            Scanner s \u003d new Scanner(save);","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"                Parser.parseSavedInput(s.nextLine()).execute(taskList, ui, this);","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"fungusta":88}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * Represents a list of tasks in the application.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    public int size() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    public Task get(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"        return tasks.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     * Returns a list of all tasks that contains the keyword","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     * @param keyword word that user wants to find","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"     * @return arraylist of tasks that contains keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"    public TaskList findKeyWord(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"        TaskList findList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"                findList.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"        return findList;","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"fungusta":49}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * Represents UI of application","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * Constructor for class Ui.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    public Ui() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * Prints a welcome message for the user.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Hello! I\u0027m Fungusta\\n\" + \"Peter\u0027s personal chatbot\");","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * Prints a goodbye message for the user.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Bye Bye See You Next Time!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     * Gets first line of user input into system.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     * @return next line in scanner.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    public String takeInput() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     * Checks if there is another line of user input into system.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"     * @return true if scanner has next line, else false.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"    public boolean hasInput() {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"        return sc.hasNextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     * Prints a divider line.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"    public void showDividerLine() {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"     * Prints an error message due to wrong input by user.","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"     * @param message error message generated","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"     * Prints list of the tasks in Duke.","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException thrown if list is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"    public void showListOut(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"You do not have any tasks in the list\");","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"            System.out.println(i + 1 + \".\" + taskList.get(i).toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"     * Prints deleted task and updated number of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"     * @param deletedTask deleted task","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"fungusta"},"content":"    public void showDelete(TaskList taskList, Task deletedTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"fungusta"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"fungusta"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"fungusta"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" task in the list\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"fungusta"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"fungusta"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"fungusta"},"content":"     * Prints added task and updated number of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"fungusta"},"content":"     * @param newTask new task added.","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"fungusta"},"content":"    public void showAdd(TaskList taskList, Task newTask) {","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Nice! Added this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"fungusta"},"content":"        System.out.println(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"fungusta"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"fungusta"},"content":"            System.out.println(\"Now you have 1 task in the list\");","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"fungusta"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"fungusta"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"fungusta"},"content":"     * Prints marked task","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"fungusta"},"content":"     * @param index index of marked task in list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"fungusta"},"content":"    public void showMark(TaskList taskList, int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Weeeee! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"fungusta"},"content":"        System.out.println(taskList.get(index).toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"fungusta"},"content":"     * Prints unmarked task.","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"fungusta"},"content":"     * @param index index of unmarked task in list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"fungusta"},"content":"    public void showUnmark(TaskList taskList, int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Aw Mans... I\u0027ve unmarked this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"fungusta"},"content":"        System.out.println(taskList.get(index).toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"fungusta"},"content":"     * Prints list of tasks that contains the inputted keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"fungusta"},"content":"     * @param taskList list of tasks that contains the inputted keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if no tasks contains the keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"fungusta"},"content":"    public void showKeywordList(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"fungusta"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"You do not have any tasks in the list that contains the keyword\");","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"fungusta"},"content":"        System.out.println(\"Here are matching tasks in your list:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"fungusta"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"fungusta"},"content":"            System.out.println(i + 1 + \".\" + taskList.get(i).toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":154}},{"path":"src/main/java/duke/command/AddSavedInputCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Instructions;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.task.Events;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":" * Represents a command to transfer saved file content into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"public class AddSavedInputCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    private static final Instructions TODO_INSTRUCTION \u003d Instructions.todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    private static final String TODO_TIMING \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    private final String task;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    private final Instructions type;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    private final String timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    private final boolean done;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * Constructor for AddSavedInputCommand class,","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * to add todo tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param done whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    public AddSavedInputCommand(String task, boolean done) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        this.type \u003d TODO_INSTRUCTION;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d TODO_TIMING;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     * Another Constructor for AddSavedInputCommand class,","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     * to add deadline or event tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"     * @param instruction specific instruction.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"     * @param timing timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"     * @param done whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    public AddSavedInputCommand(String task, Instructions instruction, String timing, boolean done) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"        this.type \u003d instruction;","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"     * Adds saved task into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if timing is of the wrong format.","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"        Task savedTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"        switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"            savedTask \u003d new ToDos(task, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"            savedTask \u003d new Deadlines(task, timing, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"            savedTask \u003d new Events(task, timing, done);","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"            savedTask \u003d null; //Should never be reached","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"        taskList.add(savedTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":86}},{"path":"src/main/java/duke/command/AddUserCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Instructions;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.task.Events;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":" * Represents a command adding a new task into task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"public class AddUserCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    private static final boolean NOT_DONE \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    private static final String TODO_TIMING \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    private final String task;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    private final Instructions type;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    private final String timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * Constructor for AddUserCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    public AddUserCommand(String task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"        this.type \u003d Instructions.todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d TODO_TIMING;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     * Constructor for AddUserCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"     * @param instruction specific instruction.","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"     * @param timing timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"    public AddUserCommand(String task, Instructions instruction, String timing) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        this.type \u003d instruction;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"     * Adds new task into task list and saves it in save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if timing is of the wrong format.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"        Task newTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"        switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"        case todo:","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"            newTask \u003d new ToDos(task, NOT_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"        case deadline:","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"            newTask \u003d new Deadlines(task, timing, NOT_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        case event:","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"            newTask \u003d new Events(task, timing, NOT_DONE);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"            break;","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"            newTask \u003d null; //Should never be reached","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"        ui.showAdd(taskList, newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"        new SaveCommand().execute(taskList, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":77}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to be executed by program.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final boolean isBye;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for Command class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param isBye whether command is an exit command.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    public Command(boolean isBye) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        this.isBye \u003d isBye;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    public boolean isBye() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        return isBye;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * Runs command that will do various changes based on the command.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if error occurs during execution of command.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":36}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to delete a task from task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param index index of task to delete in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * Deletes task from task list and saves changes made to task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        taskList.delete(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        ui.showDelete(taskList, deletedTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        new SaveCommand().execute(taskList, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":38}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * Represents a command to exit program.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    private static final ExitCommand EXIT_COMMAND \u003d new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * Constructor for ExitCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    private ExitCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        super(true);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * Returns the exit command.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @return exit command.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    public static ExitCommand of() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        return EXIT_COMMAND;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * Closes program.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command that finds a task by searching for a keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * Constructor for FindCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param keyword word user wants to find in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * Finds all tasks in task list that contains keyword and runs a list keyword command.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if keyword list is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        TaskList keywordList \u003d taskList.findKeyWord(keyword);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        new ListKeywordCommand().execute(keywordList, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to list the contents of task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private static final ListCommand LIST_COMMAND \u003d new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for ListCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    private ListCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * Returns the list command.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * @return list command.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public static ListCommand of() {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        return LIST_COMMAND;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * Tells user interface to print task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if list is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"        ui.showListOut(taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":42}},{"path":"src/main/java/duke/command/ListKeywordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command that lists out tasks that contains keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class ListKeywordCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     * Constructor for ListKeywordCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    public ListKeywordCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * Communicates with user interface to print list of tasks containing the keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @param keywordList list of tasks containing the keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if keyword list is empty.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList keywordList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        ui.showKeywordList(keywordList);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to mark a task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for MarkCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param index index of task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     * Marks task in task list and saves it.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if task is already marked or index does not exist.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"            if (!taskList.get(index).getDone()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"                taskList.get(index).markTask();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"                ui.showMark(taskList, index);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Task is already marked\");","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"            //plus 1 for indexing","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(String.format(\"Index %d does not exist on the list.\", index + 1));","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        new SaveCommand().execute(taskList, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":47}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":" * Represents a command to save task list in save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     * Constructor for SaveCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    public SaveCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     * Saves tasks in task list to save file.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":30}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a command to unmark a task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    private final int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     * Constructor for UnMarkCommand class.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param index index of task in task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    public UnMarkCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        super(false);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"     * Unmarks task in task list and saves it.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"     * @param taskList task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"     * @param ui user interface of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"     * @param storage files storing task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if task is already unmarked or index does not exist.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"            if (taskList.get(index).getDone()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"                taskList.get(index).unmarkTask();","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"                ui.showUnmark(taskList, index);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"                throw new DukeException(\"Task is already unmarked\");","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"            //plus 1 for indexing","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(String.format(\"Index %d does not exist on the list.\", index + 1));","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"        new SaveCommand().execute(taskList, ui, storage);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":49}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for Deadlines class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param deadline deadline task is due by in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if deadline is not in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    public Deadlines(String task, String deadline, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        super(task, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        this.deadline \u003d convertDateTime(deadline);","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", deadline.format(format));","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the deadline task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the deadline task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"        return \"deadline \" + super.toSaveString() + \" \" + deadline.format(format);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     * Returns date and timing reformat as a LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"     * @param dateTime date and timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"     * @return LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if dateTime is not in format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"    private LocalDateTime convertDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"        return Task.getLocalDateTime(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":62}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":" * Represents an event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class Events extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    private final LocalDateTime timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     * Constructor for Events class.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"     * @param timing timing event occurs in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if timing is not in the format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    public Events(String task, String timing, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        super(task, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        this.timing \u003d convertDateTime(timing);","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", timing.format(format));","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the event task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"     * @return String representation of event task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"        return \"event \" + super.toSaveString() + \" \" + timing.format(format);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"     * Returns date and timing reformat as a LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"     * @param dateTime date and timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"     * @return LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if dateTime is not in format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"    public LocalDateTime convertDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"        return Task.getLocalDateTime(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":" * Represents a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    private final String task;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"     * Constructor for Task class.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     *               true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     *               false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public Task(String task, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"    public void markTask() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    public void unmarkTask() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"fungusta"},"content":"        return isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"fungusta"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"fungusta"},"content":"        return task.contains(keyword);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"fungusta"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"fungusta"},"content":"            return \"[X] \" + task;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"fungusta"},"content":"        return \"[ ] \" + task;","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of the task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"fungusta"},"content":"     * @return String representation of the task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"fungusta"},"content":"        int d \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"fungusta"},"content":"        return String.format(\"%d %s\", d, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"fungusta"},"content":"     * Returns date and timing reformat as a LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"fungusta"},"content":"     * @param dateTime date and timing in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"fungusta"},"content":"     * @return LocalDateTime in MMM dd yyyy HHmm","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"fungusta"},"content":"     * @throws DukeException if dateTime is not in format dd/MM/yyyy HHmm.","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"fungusta"},"content":"    public static LocalDateTime getLocalDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"fungusta"},"content":"            String[] split \u003d dateTime.split(\" \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"fungusta"},"content":"            DateTimeFormatter formatDate \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"fungusta"},"content":"            DateTimeFormatter formatTime \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"fungusta"},"content":"            LocalDate date \u003d LocalDate.parse(split[0], formatDate);","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"fungusta"},"content":"            LocalTime time \u003d LocalTime.parse(split[1], formatTime);","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"fungusta"},"content":"            return LocalDateTime.of(date, time);","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"fungusta"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"fungusta"},"content":"            throw new DukeException(\"Date and time needs to be in the format dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":89}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":" * Represents a todo task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"     * Constructor for ToDos class.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"     * @param task task in String.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"     *             true if marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"     *             false if unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    public ToDos(String task, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        super(task, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of todo task.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"     * @return String representation of todo.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"     * Returns a String representation of todo task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"     * @return String representation of todo task in save file format.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"fungusta"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"fungusta"},"content":"        return \"todo \" + super.toSaveString();","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"fungusta":39}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check parse input for bye and list\")","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    public void checkParseInputByeAndList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"        Command c1 \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        Command c2 \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"            c1 \u003d Parser.parseInput(\"bye\");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"            c2 \u003d Parser.parseInput(\"list\");","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"        assertEquals(ExitCommand.of(), c1);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        assertEquals(ListCommand.of(), c2);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":29}},{"path":"src/test/java/duke/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class DeadlinesTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check String Output of Deadline Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public void checkStringOutputOfDeadlineObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"            output \u003d new Deadlines(\"read book\", \"10/10/2000 1000\", false).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"[D][ ] read book (by: Oct 10 2000 1000)\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Save String Output of Deadline Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public void checkSaveStringOutputOfDeadlineObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"            output \u003d new Deadlines(\"read book\", \"10/10/2000 1000\", false).toSaveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"deadline 0 read book 10/10/2000 1000\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":35}},{"path":"src/test/java/duke/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"public class EventsTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check String Output of Event Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    public void checkStringOutputOfEventObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"            output \u003d new Events(\"read book\", \"10/10/2000 1000\", false).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"[E][ ] read book (at: Oct 10 2000 1000)\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Save String Output of Event Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    public void checkSaveStringOutputOfEventObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"        String output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"fungusta"},"content":"            output \u003d new Events(\"read book\", \"10/10/2000 1000\", false).toSaveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"event 0 read book 10/10/2000 1000\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":35}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"import java.time.Month;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Get Local Date Time\")","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    public void checkGetLocalDateTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"        LocalDateTime output \u003d null;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"            output \u003d Task.getLocalDateTime(\"27/10/2000 1000\");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"            assertEquals(LocalDateTime.of(2000, Month.OCTOBER, 27, 10, 0), output);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"            fail(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"fungusta"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":27}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check String Output of Todo Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"    public void checkStringOutputOfToDoObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"        String output \u003d new ToDos(\"read book\", false).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"[T][ ] read book\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"fungusta"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"fungusta"},"content":"    @DisplayName(\"Check Save String Output of Todo Object\")","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"fungusta"},"content":"    public void checkSaveStringOutputOfToDoObject() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"fungusta"},"content":"        String output \u003d new ToDos(\"read book\", false).toSaveString();","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"fungusta"},"content":"        assertEquals(\"todo 0 read book\", output);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"fungusta"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"fungusta"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"fungusta"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fungusta"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"fungusta"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"fungusta"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"fungusta"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"fungusta"},"content":"mark 2","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"fungusta"},"content":"todo stuff","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"fungusta"},"content":"mark 3","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"fungusta"},"content":"unmark 3","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"fungusta"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"fungusta"},"content":"delete 3","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"fungusta"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"fungusta"},"content":"bye","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"fungusta":12}}]
